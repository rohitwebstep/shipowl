
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model emailConfig
 * 
 */
export type emailConfig = $Result.DefaultSelection<Prisma.$emailConfigPayload>
/**
 * Model admin
 * 
 */
export type admin = $Result.DefaultSelection<Prisma.$adminPayload>
/**
 * Model permission
 * 
 */
export type permission = $Result.DefaultSelection<Prisma.$permissionPayload>
/**
 * Model adminHasPermission
 * 
 */
export type adminHasPermission = $Result.DefaultSelection<Prisma.$adminHasPermissionPayload>
/**
 * Model companyDetail
 * 
 */
export type companyDetail = $Result.DefaultSelection<Prisma.$companyDetailPayload>
/**
 * Model bankAccount
 * 
 */
export type bankAccount = $Result.DefaultSelection<Prisma.$bankAccountPayload>
/**
 * Model adminStaff
 * 
 */
export type adminStaff = $Result.DefaultSelection<Prisma.$adminStaffPayload>
/**
 * Model loginLog
 * 
 */
export type loginLog = $Result.DefaultSelection<Prisma.$loginLogPayload>
/**
 * Model activityLog
 * 
 */
export type activityLog = $Result.DefaultSelection<Prisma.$activityLogPayload>
/**
 * Model country
 * 
 */
export type country = $Result.DefaultSelection<Prisma.$countryPayload>
/**
 * Model state
 * 
 */
export type state = $Result.DefaultSelection<Prisma.$statePayload>
/**
 * Model city
 * 
 */
export type city = $Result.DefaultSelection<Prisma.$cityPayload>
/**
 * Model warehouse
 * 
 */
export type warehouse = $Result.DefaultSelection<Prisma.$warehousePayload>
/**
 * Model category
 * 
 */
export type category = $Result.DefaultSelection<Prisma.$categoryPayload>
/**
 * Model brand
 * 
 */
export type brand = $Result.DefaultSelection<Prisma.$brandPayload>
/**
 * Model productRequest
 * 
 */
export type productRequest = $Result.DefaultSelection<Prisma.$productRequestPayload>
/**
 * Model product
 * 
 */
export type product = $Result.DefaultSelection<Prisma.$productPayload>
/**
 * Model productVariant
 * 
 */
export type productVariant = $Result.DefaultSelection<Prisma.$productVariantPayload>
/**
 * Model courierCompany
 * 
 */
export type courierCompany = $Result.DefaultSelection<Prisma.$courierCompanyPayload>
/**
 * Model highRto
 * 
 */
export type highRto = $Result.DefaultSelection<Prisma.$highRtoPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more EmailConfigs
 * const emailConfigs = await prisma.emailConfig.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more EmailConfigs
   * const emailConfigs = await prisma.emailConfig.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.emailConfig`: Exposes CRUD operations for the **emailConfig** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EmailConfigs
    * const emailConfigs = await prisma.emailConfig.findMany()
    * ```
    */
  get emailConfig(): Prisma.emailConfigDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin`: Exposes CRUD operations for the **admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.adminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.permissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adminHasPermission`: Exposes CRUD operations for the **adminHasPermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdminHasPermissions
    * const adminHasPermissions = await prisma.adminHasPermission.findMany()
    * ```
    */
  get adminHasPermission(): Prisma.adminHasPermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.companyDetail`: Exposes CRUD operations for the **companyDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyDetails
    * const companyDetails = await prisma.companyDetail.findMany()
    * ```
    */
  get companyDetail(): Prisma.companyDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bankAccount`: Exposes CRUD operations for the **bankAccount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BankAccounts
    * const bankAccounts = await prisma.bankAccount.findMany()
    * ```
    */
  get bankAccount(): Prisma.bankAccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adminStaff`: Exposes CRUD operations for the **adminStaff** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdminStaffs
    * const adminStaffs = await prisma.adminStaff.findMany()
    * ```
    */
  get adminStaff(): Prisma.adminStaffDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.loginLog`: Exposes CRUD operations for the **loginLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoginLogs
    * const loginLogs = await prisma.loginLog.findMany()
    * ```
    */
  get loginLog(): Prisma.loginLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.activityLog`: Exposes CRUD operations for the **activityLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ActivityLogs
    * const activityLogs = await prisma.activityLog.findMany()
    * ```
    */
  get activityLog(): Prisma.activityLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.countryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.state`: Exposes CRUD operations for the **state** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more States
    * const states = await prisma.state.findMany()
    * ```
    */
  get state(): Prisma.stateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.city`: Exposes CRUD operations for the **city** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cities
    * const cities = await prisma.city.findMany()
    * ```
    */
  get city(): Prisma.cityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.warehouse`: Exposes CRUD operations for the **warehouse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Warehouses
    * const warehouses = await prisma.warehouse.findMany()
    * ```
    */
  get warehouse(): Prisma.warehouseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.categoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.brandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productRequest`: Exposes CRUD operations for the **productRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductRequests
    * const productRequests = await prisma.productRequest.findMany()
    * ```
    */
  get productRequest(): Prisma.productRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.productDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productVariant`: Exposes CRUD operations for the **productVariant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductVariants
    * const productVariants = await prisma.productVariant.findMany()
    * ```
    */
  get productVariant(): Prisma.productVariantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.courierCompany`: Exposes CRUD operations for the **courierCompany** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CourierCompanies
    * const courierCompanies = await prisma.courierCompany.findMany()
    * ```
    */
  get courierCompany(): Prisma.courierCompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.highRto`: Exposes CRUD operations for the **highRto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HighRtos
    * const highRtos = await prisma.highRto.findMany()
    * ```
    */
  get highRto(): Prisma.highRtoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    emailConfig: 'emailConfig',
    admin: 'admin',
    permission: 'permission',
    adminHasPermission: 'adminHasPermission',
    companyDetail: 'companyDetail',
    bankAccount: 'bankAccount',
    adminStaff: 'adminStaff',
    loginLog: 'loginLog',
    activityLog: 'activityLog',
    country: 'country',
    state: 'state',
    city: 'city',
    warehouse: 'warehouse',
    category: 'category',
    brand: 'brand',
    productRequest: 'productRequest',
    product: 'product',
    productVariant: 'productVariant',
    courierCompany: 'courierCompany',
    highRto: 'highRto',
    Payment: 'Payment',
    Order: 'Order',
    OrderItem: 'OrderItem'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "emailConfig" | "admin" | "permission" | "adminHasPermission" | "companyDetail" | "bankAccount" | "adminStaff" | "loginLog" | "activityLog" | "country" | "state" | "city" | "warehouse" | "category" | "brand" | "productRequest" | "product" | "productVariant" | "courierCompany" | "highRto" | "payment" | "order" | "orderItem"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      emailConfig: {
        payload: Prisma.$emailConfigPayload<ExtArgs>
        fields: Prisma.emailConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.emailConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.emailConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          findFirst: {
            args: Prisma.emailConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.emailConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          findMany: {
            args: Prisma.emailConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>[]
          }
          create: {
            args: Prisma.emailConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          createMany: {
            args: Prisma.emailConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.emailConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          update: {
            args: Prisma.emailConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          deleteMany: {
            args: Prisma.emailConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.emailConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.emailConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$emailConfigPayload>
          }
          aggregate: {
            args: Prisma.EmailConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmailConfig>
          }
          groupBy: {
            args: Prisma.emailConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmailConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.emailConfigCountArgs<ExtArgs>
            result: $Utils.Optional<EmailConfigCountAggregateOutputType> | number
          }
        }
      }
      admin: {
        payload: Prisma.$adminPayload<ExtArgs>
        fields: Prisma.adminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.adminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.adminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          findFirst: {
            args: Prisma.adminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.adminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          findMany: {
            args: Prisma.adminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>[]
          }
          create: {
            args: Prisma.adminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          createMany: {
            args: Prisma.adminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.adminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          update: {
            args: Prisma.adminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          deleteMany: {
            args: Prisma.adminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.adminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.adminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.adminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.adminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      permission: {
        payload: Prisma.$permissionPayload<ExtArgs>
        fields: Prisma.permissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findFirst: {
            args: Prisma.permissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          findMany: {
            args: Prisma.permissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>[]
          }
          create: {
            args: Prisma.permissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          createMany: {
            args: Prisma.permissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.permissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          update: {
            args: Prisma.permissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          deleteMany: {
            args: Prisma.permissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.permissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.permissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      adminHasPermission: {
        payload: Prisma.$adminHasPermissionPayload<ExtArgs>
        fields: Prisma.adminHasPermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.adminHasPermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.adminHasPermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          findFirst: {
            args: Prisma.adminHasPermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.adminHasPermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          findMany: {
            args: Prisma.adminHasPermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>[]
          }
          create: {
            args: Prisma.adminHasPermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          createMany: {
            args: Prisma.adminHasPermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.adminHasPermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          update: {
            args: Prisma.adminHasPermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          deleteMany: {
            args: Prisma.adminHasPermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.adminHasPermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.adminHasPermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminHasPermissionPayload>
          }
          aggregate: {
            args: Prisma.AdminHasPermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdminHasPermission>
          }
          groupBy: {
            args: Prisma.adminHasPermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminHasPermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.adminHasPermissionCountArgs<ExtArgs>
            result: $Utils.Optional<AdminHasPermissionCountAggregateOutputType> | number
          }
        }
      }
      companyDetail: {
        payload: Prisma.$companyDetailPayload<ExtArgs>
        fields: Prisma.companyDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.companyDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.companyDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          findFirst: {
            args: Prisma.companyDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.companyDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          findMany: {
            args: Prisma.companyDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>[]
          }
          create: {
            args: Prisma.companyDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          createMany: {
            args: Prisma.companyDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.companyDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          update: {
            args: Prisma.companyDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          deleteMany: {
            args: Prisma.companyDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.companyDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.companyDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyDetailPayload>
          }
          aggregate: {
            args: Prisma.CompanyDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyDetail>
          }
          groupBy: {
            args: Prisma.companyDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.companyDetailCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyDetailCountAggregateOutputType> | number
          }
        }
      }
      bankAccount: {
        payload: Prisma.$bankAccountPayload<ExtArgs>
        fields: Prisma.bankAccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bankAccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bankAccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          findFirst: {
            args: Prisma.bankAccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bankAccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          findMany: {
            args: Prisma.bankAccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>[]
          }
          create: {
            args: Prisma.bankAccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          createMany: {
            args: Prisma.bankAccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.bankAccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          update: {
            args: Prisma.bankAccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          deleteMany: {
            args: Prisma.bankAccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bankAccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.bankAccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bankAccountPayload>
          }
          aggregate: {
            args: Prisma.BankAccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBankAccount>
          }
          groupBy: {
            args: Prisma.bankAccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<BankAccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.bankAccountCountArgs<ExtArgs>
            result: $Utils.Optional<BankAccountCountAggregateOutputType> | number
          }
        }
      }
      adminStaff: {
        payload: Prisma.$adminStaffPayload<ExtArgs>
        fields: Prisma.adminStaffFieldRefs
        operations: {
          findUnique: {
            args: Prisma.adminStaffFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.adminStaffFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          findFirst: {
            args: Prisma.adminStaffFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.adminStaffFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          findMany: {
            args: Prisma.adminStaffFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>[]
          }
          create: {
            args: Prisma.adminStaffCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          createMany: {
            args: Prisma.adminStaffCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.adminStaffDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          update: {
            args: Prisma.adminStaffUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          deleteMany: {
            args: Prisma.adminStaffDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.adminStaffUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.adminStaffUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminStaffPayload>
          }
          aggregate: {
            args: Prisma.AdminStaffAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdminStaff>
          }
          groupBy: {
            args: Prisma.adminStaffGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminStaffGroupByOutputType>[]
          }
          count: {
            args: Prisma.adminStaffCountArgs<ExtArgs>
            result: $Utils.Optional<AdminStaffCountAggregateOutputType> | number
          }
        }
      }
      loginLog: {
        payload: Prisma.$loginLogPayload<ExtArgs>
        fields: Prisma.loginLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.loginLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.loginLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          findFirst: {
            args: Prisma.loginLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.loginLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          findMany: {
            args: Prisma.loginLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>[]
          }
          create: {
            args: Prisma.loginLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          createMany: {
            args: Prisma.loginLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.loginLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          update: {
            args: Prisma.loginLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          deleteMany: {
            args: Prisma.loginLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.loginLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.loginLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginLogPayload>
          }
          aggregate: {
            args: Prisma.LoginLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLoginLog>
          }
          groupBy: {
            args: Prisma.loginLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<LoginLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.loginLogCountArgs<ExtArgs>
            result: $Utils.Optional<LoginLogCountAggregateOutputType> | number
          }
        }
      }
      activityLog: {
        payload: Prisma.$activityLogPayload<ExtArgs>
        fields: Prisma.activityLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.activityLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.activityLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          findFirst: {
            args: Prisma.activityLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.activityLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          findMany: {
            args: Prisma.activityLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>[]
          }
          create: {
            args: Prisma.activityLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          createMany: {
            args: Prisma.activityLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.activityLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          update: {
            args: Prisma.activityLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          deleteMany: {
            args: Prisma.activityLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.activityLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.activityLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activityLogPayload>
          }
          aggregate: {
            args: Prisma.ActivityLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActivityLog>
          }
          groupBy: {
            args: Prisma.activityLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActivityLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.activityLogCountArgs<ExtArgs>
            result: $Utils.Optional<ActivityLogCountAggregateOutputType> | number
          }
        }
      }
      country: {
        payload: Prisma.$countryPayload<ExtArgs>
        fields: Prisma.countryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.countryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.countryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          findFirst: {
            args: Prisma.countryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.countryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          findMany: {
            args: Prisma.countryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>[]
          }
          create: {
            args: Prisma.countryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          createMany: {
            args: Prisma.countryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.countryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          update: {
            args: Prisma.countryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          deleteMany: {
            args: Prisma.countryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.countryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.countryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$countryPayload>
          }
          aggregate: {
            args: Prisma.CountryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry>
          }
          groupBy: {
            args: Prisma.countryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CountryGroupByOutputType>[]
          }
          count: {
            args: Prisma.countryCountArgs<ExtArgs>
            result: $Utils.Optional<CountryCountAggregateOutputType> | number
          }
        }
      }
      state: {
        payload: Prisma.$statePayload<ExtArgs>
        fields: Prisma.stateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          findFirst: {
            args: Prisma.stateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          findMany: {
            args: Prisma.stateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>[]
          }
          create: {
            args: Prisma.stateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          createMany: {
            args: Prisma.stateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.stateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          update: {
            args: Prisma.stateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          deleteMany: {
            args: Prisma.stateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.stateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$statePayload>
          }
          aggregate: {
            args: Prisma.StateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateState>
          }
          groupBy: {
            args: Prisma.stateGroupByArgs<ExtArgs>
            result: $Utils.Optional<StateGroupByOutputType>[]
          }
          count: {
            args: Prisma.stateCountArgs<ExtArgs>
            result: $Utils.Optional<StateCountAggregateOutputType> | number
          }
        }
      }
      city: {
        payload: Prisma.$cityPayload<ExtArgs>
        fields: Prisma.cityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          findFirst: {
            args: Prisma.cityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          findMany: {
            args: Prisma.cityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>[]
          }
          create: {
            args: Prisma.cityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          createMany: {
            args: Prisma.cityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          update: {
            args: Prisma.cityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          deleteMany: {
            args: Prisma.cityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cityPayload>
          }
          aggregate: {
            args: Prisma.CityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCity>
          }
          groupBy: {
            args: Prisma.cityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CityGroupByOutputType>[]
          }
          count: {
            args: Prisma.cityCountArgs<ExtArgs>
            result: $Utils.Optional<CityCountAggregateOutputType> | number
          }
        }
      }
      warehouse: {
        payload: Prisma.$warehousePayload<ExtArgs>
        fields: Prisma.warehouseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.warehouseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.warehouseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          findFirst: {
            args: Prisma.warehouseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.warehouseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          findMany: {
            args: Prisma.warehouseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>[]
          }
          create: {
            args: Prisma.warehouseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          createMany: {
            args: Prisma.warehouseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.warehouseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          update: {
            args: Prisma.warehouseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          deleteMany: {
            args: Prisma.warehouseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.warehouseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.warehouseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$warehousePayload>
          }
          aggregate: {
            args: Prisma.WarehouseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWarehouse>
          }
          groupBy: {
            args: Prisma.warehouseGroupByArgs<ExtArgs>
            result: $Utils.Optional<WarehouseGroupByOutputType>[]
          }
          count: {
            args: Prisma.warehouseCountArgs<ExtArgs>
            result: $Utils.Optional<WarehouseCountAggregateOutputType> | number
          }
        }
      }
      category: {
        payload: Prisma.$categoryPayload<ExtArgs>
        fields: Prisma.categoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          findFirst: {
            args: Prisma.categoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          findMany: {
            args: Prisma.categoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>[]
          }
          create: {
            args: Prisma.categoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          createMany: {
            args: Prisma.categoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.categoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          update: {
            args: Prisma.categoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          deleteMany: {
            args: Prisma.categoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.categoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.categoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      brand: {
        payload: Prisma.$brandPayload<ExtArgs>
        fields: Prisma.brandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.brandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.brandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          findFirst: {
            args: Prisma.brandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.brandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          findMany: {
            args: Prisma.brandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>[]
          }
          create: {
            args: Prisma.brandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          createMany: {
            args: Prisma.brandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.brandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          update: {
            args: Prisma.brandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          deleteMany: {
            args: Prisma.brandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.brandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.brandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.brandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.brandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      productRequest: {
        payload: Prisma.$productRequestPayload<ExtArgs>
        fields: Prisma.productRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          findFirst: {
            args: Prisma.productRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          findMany: {
            args: Prisma.productRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>[]
          }
          create: {
            args: Prisma.productRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          createMany: {
            args: Prisma.productRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          update: {
            args: Prisma.productRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          deleteMany: {
            args: Prisma.productRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productRequestPayload>
          }
          aggregate: {
            args: Prisma.ProductRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductRequest>
          }
          groupBy: {
            args: Prisma.productRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.productRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ProductRequestCountAggregateOutputType> | number
          }
        }
      }
      product: {
        payload: Prisma.$productPayload<ExtArgs>
        fields: Prisma.productFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          findFirst: {
            args: Prisma.productFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          findMany: {
            args: Prisma.productFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>[]
          }
          create: {
            args: Prisma.productCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          createMany: {
            args: Prisma.productCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          update: {
            args: Prisma.productUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          deleteMany: {
            args: Prisma.productDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.productGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.productCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      productVariant: {
        payload: Prisma.$productVariantPayload<ExtArgs>
        fields: Prisma.productVariantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productVariantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productVariantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          findFirst: {
            args: Prisma.productVariantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productVariantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          findMany: {
            args: Prisma.productVariantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>[]
          }
          create: {
            args: Prisma.productVariantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          createMany: {
            args: Prisma.productVariantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productVariantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          update: {
            args: Prisma.productVariantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          deleteMany: {
            args: Prisma.productVariantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productVariantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productVariantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productVariantPayload>
          }
          aggregate: {
            args: Prisma.ProductVariantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductVariant>
          }
          groupBy: {
            args: Prisma.productVariantGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantGroupByOutputType>[]
          }
          count: {
            args: Prisma.productVariantCountArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantCountAggregateOutputType> | number
          }
        }
      }
      courierCompany: {
        payload: Prisma.$courierCompanyPayload<ExtArgs>
        fields: Prisma.courierCompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.courierCompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.courierCompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          findFirst: {
            args: Prisma.courierCompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.courierCompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          findMany: {
            args: Prisma.courierCompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>[]
          }
          create: {
            args: Prisma.courierCompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          createMany: {
            args: Prisma.courierCompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.courierCompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          update: {
            args: Prisma.courierCompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          deleteMany: {
            args: Prisma.courierCompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.courierCompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.courierCompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierCompanyPayload>
          }
          aggregate: {
            args: Prisma.CourierCompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourierCompany>
          }
          groupBy: {
            args: Prisma.courierCompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourierCompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.courierCompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CourierCompanyCountAggregateOutputType> | number
          }
        }
      }
      highRto: {
        payload: Prisma.$highRtoPayload<ExtArgs>
        fields: Prisma.highRtoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.highRtoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.highRtoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          findFirst: {
            args: Prisma.highRtoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.highRtoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          findMany: {
            args: Prisma.highRtoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>[]
          }
          create: {
            args: Prisma.highRtoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          createMany: {
            args: Prisma.highRtoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.highRtoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          update: {
            args: Prisma.highRtoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          deleteMany: {
            args: Prisma.highRtoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.highRtoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.highRtoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$highRtoPayload>
          }
          aggregate: {
            args: Prisma.HighRtoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHighRto>
          }
          groupBy: {
            args: Prisma.highRtoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HighRtoGroupByOutputType>[]
          }
          count: {
            args: Prisma.highRtoCountArgs<ExtArgs>
            result: $Utils.Optional<HighRtoCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    emailConfig?: emailConfigOmit
    admin?: adminOmit
    permission?: permissionOmit
    adminHasPermission?: adminHasPermissionOmit
    companyDetail?: companyDetailOmit
    bankAccount?: bankAccountOmit
    adminStaff?: adminStaffOmit
    loginLog?: loginLogOmit
    activityLog?: activityLogOmit
    country?: countryOmit
    state?: stateOmit
    city?: cityOmit
    warehouse?: warehouseOmit
    category?: categoryOmit
    brand?: brandOmit
    productRequest?: productRequestOmit
    product?: productOmit
    productVariant?: productVariantOmit
    courierCompany?: courierCompanyOmit
    highRto?: highRtoOmit
    payment?: PaymentOmit
    order?: OrderOmit
    orderItem?: OrderItemOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AdminCountOutputType
   */

  export type AdminCountOutputType = {
    staff: number
    bankAccounts: number
    permissions: number
  }

  export type AdminCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | AdminCountOutputTypeCountStaffArgs
    bankAccounts?: boolean | AdminCountOutputTypeCountBankAccountsArgs
    permissions?: boolean | AdminCountOutputTypeCountPermissionsArgs
  }

  // Custom InputTypes
  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminCountOutputType
     */
    select?: AdminCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeCountStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminStaffWhereInput
  }

  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeCountBankAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bankAccountWhereInput
  }

  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeCountPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminHasPermissionWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    adminPermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adminPermissions?: boolean | PermissionCountOutputTypeCountAdminPermissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountAdminPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminHasPermissionWhereInput
  }


  /**
   * Count Type CountryCountOutputType
   */

  export type CountryCountOutputType = {
    states: number
    cities: number
    warehouses: number
    highRtos: number
    admins: number
    originProducts: number
    shippingProducts: number
    shippingOrders: number
    billingOrders: number
  }

  export type CountryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    states?: boolean | CountryCountOutputTypeCountStatesArgs
    cities?: boolean | CountryCountOutputTypeCountCitiesArgs
    warehouses?: boolean | CountryCountOutputTypeCountWarehousesArgs
    highRtos?: boolean | CountryCountOutputTypeCountHighRtosArgs
    admins?: boolean | CountryCountOutputTypeCountAdminsArgs
    originProducts?: boolean | CountryCountOutputTypeCountOriginProductsArgs
    shippingProducts?: boolean | CountryCountOutputTypeCountShippingProductsArgs
    shippingOrders?: boolean | CountryCountOutputTypeCountShippingOrdersArgs
    billingOrders?: boolean | CountryCountOutputTypeCountBillingOrdersArgs
  }

  // Custom InputTypes
  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CountryCountOutputType
     */
    select?: CountryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountStatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stateWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountCitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cityWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountWarehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: warehouseWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountHighRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: highRtoWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountAdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountOriginProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountShippingProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountShippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountBillingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type StateCountOutputType
   */

  export type StateCountOutputType = {
    cities: number
    warehouses: number
    highRtos: number
    admins: number
    shippingOrders: number
    billingOrders: number
  }

  export type StateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cities?: boolean | StateCountOutputTypeCountCitiesArgs
    warehouses?: boolean | StateCountOutputTypeCountWarehousesArgs
    highRtos?: boolean | StateCountOutputTypeCountHighRtosArgs
    admins?: boolean | StateCountOutputTypeCountAdminsArgs
    shippingOrders?: boolean | StateCountOutputTypeCountShippingOrdersArgs
    billingOrders?: boolean | StateCountOutputTypeCountBillingOrdersArgs
  }

  // Custom InputTypes
  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StateCountOutputType
     */
    select?: StateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountCitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cityWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountWarehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: warehouseWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountHighRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: highRtoWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountAdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountShippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * StateCountOutputType without action
   */
  export type StateCountOutputTypeCountBillingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type CityCountOutputType
   */

  export type CityCountOutputType = {
    warehouses: number
    highRtos: number
    admins: number
    shippingOrders: number
    billingOrders: number
  }

  export type CityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    warehouses?: boolean | CityCountOutputTypeCountWarehousesArgs
    highRtos?: boolean | CityCountOutputTypeCountHighRtosArgs
    admins?: boolean | CityCountOutputTypeCountAdminsArgs
    shippingOrders?: boolean | CityCountOutputTypeCountShippingOrdersArgs
    billingOrders?: boolean | CityCountOutputTypeCountBillingOrdersArgs
  }

  // Custom InputTypes
  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CityCountOutputType
     */
    select?: CityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountWarehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: warehouseWhereInput
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountHighRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: highRtoWhereInput
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountAdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminWhereInput
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountShippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CityCountOutputType without action
   */
  export type CityCountOutputTypeCountBillingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    products: number
    productRequests: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | CategoryCountOutputTypeCountProductsArgs
    productRequests?: boolean | CategoryCountOutputTypeCountProductRequestsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productRequestWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    products: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | BrandCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    variants: number
    orderItems: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variants?: boolean | ProductCountOutputTypeCountVariantsArgs
    orderItems?: boolean | ProductCountOutputTypeCountOrderItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productVariantWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type ProductVariantCountOutputType
   */

  export type ProductVariantCountOutputType = {
    orderItems: number
  }

  export type ProductVariantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItems?: boolean | ProductVariantCountOutputTypeCountOrderItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariantCountOutputType
     */
    select?: ProductVariantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductVariantCountOutputType without action
   */
  export type ProductVariantCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type PaymentCountOutputType
   */

  export type PaymentCountOutputType = {
    orders: number
  }

  export type PaymentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | PaymentCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentCountOutputType
     */
    select?: PaymentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    items: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrderCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Models
   */

  /**
   * Model emailConfig
   */

  export type AggregateEmailConfig = {
    _count: EmailConfigCountAggregateOutputType | null
    _avg: EmailConfigAvgAggregateOutputType | null
    _sum: EmailConfigSumAggregateOutputType | null
    _min: EmailConfigMinAggregateOutputType | null
    _max: EmailConfigMaxAggregateOutputType | null
  }

  export type EmailConfigAvgAggregateOutputType = {
    id: number | null
    smtp_port: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type EmailConfigSumAggregateOutputType = {
    id: bigint | null
    smtp_port: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type EmailConfigMinAggregateOutputType = {
    id: bigint | null
    panel: string | null
    module: string | null
    subject: string | null
    action: string | null
    html_template: string | null
    smtp_host: string | null
    smtp_secure: boolean | null
    smtp_port: number | null
    smtp_username: string | null
    smtp_password: string | null
    from_email: string | null
    from_name: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
  }

  export type EmailConfigMaxAggregateOutputType = {
    id: bigint | null
    panel: string | null
    module: string | null
    subject: string | null
    action: string | null
    html_template: string | null
    smtp_host: string | null
    smtp_secure: boolean | null
    smtp_port: number | null
    smtp_username: string | null
    smtp_password: string | null
    from_email: string | null
    from_name: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
  }

  export type EmailConfigCountAggregateOutputType = {
    id: number
    panel: number
    module: number
    subject: number
    action: number
    html_template: number
    smtp_host: number
    smtp_secure: number
    smtp_port: number
    smtp_username: number
    smtp_password: number
    from_email: number
    from_name: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    _all: number
  }


  export type EmailConfigAvgAggregateInputType = {
    id?: true
    smtp_port?: true
    createdBy?: true
    updatedBy?: true
  }

  export type EmailConfigSumAggregateInputType = {
    id?: true
    smtp_port?: true
    createdBy?: true
    updatedBy?: true
  }

  export type EmailConfigMinAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    subject?: true
    action?: true
    html_template?: true
    smtp_host?: true
    smtp_secure?: true
    smtp_port?: true
    smtp_username?: true
    smtp_password?: true
    from_email?: true
    from_name?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
  }

  export type EmailConfigMaxAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    subject?: true
    action?: true
    html_template?: true
    smtp_host?: true
    smtp_secure?: true
    smtp_port?: true
    smtp_username?: true
    smtp_password?: true
    from_email?: true
    from_name?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
  }

  export type EmailConfigCountAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    subject?: true
    action?: true
    html_template?: true
    smtp_host?: true
    smtp_secure?: true
    smtp_port?: true
    smtp_username?: true
    smtp_password?: true
    from_email?: true
    from_name?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    _all?: true
  }

  export type EmailConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emailConfig to aggregate.
     */
    where?: emailConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailConfigs to fetch.
     */
    orderBy?: emailConfigOrderByWithRelationInput | emailConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: emailConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned emailConfigs
    **/
    _count?: true | EmailConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmailConfigAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmailConfigSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmailConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmailConfigMaxAggregateInputType
  }

  export type GetEmailConfigAggregateType<T extends EmailConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateEmailConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmailConfig[P]>
      : GetScalarType<T[P], AggregateEmailConfig[P]>
  }




  export type emailConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: emailConfigWhereInput
    orderBy?: emailConfigOrderByWithAggregationInput | emailConfigOrderByWithAggregationInput[]
    by: EmailConfigScalarFieldEnum[] | EmailConfigScalarFieldEnum
    having?: emailConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmailConfigCountAggregateInputType | true
    _avg?: EmailConfigAvgAggregateInputType
    _sum?: EmailConfigSumAggregateInputType
    _min?: EmailConfigMinAggregateInputType
    _max?: EmailConfigMaxAggregateInputType
  }

  export type EmailConfigGroupByOutputType = {
    id: bigint
    panel: string
    module: string
    subject: string
    action: string
    html_template: string | null
    smtp_host: string
    smtp_secure: boolean
    smtp_port: number
    smtp_username: string
    smtp_password: string
    from_email: string
    from_name: string
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    _count: EmailConfigCountAggregateOutputType | null
    _avg: EmailConfigAvgAggregateOutputType | null
    _sum: EmailConfigSumAggregateOutputType | null
    _min: EmailConfigMinAggregateOutputType | null
    _max: EmailConfigMaxAggregateOutputType | null
  }

  type GetEmailConfigGroupByPayload<T extends emailConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmailConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmailConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmailConfigGroupByOutputType[P]>
            : GetScalarType<T[P], EmailConfigGroupByOutputType[P]>
        }
      >
    >


  export type emailConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    panel?: boolean
    module?: boolean
    subject?: boolean
    action?: boolean
    html_template?: boolean
    smtp_host?: boolean
    smtp_secure?: boolean
    smtp_port?: boolean
    smtp_username?: boolean
    smtp_password?: boolean
    from_email?: boolean
    from_name?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
  }, ExtArgs["result"]["emailConfig"]>



  export type emailConfigSelectScalar = {
    id?: boolean
    panel?: boolean
    module?: boolean
    subject?: boolean
    action?: boolean
    html_template?: boolean
    smtp_host?: boolean
    smtp_secure?: boolean
    smtp_port?: boolean
    smtp_username?: boolean
    smtp_password?: boolean
    from_email?: boolean
    from_name?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
  }

  export type emailConfigOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "panel" | "module" | "subject" | "action" | "html_template" | "smtp_host" | "smtp_secure" | "smtp_port" | "smtp_username" | "smtp_password" | "from_email" | "from_name" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole", ExtArgs["result"]["emailConfig"]>

  export type $emailConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "emailConfig"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      panel: string
      module: string
      subject: string
      action: string
      html_template: string | null
      smtp_host: string
      smtp_secure: boolean
      smtp_port: number
      smtp_username: string
      smtp_password: string
      from_email: string
      from_name: string
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
    }, ExtArgs["result"]["emailConfig"]>
    composites: {}
  }

  type emailConfigGetPayload<S extends boolean | null | undefined | emailConfigDefaultArgs> = $Result.GetResult<Prisma.$emailConfigPayload, S>

  type emailConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<emailConfigFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmailConfigCountAggregateInputType | true
    }

  export interface emailConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['emailConfig'], meta: { name: 'emailConfig' } }
    /**
     * Find zero or one EmailConfig that matches the filter.
     * @param {emailConfigFindUniqueArgs} args - Arguments to find a EmailConfig
     * @example
     * // Get one EmailConfig
     * const emailConfig = await prisma.emailConfig.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends emailConfigFindUniqueArgs>(args: SelectSubset<T, emailConfigFindUniqueArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EmailConfig that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {emailConfigFindUniqueOrThrowArgs} args - Arguments to find a EmailConfig
     * @example
     * // Get one EmailConfig
     * const emailConfig = await prisma.emailConfig.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends emailConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, emailConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailConfig that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigFindFirstArgs} args - Arguments to find a EmailConfig
     * @example
     * // Get one EmailConfig
     * const emailConfig = await prisma.emailConfig.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends emailConfigFindFirstArgs>(args?: SelectSubset<T, emailConfigFindFirstArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmailConfig that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigFindFirstOrThrowArgs} args - Arguments to find a EmailConfig
     * @example
     * // Get one EmailConfig
     * const emailConfig = await prisma.emailConfig.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends emailConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, emailConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EmailConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EmailConfigs
     * const emailConfigs = await prisma.emailConfig.findMany()
     * 
     * // Get first 10 EmailConfigs
     * const emailConfigs = await prisma.emailConfig.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const emailConfigWithIdOnly = await prisma.emailConfig.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends emailConfigFindManyArgs>(args?: SelectSubset<T, emailConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EmailConfig.
     * @param {emailConfigCreateArgs} args - Arguments to create a EmailConfig.
     * @example
     * // Create one EmailConfig
     * const EmailConfig = await prisma.emailConfig.create({
     *   data: {
     *     // ... data to create a EmailConfig
     *   }
     * })
     * 
     */
    create<T extends emailConfigCreateArgs>(args: SelectSubset<T, emailConfigCreateArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EmailConfigs.
     * @param {emailConfigCreateManyArgs} args - Arguments to create many EmailConfigs.
     * @example
     * // Create many EmailConfigs
     * const emailConfig = await prisma.emailConfig.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends emailConfigCreateManyArgs>(args?: SelectSubset<T, emailConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EmailConfig.
     * @param {emailConfigDeleteArgs} args - Arguments to delete one EmailConfig.
     * @example
     * // Delete one EmailConfig
     * const EmailConfig = await prisma.emailConfig.delete({
     *   where: {
     *     // ... filter to delete one EmailConfig
     *   }
     * })
     * 
     */
    delete<T extends emailConfigDeleteArgs>(args: SelectSubset<T, emailConfigDeleteArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EmailConfig.
     * @param {emailConfigUpdateArgs} args - Arguments to update one EmailConfig.
     * @example
     * // Update one EmailConfig
     * const emailConfig = await prisma.emailConfig.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends emailConfigUpdateArgs>(args: SelectSubset<T, emailConfigUpdateArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EmailConfigs.
     * @param {emailConfigDeleteManyArgs} args - Arguments to filter EmailConfigs to delete.
     * @example
     * // Delete a few EmailConfigs
     * const { count } = await prisma.emailConfig.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends emailConfigDeleteManyArgs>(args?: SelectSubset<T, emailConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EmailConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EmailConfigs
     * const emailConfig = await prisma.emailConfig.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends emailConfigUpdateManyArgs>(args: SelectSubset<T, emailConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EmailConfig.
     * @param {emailConfigUpsertArgs} args - Arguments to update or create a EmailConfig.
     * @example
     * // Update or create a EmailConfig
     * const emailConfig = await prisma.emailConfig.upsert({
     *   create: {
     *     // ... data to create a EmailConfig
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EmailConfig we want to update
     *   }
     * })
     */
    upsert<T extends emailConfigUpsertArgs>(args: SelectSubset<T, emailConfigUpsertArgs<ExtArgs>>): Prisma__emailConfigClient<$Result.GetResult<Prisma.$emailConfigPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EmailConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigCountArgs} args - Arguments to filter EmailConfigs to count.
     * @example
     * // Count the number of EmailConfigs
     * const count = await prisma.emailConfig.count({
     *   where: {
     *     // ... the filter for the EmailConfigs we want to count
     *   }
     * })
    **/
    count<T extends emailConfigCountArgs>(
      args?: Subset<T, emailConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmailConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EmailConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmailConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmailConfigAggregateArgs>(args: Subset<T, EmailConfigAggregateArgs>): Prisma.PrismaPromise<GetEmailConfigAggregateType<T>>

    /**
     * Group by EmailConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {emailConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends emailConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: emailConfigGroupByArgs['orderBy'] }
        : { orderBy?: emailConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, emailConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmailConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the emailConfig model
   */
  readonly fields: emailConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for emailConfig.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__emailConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the emailConfig model
   */
  interface emailConfigFieldRefs {
    readonly id: FieldRef<"emailConfig", 'BigInt'>
    readonly panel: FieldRef<"emailConfig", 'String'>
    readonly module: FieldRef<"emailConfig", 'String'>
    readonly subject: FieldRef<"emailConfig", 'String'>
    readonly action: FieldRef<"emailConfig", 'String'>
    readonly html_template: FieldRef<"emailConfig", 'String'>
    readonly smtp_host: FieldRef<"emailConfig", 'String'>
    readonly smtp_secure: FieldRef<"emailConfig", 'Boolean'>
    readonly smtp_port: FieldRef<"emailConfig", 'Int'>
    readonly smtp_username: FieldRef<"emailConfig", 'String'>
    readonly smtp_password: FieldRef<"emailConfig", 'String'>
    readonly from_email: FieldRef<"emailConfig", 'String'>
    readonly from_name: FieldRef<"emailConfig", 'String'>
    readonly status: FieldRef<"emailConfig", 'Boolean'>
    readonly createdAt: FieldRef<"emailConfig", 'DateTime'>
    readonly createdBy: FieldRef<"emailConfig", 'Int'>
    readonly createdByRole: FieldRef<"emailConfig", 'String'>
    readonly updatedAt: FieldRef<"emailConfig", 'DateTime'>
    readonly updatedBy: FieldRef<"emailConfig", 'Int'>
    readonly updatedByRole: FieldRef<"emailConfig", 'String'>
  }
    

  // Custom InputTypes
  /**
   * emailConfig findUnique
   */
  export type emailConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter, which emailConfig to fetch.
     */
    where: emailConfigWhereUniqueInput
  }

  /**
   * emailConfig findUniqueOrThrow
   */
  export type emailConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter, which emailConfig to fetch.
     */
    where: emailConfigWhereUniqueInput
  }

  /**
   * emailConfig findFirst
   */
  export type emailConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter, which emailConfig to fetch.
     */
    where?: emailConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailConfigs to fetch.
     */
    orderBy?: emailConfigOrderByWithRelationInput | emailConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emailConfigs.
     */
    cursor?: emailConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emailConfigs.
     */
    distinct?: EmailConfigScalarFieldEnum | EmailConfigScalarFieldEnum[]
  }

  /**
   * emailConfig findFirstOrThrow
   */
  export type emailConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter, which emailConfig to fetch.
     */
    where?: emailConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailConfigs to fetch.
     */
    orderBy?: emailConfigOrderByWithRelationInput | emailConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for emailConfigs.
     */
    cursor?: emailConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of emailConfigs.
     */
    distinct?: EmailConfigScalarFieldEnum | EmailConfigScalarFieldEnum[]
  }

  /**
   * emailConfig findMany
   */
  export type emailConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter, which emailConfigs to fetch.
     */
    where?: emailConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of emailConfigs to fetch.
     */
    orderBy?: emailConfigOrderByWithRelationInput | emailConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing emailConfigs.
     */
    cursor?: emailConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` emailConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` emailConfigs.
     */
    skip?: number
    distinct?: EmailConfigScalarFieldEnum | EmailConfigScalarFieldEnum[]
  }

  /**
   * emailConfig create
   */
  export type emailConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * The data needed to create a emailConfig.
     */
    data: XOR<emailConfigCreateInput, emailConfigUncheckedCreateInput>
  }

  /**
   * emailConfig createMany
   */
  export type emailConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many emailConfigs.
     */
    data: emailConfigCreateManyInput | emailConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * emailConfig update
   */
  export type emailConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * The data needed to update a emailConfig.
     */
    data: XOR<emailConfigUpdateInput, emailConfigUncheckedUpdateInput>
    /**
     * Choose, which emailConfig to update.
     */
    where: emailConfigWhereUniqueInput
  }

  /**
   * emailConfig updateMany
   */
  export type emailConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update emailConfigs.
     */
    data: XOR<emailConfigUpdateManyMutationInput, emailConfigUncheckedUpdateManyInput>
    /**
     * Filter which emailConfigs to update
     */
    where?: emailConfigWhereInput
    /**
     * Limit how many emailConfigs to update.
     */
    limit?: number
  }

  /**
   * emailConfig upsert
   */
  export type emailConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * The filter to search for the emailConfig to update in case it exists.
     */
    where: emailConfigWhereUniqueInput
    /**
     * In case the emailConfig found by the `where` argument doesn't exist, create a new emailConfig with this data.
     */
    create: XOR<emailConfigCreateInput, emailConfigUncheckedCreateInput>
    /**
     * In case the emailConfig was found with the provided `where` argument, update it with this data.
     */
    update: XOR<emailConfigUpdateInput, emailConfigUncheckedUpdateInput>
  }

  /**
   * emailConfig delete
   */
  export type emailConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
    /**
     * Filter which emailConfig to delete.
     */
    where: emailConfigWhereUniqueInput
  }

  /**
   * emailConfig deleteMany
   */
  export type emailConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which emailConfigs to delete
     */
    where?: emailConfigWhereInput
    /**
     * Limit how many emailConfigs to delete.
     */
    limit?: number
  }

  /**
   * emailConfig without action
   */
  export type emailConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the emailConfig
     */
    select?: emailConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the emailConfig
     */
    omit?: emailConfigOmit<ExtArgs> | null
  }


  /**
   * Model admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminAvgAggregateOutputType = {
    id: number | null
    permanentCityId: number | null
    permanentStateId: number | null
    permanentCountryId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminSumAggregateOutputType = {
    id: number | null
    permanentCityId: bigint | null
    permanentStateId: bigint | null
    permanentCountryId: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminMinAggregateOutputType = {
    id: number | null
    profilePicture: string | null
    name: string | null
    username: string | null
    website: string | null
    email: string | null
    referralCode: string | null
    password: string | null
    role: string | null
    type: string | null
    status: string | null
    dateOfBirth: Date | null
    phoneNumber: string | null
    currentAddress: string | null
    permanentAddress: string | null
    permanentPostalCode: string | null
    permanentCityId: bigint | null
    permanentStateId: bigint | null
    permanentCountryId: bigint | null
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminMaxAggregateOutputType = {
    id: number | null
    profilePicture: string | null
    name: string | null
    username: string | null
    website: string | null
    email: string | null
    referralCode: string | null
    password: string | null
    role: string | null
    type: string | null
    status: string | null
    dateOfBirth: Date | null
    phoneNumber: string | null
    currentAddress: string | null
    permanentAddress: string | null
    permanentPostalCode: string | null
    permanentCityId: bigint | null
    permanentStateId: bigint | null
    permanentCountryId: bigint | null
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    profilePicture: number
    name: number
    username: number
    website: number
    email: number
    referralCode: number
    password: number
    role: number
    type: number
    status: number
    dateOfBirth: number
    phoneNumber: number
    currentAddress: number
    permanentAddress: number
    permanentPostalCode: number
    permanentCityId: number
    permanentStateId: number
    permanentCountryId: number
    pr_token: number
    pr_expires_at: number
    pr_last_reset: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type AdminAvgAggregateInputType = {
    id?: true
    permanentCityId?: true
    permanentStateId?: true
    permanentCountryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminSumAggregateInputType = {
    id?: true
    permanentCityId?: true
    permanentStateId?: true
    permanentCountryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminMinAggregateInputType = {
    id?: true
    profilePicture?: true
    name?: true
    username?: true
    website?: true
    email?: true
    referralCode?: true
    password?: true
    role?: true
    type?: true
    status?: true
    dateOfBirth?: true
    phoneNumber?: true
    currentAddress?: true
    permanentAddress?: true
    permanentPostalCode?: true
    permanentCityId?: true
    permanentStateId?: true
    permanentCountryId?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    profilePicture?: true
    name?: true
    username?: true
    website?: true
    email?: true
    referralCode?: true
    password?: true
    role?: true
    type?: true
    status?: true
    dateOfBirth?: true
    phoneNumber?: true
    currentAddress?: true
    permanentAddress?: true
    permanentPostalCode?: true
    permanentCityId?: true
    permanentStateId?: true
    permanentCountryId?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    profilePicture?: true
    name?: true
    username?: true
    website?: true
    email?: true
    referralCode?: true
    password?: true
    role?: true
    type?: true
    status?: true
    dateOfBirth?: true
    phoneNumber?: true
    currentAddress?: true
    permanentAddress?: true
    permanentPostalCode?: true
    permanentCityId?: true
    permanentStateId?: true
    permanentCountryId?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin to aggregate.
     */
    where?: adminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: adminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type adminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminWhereInput
    orderBy?: adminOrderByWithAggregationInput | adminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: adminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _avg?: AdminAvgAggregateInputType
    _sum?: AdminSumAggregateInputType
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: number
    profilePicture: string | null
    name: string
    username: string | null
    website: string | null
    email: string
    referralCode: string | null
    password: string
    role: string
    type: string
    status: string
    dateOfBirth: Date | null
    phoneNumber: string | null
    currentAddress: string | null
    permanentAddress: string | null
    permanentPostalCode: string | null
    permanentCityId: bigint | null
    permanentStateId: bigint | null
    permanentCountryId: bigint | null
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends adminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type adminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profilePicture?: boolean
    name?: boolean
    username?: boolean
    website?: boolean
    email?: boolean
    referralCode?: boolean
    password?: boolean
    role?: boolean
    type?: boolean
    status?: boolean
    dateOfBirth?: boolean
    phoneNumber?: boolean
    currentAddress?: boolean
    permanentAddress?: boolean
    permanentPostalCode?: boolean
    permanentCityId?: boolean
    permanentStateId?: boolean
    permanentCountryId?: boolean
    pr_token?: boolean
    pr_expires_at?: boolean
    pr_last_reset?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    permanentCity?: boolean | admin$permanentCityArgs<ExtArgs>
    permanentState?: boolean | admin$permanentStateArgs<ExtArgs>
    permanentCountry?: boolean | admin$permanentCountryArgs<ExtArgs>
    staff?: boolean | admin$staffArgs<ExtArgs>
    companyDetail?: boolean | admin$companyDetailArgs<ExtArgs>
    bankAccounts?: boolean | admin$bankAccountsArgs<ExtArgs>
    permissions?: boolean | admin$permissionsArgs<ExtArgs>
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>



  export type adminSelectScalar = {
    id?: boolean
    profilePicture?: boolean
    name?: boolean
    username?: boolean
    website?: boolean
    email?: boolean
    referralCode?: boolean
    password?: boolean
    role?: boolean
    type?: boolean
    status?: boolean
    dateOfBirth?: boolean
    phoneNumber?: boolean
    currentAddress?: boolean
    permanentAddress?: boolean
    permanentPostalCode?: boolean
    permanentCityId?: boolean
    permanentStateId?: boolean
    permanentCountryId?: boolean
    pr_token?: boolean
    pr_expires_at?: boolean
    pr_last_reset?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type adminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "profilePicture" | "name" | "username" | "website" | "email" | "referralCode" | "password" | "role" | "type" | "status" | "dateOfBirth" | "phoneNumber" | "currentAddress" | "permanentAddress" | "permanentPostalCode" | "permanentCityId" | "permanentStateId" | "permanentCountryId" | "pr_token" | "pr_expires_at" | "pr_last_reset" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["admin"]>
  export type adminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permanentCity?: boolean | admin$permanentCityArgs<ExtArgs>
    permanentState?: boolean | admin$permanentStateArgs<ExtArgs>
    permanentCountry?: boolean | admin$permanentCountryArgs<ExtArgs>
    staff?: boolean | admin$staffArgs<ExtArgs>
    companyDetail?: boolean | admin$companyDetailArgs<ExtArgs>
    bankAccounts?: boolean | admin$bankAccountsArgs<ExtArgs>
    permissions?: boolean | admin$permissionsArgs<ExtArgs>
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $adminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admin"
    objects: {
      permanentCity: Prisma.$cityPayload<ExtArgs> | null
      permanentState: Prisma.$statePayload<ExtArgs> | null
      permanentCountry: Prisma.$countryPayload<ExtArgs> | null
      staff: Prisma.$adminStaffPayload<ExtArgs>[]
      companyDetail: Prisma.$companyDetailPayload<ExtArgs> | null
      bankAccounts: Prisma.$bankAccountPayload<ExtArgs>[]
      permissions: Prisma.$adminHasPermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      profilePicture: string | null
      name: string
      username: string | null
      website: string | null
      email: string
      referralCode: string | null
      password: string
      role: string
      type: string
      status: string
      dateOfBirth: Date | null
      phoneNumber: string | null
      currentAddress: string | null
      permanentAddress: string | null
      permanentPostalCode: string | null
      permanentCityId: bigint | null
      permanentStateId: bigint | null
      permanentCountryId: bigint | null
      pr_token: string | null
      pr_expires_at: Date | null
      pr_last_reset: Date | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type adminGetPayload<S extends boolean | null | undefined | adminDefaultArgs> = $Result.GetResult<Prisma.$adminPayload, S>

  type adminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<adminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface adminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admin'], meta: { name: 'admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {adminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends adminFindUniqueArgs>(args: SelectSubset<T, adminFindUniqueArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {adminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends adminFindUniqueOrThrowArgs>(args: SelectSubset<T, adminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends adminFindFirstArgs>(args?: SelectSubset<T, adminFindFirstArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends adminFindFirstOrThrowArgs>(args?: SelectSubset<T, adminFindFirstOrThrowArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends adminFindManyArgs>(args?: SelectSubset<T, adminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin.
     * @param {adminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends adminCreateArgs>(args: SelectSubset<T, adminCreateArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {adminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends adminCreateManyArgs>(args?: SelectSubset<T, adminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Admin.
     * @param {adminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends adminDeleteArgs>(args: SelectSubset<T, adminDeleteArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin.
     * @param {adminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends adminUpdateArgs>(args: SelectSubset<T, adminUpdateArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {adminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends adminDeleteManyArgs>(args?: SelectSubset<T, adminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends adminUpdateManyArgs>(args: SelectSubset<T, adminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Admin.
     * @param {adminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends adminUpsertArgs>(args: SelectSubset<T, adminUpsertArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends adminCountArgs>(
      args?: Subset<T, adminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends adminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: adminGroupByArgs['orderBy'] }
        : { orderBy?: adminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, adminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admin model
   */
  readonly fields: adminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__adminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permanentCity<T extends admin$permanentCityArgs<ExtArgs> = {}>(args?: Subset<T, admin$permanentCityArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    permanentState<T extends admin$permanentStateArgs<ExtArgs> = {}>(args?: Subset<T, admin$permanentStateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    permanentCountry<T extends admin$permanentCountryArgs<ExtArgs> = {}>(args?: Subset<T, admin$permanentCountryArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    staff<T extends admin$staffArgs<ExtArgs> = {}>(args?: Subset<T, admin$staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    companyDetail<T extends admin$companyDetailArgs<ExtArgs> = {}>(args?: Subset<T, admin$companyDetailArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    bankAccounts<T extends admin$bankAccountsArgs<ExtArgs> = {}>(args?: Subset<T, admin$bankAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permissions<T extends admin$permissionsArgs<ExtArgs> = {}>(args?: Subset<T, admin$permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admin model
   */
  interface adminFieldRefs {
    readonly id: FieldRef<"admin", 'Int'>
    readonly profilePicture: FieldRef<"admin", 'String'>
    readonly name: FieldRef<"admin", 'String'>
    readonly username: FieldRef<"admin", 'String'>
    readonly website: FieldRef<"admin", 'String'>
    readonly email: FieldRef<"admin", 'String'>
    readonly referralCode: FieldRef<"admin", 'String'>
    readonly password: FieldRef<"admin", 'String'>
    readonly role: FieldRef<"admin", 'String'>
    readonly type: FieldRef<"admin", 'String'>
    readonly status: FieldRef<"admin", 'String'>
    readonly dateOfBirth: FieldRef<"admin", 'DateTime'>
    readonly phoneNumber: FieldRef<"admin", 'String'>
    readonly currentAddress: FieldRef<"admin", 'String'>
    readonly permanentAddress: FieldRef<"admin", 'String'>
    readonly permanentPostalCode: FieldRef<"admin", 'String'>
    readonly permanentCityId: FieldRef<"admin", 'BigInt'>
    readonly permanentStateId: FieldRef<"admin", 'BigInt'>
    readonly permanentCountryId: FieldRef<"admin", 'BigInt'>
    readonly pr_token: FieldRef<"admin", 'String'>
    readonly pr_expires_at: FieldRef<"admin", 'DateTime'>
    readonly pr_last_reset: FieldRef<"admin", 'DateTime'>
    readonly createdAt: FieldRef<"admin", 'DateTime'>
    readonly createdBy: FieldRef<"admin", 'Int'>
    readonly createdByRole: FieldRef<"admin", 'String'>
    readonly updatedAt: FieldRef<"admin", 'DateTime'>
    readonly updatedBy: FieldRef<"admin", 'Int'>
    readonly updatedByRole: FieldRef<"admin", 'String'>
    readonly deletedAt: FieldRef<"admin", 'DateTime'>
    readonly deletedBy: FieldRef<"admin", 'Int'>
    readonly deletedByRole: FieldRef<"admin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * admin findUnique
   */
  export type adminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter, which admin to fetch.
     */
    where: adminWhereUniqueInput
  }

  /**
   * admin findUniqueOrThrow
   */
  export type adminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter, which admin to fetch.
     */
    where: adminWhereUniqueInput
  }

  /**
   * admin findFirst
   */
  export type adminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter, which admin to fetch.
     */
    where?: adminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * admin findFirstOrThrow
   */
  export type adminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter, which admin to fetch.
     */
    where?: adminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * admin findMany
   */
  export type adminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admins.
     */
    cursor?: adminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * admin create
   */
  export type adminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * The data needed to create a admin.
     */
    data: XOR<adminCreateInput, adminUncheckedCreateInput>
  }

  /**
   * admin createMany
   */
  export type adminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admins.
     */
    data: adminCreateManyInput | adminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin update
   */
  export type adminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * The data needed to update a admin.
     */
    data: XOR<adminUpdateInput, adminUncheckedUpdateInput>
    /**
     * Choose, which admin to update.
     */
    where: adminWhereUniqueInput
  }

  /**
   * admin updateMany
   */
  export type adminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admins.
     */
    data: XOR<adminUpdateManyMutationInput, adminUncheckedUpdateManyInput>
    /**
     * Filter which admins to update
     */
    where?: adminWhereInput
    /**
     * Limit how many admins to update.
     */
    limit?: number
  }

  /**
   * admin upsert
   */
  export type adminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * The filter to search for the admin to update in case it exists.
     */
    where: adminWhereUniqueInput
    /**
     * In case the admin found by the `where` argument doesn't exist, create a new admin with this data.
     */
    create: XOR<adminCreateInput, adminUncheckedCreateInput>
    /**
     * In case the admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<adminUpdateInput, adminUncheckedUpdateInput>
  }

  /**
   * admin delete
   */
  export type adminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    /**
     * Filter which admin to delete.
     */
    where: adminWhereUniqueInput
  }

  /**
   * admin deleteMany
   */
  export type adminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admins to delete
     */
    where?: adminWhereInput
    /**
     * Limit how many admins to delete.
     */
    limit?: number
  }

  /**
   * admin.permanentCity
   */
  export type admin$permanentCityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
  }

  /**
   * admin.permanentState
   */
  export type admin$permanentStateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
  }

  /**
   * admin.permanentCountry
   */
  export type admin$permanentCountryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    where?: countryWhereInput
  }

  /**
   * admin.staff
   */
  export type admin$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    where?: adminStaffWhereInput
    orderBy?: adminStaffOrderByWithRelationInput | adminStaffOrderByWithRelationInput[]
    cursor?: adminStaffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminStaffScalarFieldEnum | AdminStaffScalarFieldEnum[]
  }

  /**
   * admin.companyDetail
   */
  export type admin$companyDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    where?: companyDetailWhereInput
  }

  /**
   * admin.bankAccounts
   */
  export type admin$bankAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    where?: bankAccountWhereInput
    orderBy?: bankAccountOrderByWithRelationInput | bankAccountOrderByWithRelationInput[]
    cursor?: bankAccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * admin.permissions
   */
  export type admin$permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    where?: adminHasPermissionWhereInput
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    cursor?: adminHasPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminHasPermissionScalarFieldEnum | AdminHasPermissionScalarFieldEnum[]
  }

  /**
   * admin without action
   */
  export type adminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
  }


  /**
   * Model permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PermissionSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PermissionMinAggregateOutputType = {
    id: number | null
    panel: string | null
    module: string | null
    action: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: number | null
    panel: string | null
    module: string | null
    action: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    panel: number
    module: number
    action: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type PermissionAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PermissionSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PermissionMinAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    action?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    action?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    panel?: true
    module?: true
    action?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permission to aggregate.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type permissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionWhereInput
    orderBy?: permissionOrderByWithAggregationInput | permissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: permissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _avg?: PermissionAvgAggregateInputType
    _sum?: PermissionSumAggregateInputType
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: number
    panel: string
    module: string
    action: string
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends permissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type permissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    panel?: boolean
    module?: boolean
    action?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    adminPermissions?: boolean | permission$adminPermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>



  export type permissionSelectScalar = {
    id?: boolean
    panel?: boolean
    module?: boolean
    action?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type permissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "panel" | "module" | "action" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["permission"]>
  export type permissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adminPermissions?: boolean | permission$adminPermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $permissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permission"
    objects: {
      adminPermissions: Prisma.$adminHasPermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      panel: string
      module: string
      action: string
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type permissionGetPayload<S extends boolean | null | undefined | permissionDefaultArgs> = $Result.GetResult<Prisma.$permissionPayload, S>

  type permissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface permissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permission'], meta: { name: 'permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {permissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionFindUniqueArgs>(args: SelectSubset<T, permissionFindUniqueArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionFindFirstArgs>(args?: SelectSubset<T, permissionFindFirstArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permissionFindManyArgs>(args?: SelectSubset<T, permissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {permissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends permissionCreateArgs>(args: SelectSubset<T, permissionCreateArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionCreateManyArgs>(args?: SelectSubset<T, permissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permission.
     * @param {permissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends permissionDeleteArgs>(args: SelectSubset<T, permissionDeleteArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {permissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionUpdateArgs>(args: SelectSubset<T, permissionUpdateArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionDeleteManyArgs>(args?: SelectSubset<T, permissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionUpdateManyArgs>(args: SelectSubset<T, permissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permission.
     * @param {permissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends permissionUpsertArgs>(args: SelectSubset<T, permissionUpsertArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionCountArgs>(
      args?: Subset<T, permissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionGroupByArgs['orderBy'] }
        : { orderBy?: permissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permission model
   */
  readonly fields: permissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    adminPermissions<T extends permission$adminPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, permission$adminPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permission model
   */
  interface permissionFieldRefs {
    readonly id: FieldRef<"permission", 'Int'>
    readonly panel: FieldRef<"permission", 'String'>
    readonly module: FieldRef<"permission", 'String'>
    readonly action: FieldRef<"permission", 'String'>
    readonly status: FieldRef<"permission", 'Boolean'>
    readonly createdAt: FieldRef<"permission", 'DateTime'>
    readonly createdBy: FieldRef<"permission", 'Int'>
    readonly createdByRole: FieldRef<"permission", 'String'>
    readonly updatedAt: FieldRef<"permission", 'DateTime'>
    readonly updatedBy: FieldRef<"permission", 'Int'>
    readonly updatedByRole: FieldRef<"permission", 'String'>
    readonly deletedAt: FieldRef<"permission", 'DateTime'>
    readonly deletedBy: FieldRef<"permission", 'Int'>
    readonly deletedByRole: FieldRef<"permission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * permission findUnique
   */
  export type permissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission findUniqueOrThrow
   */
  export type permissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission findFirst
   */
  export type permissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission findFirstOrThrow
   */
  export type permissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permission to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission findMany
   */
  export type permissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionOrderByWithRelationInput | permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * permission create
   */
  export type permissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to create a permission.
     */
    data: XOR<permissionCreateInput, permissionUncheckedCreateInput>
  }

  /**
   * permission createMany
   */
  export type permissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionCreateManyInput | permissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permission update
   */
  export type permissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The data needed to update a permission.
     */
    data: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
    /**
     * Choose, which permission to update.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission updateMany
   */
  export type permissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionUpdateManyMutationInput, permissionUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permission upsert
   */
  export type permissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * The filter to search for the permission to update in case it exists.
     */
    where: permissionWhereUniqueInput
    /**
     * In case the permission found by the `where` argument doesn't exist, create a new permission with this data.
     */
    create: XOR<permissionCreateInput, permissionUncheckedCreateInput>
    /**
     * In case the permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionUpdateInput, permissionUncheckedUpdateInput>
  }

  /**
   * permission delete
   */
  export type permissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
    /**
     * Filter which permission to delete.
     */
    where: permissionWhereUniqueInput
  }

  /**
   * permission deleteMany
   */
  export type permissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permission.adminPermissions
   */
  export type permission$adminPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    where?: adminHasPermissionWhereInput
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    cursor?: adminHasPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminHasPermissionScalarFieldEnum | AdminHasPermissionScalarFieldEnum[]
  }

  /**
   * permission without action
   */
  export type permissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permission
     */
    select?: permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permission
     */
    omit?: permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionInclude<ExtArgs> | null
  }


  /**
   * Model adminHasPermission
   */

  export type AggregateAdminHasPermission = {
    _count: AdminHasPermissionCountAggregateOutputType | null
    _avg: AdminHasPermissionAvgAggregateOutputType | null
    _sum: AdminHasPermissionSumAggregateOutputType | null
    _min: AdminHasPermissionMinAggregateOutputType | null
    _max: AdminHasPermissionMaxAggregateOutputType | null
  }

  export type AdminHasPermissionAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    permissionId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminHasPermissionSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    permissionId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminHasPermissionMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    permissionId: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminHasPermissionMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    permissionId: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminHasPermissionCountAggregateOutputType = {
    id: number
    adminId: number
    permissionId: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type AdminHasPermissionAvgAggregateInputType = {
    id?: true
    adminId?: true
    permissionId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminHasPermissionSumAggregateInputType = {
    id?: true
    adminId?: true
    permissionId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminHasPermissionMinAggregateInputType = {
    id?: true
    adminId?: true
    permissionId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminHasPermissionMaxAggregateInputType = {
    id?: true
    adminId?: true
    permissionId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminHasPermissionCountAggregateInputType = {
    id?: true
    adminId?: true
    permissionId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type AdminHasPermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which adminHasPermission to aggregate.
     */
    where?: adminHasPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminHasPermissions to fetch.
     */
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: adminHasPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned adminHasPermissions
    **/
    _count?: true | AdminHasPermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminHasPermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminHasPermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminHasPermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminHasPermissionMaxAggregateInputType
  }

  export type GetAdminHasPermissionAggregateType<T extends AdminHasPermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateAdminHasPermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdminHasPermission[P]>
      : GetScalarType<T[P], AggregateAdminHasPermission[P]>
  }




  export type adminHasPermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminHasPermissionWhereInput
    orderBy?: adminHasPermissionOrderByWithAggregationInput | adminHasPermissionOrderByWithAggregationInput[]
    by: AdminHasPermissionScalarFieldEnum[] | AdminHasPermissionScalarFieldEnum
    having?: adminHasPermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminHasPermissionCountAggregateInputType | true
    _avg?: AdminHasPermissionAvgAggregateInputType
    _sum?: AdminHasPermissionSumAggregateInputType
    _min?: AdminHasPermissionMinAggregateInputType
    _max?: AdminHasPermissionMaxAggregateInputType
  }

  export type AdminHasPermissionGroupByOutputType = {
    id: number
    adminId: number
    permissionId: number
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: AdminHasPermissionCountAggregateOutputType | null
    _avg: AdminHasPermissionAvgAggregateOutputType | null
    _sum: AdminHasPermissionSumAggregateOutputType | null
    _min: AdminHasPermissionMinAggregateOutputType | null
    _max: AdminHasPermissionMaxAggregateOutputType | null
  }

  type GetAdminHasPermissionGroupByPayload<T extends adminHasPermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminHasPermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminHasPermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminHasPermissionGroupByOutputType[P]>
            : GetScalarType<T[P], AdminHasPermissionGroupByOutputType[P]>
        }
      >
    >


  export type adminHasPermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    permissionId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    admin?: boolean | adminDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adminHasPermission"]>



  export type adminHasPermissionSelectScalar = {
    id?: boolean
    adminId?: boolean
    permissionId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type adminHasPermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "permissionId" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["adminHasPermission"]>
  export type adminHasPermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | adminDefaultArgs<ExtArgs>
    permission?: boolean | permissionDefaultArgs<ExtArgs>
  }

  export type $adminHasPermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "adminHasPermission"
    objects: {
      admin: Prisma.$adminPayload<ExtArgs>
      permission: Prisma.$permissionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      permissionId: number
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["adminHasPermission"]>
    composites: {}
  }

  type adminHasPermissionGetPayload<S extends boolean | null | undefined | adminHasPermissionDefaultArgs> = $Result.GetResult<Prisma.$adminHasPermissionPayload, S>

  type adminHasPermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<adminHasPermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminHasPermissionCountAggregateInputType | true
    }

  export interface adminHasPermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['adminHasPermission'], meta: { name: 'adminHasPermission' } }
    /**
     * Find zero or one AdminHasPermission that matches the filter.
     * @param {adminHasPermissionFindUniqueArgs} args - Arguments to find a AdminHasPermission
     * @example
     * // Get one AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends adminHasPermissionFindUniqueArgs>(args: SelectSubset<T, adminHasPermissionFindUniqueArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdminHasPermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {adminHasPermissionFindUniqueOrThrowArgs} args - Arguments to find a AdminHasPermission
     * @example
     * // Get one AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends adminHasPermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, adminHasPermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminHasPermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionFindFirstArgs} args - Arguments to find a AdminHasPermission
     * @example
     * // Get one AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends adminHasPermissionFindFirstArgs>(args?: SelectSubset<T, adminHasPermissionFindFirstArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminHasPermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionFindFirstOrThrowArgs} args - Arguments to find a AdminHasPermission
     * @example
     * // Get one AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends adminHasPermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, adminHasPermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdminHasPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdminHasPermissions
     * const adminHasPermissions = await prisma.adminHasPermission.findMany()
     * 
     * // Get first 10 AdminHasPermissions
     * const adminHasPermissions = await prisma.adminHasPermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminHasPermissionWithIdOnly = await prisma.adminHasPermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends adminHasPermissionFindManyArgs>(args?: SelectSubset<T, adminHasPermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdminHasPermission.
     * @param {adminHasPermissionCreateArgs} args - Arguments to create a AdminHasPermission.
     * @example
     * // Create one AdminHasPermission
     * const AdminHasPermission = await prisma.adminHasPermission.create({
     *   data: {
     *     // ... data to create a AdminHasPermission
     *   }
     * })
     * 
     */
    create<T extends adminHasPermissionCreateArgs>(args: SelectSubset<T, adminHasPermissionCreateArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdminHasPermissions.
     * @param {adminHasPermissionCreateManyArgs} args - Arguments to create many AdminHasPermissions.
     * @example
     * // Create many AdminHasPermissions
     * const adminHasPermission = await prisma.adminHasPermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends adminHasPermissionCreateManyArgs>(args?: SelectSubset<T, adminHasPermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AdminHasPermission.
     * @param {adminHasPermissionDeleteArgs} args - Arguments to delete one AdminHasPermission.
     * @example
     * // Delete one AdminHasPermission
     * const AdminHasPermission = await prisma.adminHasPermission.delete({
     *   where: {
     *     // ... filter to delete one AdminHasPermission
     *   }
     * })
     * 
     */
    delete<T extends adminHasPermissionDeleteArgs>(args: SelectSubset<T, adminHasPermissionDeleteArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdminHasPermission.
     * @param {adminHasPermissionUpdateArgs} args - Arguments to update one AdminHasPermission.
     * @example
     * // Update one AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends adminHasPermissionUpdateArgs>(args: SelectSubset<T, adminHasPermissionUpdateArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdminHasPermissions.
     * @param {adminHasPermissionDeleteManyArgs} args - Arguments to filter AdminHasPermissions to delete.
     * @example
     * // Delete a few AdminHasPermissions
     * const { count } = await prisma.adminHasPermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends adminHasPermissionDeleteManyArgs>(args?: SelectSubset<T, adminHasPermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdminHasPermissions
     * const adminHasPermission = await prisma.adminHasPermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends adminHasPermissionUpdateManyArgs>(args: SelectSubset<T, adminHasPermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AdminHasPermission.
     * @param {adminHasPermissionUpsertArgs} args - Arguments to update or create a AdminHasPermission.
     * @example
     * // Update or create a AdminHasPermission
     * const adminHasPermission = await prisma.adminHasPermission.upsert({
     *   create: {
     *     // ... data to create a AdminHasPermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdminHasPermission we want to update
     *   }
     * })
     */
    upsert<T extends adminHasPermissionUpsertArgs>(args: SelectSubset<T, adminHasPermissionUpsertArgs<ExtArgs>>): Prisma__adminHasPermissionClient<$Result.GetResult<Prisma.$adminHasPermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdminHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionCountArgs} args - Arguments to filter AdminHasPermissions to count.
     * @example
     * // Count the number of AdminHasPermissions
     * const count = await prisma.adminHasPermission.count({
     *   where: {
     *     // ... the filter for the AdminHasPermissions we want to count
     *   }
     * })
    **/
    count<T extends adminHasPermissionCountArgs>(
      args?: Subset<T, adminHasPermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminHasPermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdminHasPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminHasPermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminHasPermissionAggregateArgs>(args: Subset<T, AdminHasPermissionAggregateArgs>): Prisma.PrismaPromise<GetAdminHasPermissionAggregateType<T>>

    /**
     * Group by AdminHasPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminHasPermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends adminHasPermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: adminHasPermissionGroupByArgs['orderBy'] }
        : { orderBy?: adminHasPermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, adminHasPermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminHasPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the adminHasPermission model
   */
  readonly fields: adminHasPermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for adminHasPermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__adminHasPermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends adminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, adminDefaultArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permission<T extends permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionDefaultArgs<ExtArgs>>): Prisma__permissionClient<$Result.GetResult<Prisma.$permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the adminHasPermission model
   */
  interface adminHasPermissionFieldRefs {
    readonly id: FieldRef<"adminHasPermission", 'Int'>
    readonly adminId: FieldRef<"adminHasPermission", 'Int'>
    readonly permissionId: FieldRef<"adminHasPermission", 'Int'>
    readonly createdAt: FieldRef<"adminHasPermission", 'DateTime'>
    readonly createdBy: FieldRef<"adminHasPermission", 'Int'>
    readonly createdByRole: FieldRef<"adminHasPermission", 'String'>
    readonly updatedAt: FieldRef<"adminHasPermission", 'DateTime'>
    readonly updatedBy: FieldRef<"adminHasPermission", 'Int'>
    readonly updatedByRole: FieldRef<"adminHasPermission", 'String'>
    readonly deletedAt: FieldRef<"adminHasPermission", 'DateTime'>
    readonly deletedBy: FieldRef<"adminHasPermission", 'Int'>
    readonly deletedByRole: FieldRef<"adminHasPermission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * adminHasPermission findUnique
   */
  export type adminHasPermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter, which adminHasPermission to fetch.
     */
    where: adminHasPermissionWhereUniqueInput
  }

  /**
   * adminHasPermission findUniqueOrThrow
   */
  export type adminHasPermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter, which adminHasPermission to fetch.
     */
    where: adminHasPermissionWhereUniqueInput
  }

  /**
   * adminHasPermission findFirst
   */
  export type adminHasPermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter, which adminHasPermission to fetch.
     */
    where?: adminHasPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminHasPermissions to fetch.
     */
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for adminHasPermissions.
     */
    cursor?: adminHasPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of adminHasPermissions.
     */
    distinct?: AdminHasPermissionScalarFieldEnum | AdminHasPermissionScalarFieldEnum[]
  }

  /**
   * adminHasPermission findFirstOrThrow
   */
  export type adminHasPermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter, which adminHasPermission to fetch.
     */
    where?: adminHasPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminHasPermissions to fetch.
     */
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for adminHasPermissions.
     */
    cursor?: adminHasPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of adminHasPermissions.
     */
    distinct?: AdminHasPermissionScalarFieldEnum | AdminHasPermissionScalarFieldEnum[]
  }

  /**
   * adminHasPermission findMany
   */
  export type adminHasPermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter, which adminHasPermissions to fetch.
     */
    where?: adminHasPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminHasPermissions to fetch.
     */
    orderBy?: adminHasPermissionOrderByWithRelationInput | adminHasPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing adminHasPermissions.
     */
    cursor?: adminHasPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminHasPermissions.
     */
    skip?: number
    distinct?: AdminHasPermissionScalarFieldEnum | AdminHasPermissionScalarFieldEnum[]
  }

  /**
   * adminHasPermission create
   */
  export type adminHasPermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a adminHasPermission.
     */
    data: XOR<adminHasPermissionCreateInput, adminHasPermissionUncheckedCreateInput>
  }

  /**
   * adminHasPermission createMany
   */
  export type adminHasPermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many adminHasPermissions.
     */
    data: adminHasPermissionCreateManyInput | adminHasPermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * adminHasPermission update
   */
  export type adminHasPermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a adminHasPermission.
     */
    data: XOR<adminHasPermissionUpdateInput, adminHasPermissionUncheckedUpdateInput>
    /**
     * Choose, which adminHasPermission to update.
     */
    where: adminHasPermissionWhereUniqueInput
  }

  /**
   * adminHasPermission updateMany
   */
  export type adminHasPermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update adminHasPermissions.
     */
    data: XOR<adminHasPermissionUpdateManyMutationInput, adminHasPermissionUncheckedUpdateManyInput>
    /**
     * Filter which adminHasPermissions to update
     */
    where?: adminHasPermissionWhereInput
    /**
     * Limit how many adminHasPermissions to update.
     */
    limit?: number
  }

  /**
   * adminHasPermission upsert
   */
  export type adminHasPermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the adminHasPermission to update in case it exists.
     */
    where: adminHasPermissionWhereUniqueInput
    /**
     * In case the adminHasPermission found by the `where` argument doesn't exist, create a new adminHasPermission with this data.
     */
    create: XOR<adminHasPermissionCreateInput, adminHasPermissionUncheckedCreateInput>
    /**
     * In case the adminHasPermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<adminHasPermissionUpdateInput, adminHasPermissionUncheckedUpdateInput>
  }

  /**
   * adminHasPermission delete
   */
  export type adminHasPermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
    /**
     * Filter which adminHasPermission to delete.
     */
    where: adminHasPermissionWhereUniqueInput
  }

  /**
   * adminHasPermission deleteMany
   */
  export type adminHasPermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which adminHasPermissions to delete
     */
    where?: adminHasPermissionWhereInput
    /**
     * Limit how many adminHasPermissions to delete.
     */
    limit?: number
  }

  /**
   * adminHasPermission without action
   */
  export type adminHasPermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminHasPermission
     */
    select?: adminHasPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminHasPermission
     */
    omit?: adminHasPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminHasPermissionInclude<ExtArgs> | null
  }


  /**
   * Model companyDetail
   */

  export type AggregateCompanyDetail = {
    _count: CompanyDetailCountAggregateOutputType | null
    _avg: CompanyDetailAvgAggregateOutputType | null
    _sum: CompanyDetailSumAggregateOutputType | null
    _min: CompanyDetailMinAggregateOutputType | null
    _max: CompanyDetailMaxAggregateOutputType | null
  }

  export type CompanyDetailAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CompanyDetailSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CompanyDetailMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    companyName: string | null
    brandName: string | null
    brandShortName: string | null
    billingAddress: string | null
    billingPincode: string | null
    billingState: string | null
    billingCity: string | null
    businessType: string | null
    clientEntryType: string | null
    gstNumber: string | null
    companyPanNumber: string | null
    aadharNumber: string | null
    gstDocument: string | null
    panCardHolderName: string | null
    aadharCardHolderName: string | null
    panCardImage: string | null
    aadharCardImage: string | null
    additionalDocumentUpload: string | null
    documentId: string | null
    documentName: string | null
    documentImage: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CompanyDetailMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    companyName: string | null
    brandName: string | null
    brandShortName: string | null
    billingAddress: string | null
    billingPincode: string | null
    billingState: string | null
    billingCity: string | null
    businessType: string | null
    clientEntryType: string | null
    gstNumber: string | null
    companyPanNumber: string | null
    aadharNumber: string | null
    gstDocument: string | null
    panCardHolderName: string | null
    aadharCardHolderName: string | null
    panCardImage: string | null
    aadharCardImage: string | null
    additionalDocumentUpload: string | null
    documentId: string | null
    documentName: string | null
    documentImage: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CompanyDetailCountAggregateOutputType = {
    id: number
    adminId: number
    companyName: number
    brandName: number
    brandShortName: number
    billingAddress: number
    billingPincode: number
    billingState: number
    billingCity: number
    businessType: number
    clientEntryType: number
    gstNumber: number
    companyPanNumber: number
    aadharNumber: number
    gstDocument: number
    panCardHolderName: number
    aadharCardHolderName: number
    panCardImage: number
    aadharCardImage: number
    additionalDocumentUpload: number
    documentId: number
    documentName: number
    documentImage: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type CompanyDetailAvgAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CompanyDetailSumAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CompanyDetailMinAggregateInputType = {
    id?: true
    adminId?: true
    companyName?: true
    brandName?: true
    brandShortName?: true
    billingAddress?: true
    billingPincode?: true
    billingState?: true
    billingCity?: true
    businessType?: true
    clientEntryType?: true
    gstNumber?: true
    companyPanNumber?: true
    aadharNumber?: true
    gstDocument?: true
    panCardHolderName?: true
    aadharCardHolderName?: true
    panCardImage?: true
    aadharCardImage?: true
    additionalDocumentUpload?: true
    documentId?: true
    documentName?: true
    documentImage?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CompanyDetailMaxAggregateInputType = {
    id?: true
    adminId?: true
    companyName?: true
    brandName?: true
    brandShortName?: true
    billingAddress?: true
    billingPincode?: true
    billingState?: true
    billingCity?: true
    businessType?: true
    clientEntryType?: true
    gstNumber?: true
    companyPanNumber?: true
    aadharNumber?: true
    gstDocument?: true
    panCardHolderName?: true
    aadharCardHolderName?: true
    panCardImage?: true
    aadharCardImage?: true
    additionalDocumentUpload?: true
    documentId?: true
    documentName?: true
    documentImage?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CompanyDetailCountAggregateInputType = {
    id?: true
    adminId?: true
    companyName?: true
    brandName?: true
    brandShortName?: true
    billingAddress?: true
    billingPincode?: true
    billingState?: true
    billingCity?: true
    businessType?: true
    clientEntryType?: true
    gstNumber?: true
    companyPanNumber?: true
    aadharNumber?: true
    gstDocument?: true
    panCardHolderName?: true
    aadharCardHolderName?: true
    panCardImage?: true
    aadharCardImage?: true
    additionalDocumentUpload?: true
    documentId?: true
    documentName?: true
    documentImage?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type CompanyDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companyDetail to aggregate.
     */
    where?: companyDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companyDetails to fetch.
     */
    orderBy?: companyDetailOrderByWithRelationInput | companyDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: companyDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companyDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companyDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned companyDetails
    **/
    _count?: true | CompanyDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanyDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyDetailMaxAggregateInputType
  }

  export type GetCompanyDetailAggregateType<T extends CompanyDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyDetail[P]>
      : GetScalarType<T[P], AggregateCompanyDetail[P]>
  }




  export type companyDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: companyDetailWhereInput
    orderBy?: companyDetailOrderByWithAggregationInput | companyDetailOrderByWithAggregationInput[]
    by: CompanyDetailScalarFieldEnum[] | CompanyDetailScalarFieldEnum
    having?: companyDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyDetailCountAggregateInputType | true
    _avg?: CompanyDetailAvgAggregateInputType
    _sum?: CompanyDetailSumAggregateInputType
    _min?: CompanyDetailMinAggregateInputType
    _max?: CompanyDetailMaxAggregateInputType
  }

  export type CompanyDetailGroupByOutputType = {
    id: number
    adminId: number
    companyName: string | null
    brandName: string | null
    brandShortName: string | null
    billingAddress: string | null
    billingPincode: string | null
    billingState: string | null
    billingCity: string | null
    businessType: string | null
    clientEntryType: string | null
    gstNumber: string | null
    companyPanNumber: string | null
    aadharNumber: string | null
    gstDocument: string | null
    panCardHolderName: string | null
    aadharCardHolderName: string | null
    panCardImage: string | null
    aadharCardImage: string | null
    additionalDocumentUpload: string | null
    documentId: string | null
    documentName: string | null
    documentImage: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: CompanyDetailCountAggregateOutputType | null
    _avg: CompanyDetailAvgAggregateOutputType | null
    _sum: CompanyDetailSumAggregateOutputType | null
    _min: CompanyDetailMinAggregateOutputType | null
    _max: CompanyDetailMaxAggregateOutputType | null
  }

  type GetCompanyDetailGroupByPayload<T extends companyDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyDetailGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyDetailGroupByOutputType[P]>
        }
      >
    >


  export type companyDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    companyName?: boolean
    brandName?: boolean
    brandShortName?: boolean
    billingAddress?: boolean
    billingPincode?: boolean
    billingState?: boolean
    billingCity?: boolean
    businessType?: boolean
    clientEntryType?: boolean
    gstNumber?: boolean
    companyPanNumber?: boolean
    aadharNumber?: boolean
    gstDocument?: boolean
    panCardHolderName?: boolean
    aadharCardHolderName?: boolean
    panCardImage?: boolean
    aadharCardImage?: boolean
    additionalDocumentUpload?: boolean
    documentId?: boolean
    documentName?: boolean
    documentImage?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["companyDetail"]>



  export type companyDetailSelectScalar = {
    id?: boolean
    adminId?: boolean
    companyName?: boolean
    brandName?: boolean
    brandShortName?: boolean
    billingAddress?: boolean
    billingPincode?: boolean
    billingState?: boolean
    billingCity?: boolean
    businessType?: boolean
    clientEntryType?: boolean
    gstNumber?: boolean
    companyPanNumber?: boolean
    aadharNumber?: boolean
    gstDocument?: boolean
    panCardHolderName?: boolean
    aadharCardHolderName?: boolean
    panCardImage?: boolean
    aadharCardImage?: boolean
    additionalDocumentUpload?: boolean
    documentId?: boolean
    documentName?: boolean
    documentImage?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type companyDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "companyName" | "brandName" | "brandShortName" | "billingAddress" | "billingPincode" | "billingState" | "billingCity" | "businessType" | "clientEntryType" | "gstNumber" | "companyPanNumber" | "aadharNumber" | "gstDocument" | "panCardHolderName" | "aadharCardHolderName" | "panCardImage" | "aadharCardImage" | "additionalDocumentUpload" | "documentId" | "documentName" | "documentImage" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["companyDetail"]>
  export type companyDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }

  export type $companyDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "companyDetail"
    objects: {
      admin: Prisma.$adminPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      companyName: string | null
      brandName: string | null
      brandShortName: string | null
      billingAddress: string | null
      billingPincode: string | null
      billingState: string | null
      billingCity: string | null
      businessType: string | null
      clientEntryType: string | null
      gstNumber: string | null
      companyPanNumber: string | null
      aadharNumber: string | null
      gstDocument: string | null
      panCardHolderName: string | null
      aadharCardHolderName: string | null
      panCardImage: string | null
      aadharCardImage: string | null
      additionalDocumentUpload: string | null
      documentId: string | null
      documentName: string | null
      documentImage: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["companyDetail"]>
    composites: {}
  }

  type companyDetailGetPayload<S extends boolean | null | undefined | companyDetailDefaultArgs> = $Result.GetResult<Prisma.$companyDetailPayload, S>

  type companyDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<companyDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyDetailCountAggregateInputType | true
    }

  export interface companyDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['companyDetail'], meta: { name: 'companyDetail' } }
    /**
     * Find zero or one CompanyDetail that matches the filter.
     * @param {companyDetailFindUniqueArgs} args - Arguments to find a CompanyDetail
     * @example
     * // Get one CompanyDetail
     * const companyDetail = await prisma.companyDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends companyDetailFindUniqueArgs>(args: SelectSubset<T, companyDetailFindUniqueArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CompanyDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {companyDetailFindUniqueOrThrowArgs} args - Arguments to find a CompanyDetail
     * @example
     * // Get one CompanyDetail
     * const companyDetail = await prisma.companyDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends companyDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, companyDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailFindFirstArgs} args - Arguments to find a CompanyDetail
     * @example
     * // Get one CompanyDetail
     * const companyDetail = await prisma.companyDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends companyDetailFindFirstArgs>(args?: SelectSubset<T, companyDetailFindFirstArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailFindFirstOrThrowArgs} args - Arguments to find a CompanyDetail
     * @example
     * // Get one CompanyDetail
     * const companyDetail = await prisma.companyDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends companyDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, companyDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CompanyDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyDetails
     * const companyDetails = await prisma.companyDetail.findMany()
     * 
     * // Get first 10 CompanyDetails
     * const companyDetails = await prisma.companyDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyDetailWithIdOnly = await prisma.companyDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends companyDetailFindManyArgs>(args?: SelectSubset<T, companyDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CompanyDetail.
     * @param {companyDetailCreateArgs} args - Arguments to create a CompanyDetail.
     * @example
     * // Create one CompanyDetail
     * const CompanyDetail = await prisma.companyDetail.create({
     *   data: {
     *     // ... data to create a CompanyDetail
     *   }
     * })
     * 
     */
    create<T extends companyDetailCreateArgs>(args: SelectSubset<T, companyDetailCreateArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CompanyDetails.
     * @param {companyDetailCreateManyArgs} args - Arguments to create many CompanyDetails.
     * @example
     * // Create many CompanyDetails
     * const companyDetail = await prisma.companyDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends companyDetailCreateManyArgs>(args?: SelectSubset<T, companyDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyDetail.
     * @param {companyDetailDeleteArgs} args - Arguments to delete one CompanyDetail.
     * @example
     * // Delete one CompanyDetail
     * const CompanyDetail = await prisma.companyDetail.delete({
     *   where: {
     *     // ... filter to delete one CompanyDetail
     *   }
     * })
     * 
     */
    delete<T extends companyDetailDeleteArgs>(args: SelectSubset<T, companyDetailDeleteArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CompanyDetail.
     * @param {companyDetailUpdateArgs} args - Arguments to update one CompanyDetail.
     * @example
     * // Update one CompanyDetail
     * const companyDetail = await prisma.companyDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends companyDetailUpdateArgs>(args: SelectSubset<T, companyDetailUpdateArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CompanyDetails.
     * @param {companyDetailDeleteManyArgs} args - Arguments to filter CompanyDetails to delete.
     * @example
     * // Delete a few CompanyDetails
     * const { count } = await prisma.companyDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends companyDetailDeleteManyArgs>(args?: SelectSubset<T, companyDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyDetails
     * const companyDetail = await prisma.companyDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends companyDetailUpdateManyArgs>(args: SelectSubset<T, companyDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyDetail.
     * @param {companyDetailUpsertArgs} args - Arguments to update or create a CompanyDetail.
     * @example
     * // Update or create a CompanyDetail
     * const companyDetail = await prisma.companyDetail.upsert({
     *   create: {
     *     // ... data to create a CompanyDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyDetail we want to update
     *   }
     * })
     */
    upsert<T extends companyDetailUpsertArgs>(args: SelectSubset<T, companyDetailUpsertArgs<ExtArgs>>): Prisma__companyDetailClient<$Result.GetResult<Prisma.$companyDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CompanyDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailCountArgs} args - Arguments to filter CompanyDetails to count.
     * @example
     * // Count the number of CompanyDetails
     * const count = await prisma.companyDetail.count({
     *   where: {
     *     // ... the filter for the CompanyDetails we want to count
     *   }
     * })
    **/
    count<T extends companyDetailCountArgs>(
      args?: Subset<T, companyDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyDetailAggregateArgs>(args: Subset<T, CompanyDetailAggregateArgs>): Prisma.PrismaPromise<GetCompanyDetailAggregateType<T>>

    /**
     * Group by CompanyDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends companyDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: companyDetailGroupByArgs['orderBy'] }
        : { orderBy?: companyDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, companyDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the companyDetail model
   */
  readonly fields: companyDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for companyDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__companyDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends adminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, adminDefaultArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the companyDetail model
   */
  interface companyDetailFieldRefs {
    readonly id: FieldRef<"companyDetail", 'Int'>
    readonly adminId: FieldRef<"companyDetail", 'Int'>
    readonly companyName: FieldRef<"companyDetail", 'String'>
    readonly brandName: FieldRef<"companyDetail", 'String'>
    readonly brandShortName: FieldRef<"companyDetail", 'String'>
    readonly billingAddress: FieldRef<"companyDetail", 'String'>
    readonly billingPincode: FieldRef<"companyDetail", 'String'>
    readonly billingState: FieldRef<"companyDetail", 'String'>
    readonly billingCity: FieldRef<"companyDetail", 'String'>
    readonly businessType: FieldRef<"companyDetail", 'String'>
    readonly clientEntryType: FieldRef<"companyDetail", 'String'>
    readonly gstNumber: FieldRef<"companyDetail", 'String'>
    readonly companyPanNumber: FieldRef<"companyDetail", 'String'>
    readonly aadharNumber: FieldRef<"companyDetail", 'String'>
    readonly gstDocument: FieldRef<"companyDetail", 'String'>
    readonly panCardHolderName: FieldRef<"companyDetail", 'String'>
    readonly aadharCardHolderName: FieldRef<"companyDetail", 'String'>
    readonly panCardImage: FieldRef<"companyDetail", 'String'>
    readonly aadharCardImage: FieldRef<"companyDetail", 'String'>
    readonly additionalDocumentUpload: FieldRef<"companyDetail", 'String'>
    readonly documentId: FieldRef<"companyDetail", 'String'>
    readonly documentName: FieldRef<"companyDetail", 'String'>
    readonly documentImage: FieldRef<"companyDetail", 'String'>
    readonly createdAt: FieldRef<"companyDetail", 'DateTime'>
    readonly createdBy: FieldRef<"companyDetail", 'Int'>
    readonly createdByRole: FieldRef<"companyDetail", 'String'>
    readonly updatedAt: FieldRef<"companyDetail", 'DateTime'>
    readonly updatedBy: FieldRef<"companyDetail", 'Int'>
    readonly updatedByRole: FieldRef<"companyDetail", 'String'>
    readonly deletedAt: FieldRef<"companyDetail", 'DateTime'>
    readonly deletedBy: FieldRef<"companyDetail", 'Int'>
    readonly deletedByRole: FieldRef<"companyDetail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * companyDetail findUnique
   */
  export type companyDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter, which companyDetail to fetch.
     */
    where: companyDetailWhereUniqueInput
  }

  /**
   * companyDetail findUniqueOrThrow
   */
  export type companyDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter, which companyDetail to fetch.
     */
    where: companyDetailWhereUniqueInput
  }

  /**
   * companyDetail findFirst
   */
  export type companyDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter, which companyDetail to fetch.
     */
    where?: companyDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companyDetails to fetch.
     */
    orderBy?: companyDetailOrderByWithRelationInput | companyDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companyDetails.
     */
    cursor?: companyDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companyDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companyDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companyDetails.
     */
    distinct?: CompanyDetailScalarFieldEnum | CompanyDetailScalarFieldEnum[]
  }

  /**
   * companyDetail findFirstOrThrow
   */
  export type companyDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter, which companyDetail to fetch.
     */
    where?: companyDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companyDetails to fetch.
     */
    orderBy?: companyDetailOrderByWithRelationInput | companyDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companyDetails.
     */
    cursor?: companyDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companyDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companyDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companyDetails.
     */
    distinct?: CompanyDetailScalarFieldEnum | CompanyDetailScalarFieldEnum[]
  }

  /**
   * companyDetail findMany
   */
  export type companyDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter, which companyDetails to fetch.
     */
    where?: companyDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companyDetails to fetch.
     */
    orderBy?: companyDetailOrderByWithRelationInput | companyDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing companyDetails.
     */
    cursor?: companyDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companyDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companyDetails.
     */
    skip?: number
    distinct?: CompanyDetailScalarFieldEnum | CompanyDetailScalarFieldEnum[]
  }

  /**
   * companyDetail create
   */
  export type companyDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a companyDetail.
     */
    data: XOR<companyDetailCreateInput, companyDetailUncheckedCreateInput>
  }

  /**
   * companyDetail createMany
   */
  export type companyDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many companyDetails.
     */
    data: companyDetailCreateManyInput | companyDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * companyDetail update
   */
  export type companyDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a companyDetail.
     */
    data: XOR<companyDetailUpdateInput, companyDetailUncheckedUpdateInput>
    /**
     * Choose, which companyDetail to update.
     */
    where: companyDetailWhereUniqueInput
  }

  /**
   * companyDetail updateMany
   */
  export type companyDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update companyDetails.
     */
    data: XOR<companyDetailUpdateManyMutationInput, companyDetailUncheckedUpdateManyInput>
    /**
     * Filter which companyDetails to update
     */
    where?: companyDetailWhereInput
    /**
     * Limit how many companyDetails to update.
     */
    limit?: number
  }

  /**
   * companyDetail upsert
   */
  export type companyDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the companyDetail to update in case it exists.
     */
    where: companyDetailWhereUniqueInput
    /**
     * In case the companyDetail found by the `where` argument doesn't exist, create a new companyDetail with this data.
     */
    create: XOR<companyDetailCreateInput, companyDetailUncheckedCreateInput>
    /**
     * In case the companyDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<companyDetailUpdateInput, companyDetailUncheckedUpdateInput>
  }

  /**
   * companyDetail delete
   */
  export type companyDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
    /**
     * Filter which companyDetail to delete.
     */
    where: companyDetailWhereUniqueInput
  }

  /**
   * companyDetail deleteMany
   */
  export type companyDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companyDetails to delete
     */
    where?: companyDetailWhereInput
    /**
     * Limit how many companyDetails to delete.
     */
    limit?: number
  }

  /**
   * companyDetail without action
   */
  export type companyDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the companyDetail
     */
    select?: companyDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the companyDetail
     */
    omit?: companyDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyDetailInclude<ExtArgs> | null
  }


  /**
   * Model bankAccount
   */

  export type AggregateBankAccount = {
    _count: BankAccountCountAggregateOutputType | null
    _avg: BankAccountAvgAggregateOutputType | null
    _sum: BankAccountSumAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  export type BankAccountAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type BankAccountSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type BankAccountMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    accountHolderName: string | null
    accountNumber: string | null
    bankName: string | null
    bankBranch: string | null
    accountType: string | null
    ifscCode: string | null
    cancelledChequeImage: string | null
    paymentMethod: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type BankAccountMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    accountHolderName: string | null
    accountNumber: string | null
    bankName: string | null
    bankBranch: string | null
    accountType: string | null
    ifscCode: string | null
    cancelledChequeImage: string | null
    paymentMethod: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type BankAccountCountAggregateOutputType = {
    id: number
    adminId: number
    accountHolderName: number
    accountNumber: number
    bankName: number
    bankBranch: number
    accountType: number
    ifscCode: number
    cancelledChequeImage: number
    paymentMethod: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type BankAccountAvgAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type BankAccountSumAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type BankAccountMinAggregateInputType = {
    id?: true
    adminId?: true
    accountHolderName?: true
    accountNumber?: true
    bankName?: true
    bankBranch?: true
    accountType?: true
    ifscCode?: true
    cancelledChequeImage?: true
    paymentMethod?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type BankAccountMaxAggregateInputType = {
    id?: true
    adminId?: true
    accountHolderName?: true
    accountNumber?: true
    bankName?: true
    bankBranch?: true
    accountType?: true
    ifscCode?: true
    cancelledChequeImage?: true
    paymentMethod?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type BankAccountCountAggregateInputType = {
    id?: true
    adminId?: true
    accountHolderName?: true
    accountNumber?: true
    bankName?: true
    bankBranch?: true
    accountType?: true
    ifscCode?: true
    cancelledChequeImage?: true
    paymentMethod?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type BankAccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bankAccount to aggregate.
     */
    where?: bankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bankAccounts to fetch.
     */
    orderBy?: bankAccountOrderByWithRelationInput | bankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bankAccounts
    **/
    _count?: true | BankAccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BankAccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BankAccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BankAccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BankAccountMaxAggregateInputType
  }

  export type GetBankAccountAggregateType<T extends BankAccountAggregateArgs> = {
        [P in keyof T & keyof AggregateBankAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBankAccount[P]>
      : GetScalarType<T[P], AggregateBankAccount[P]>
  }




  export type bankAccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bankAccountWhereInput
    orderBy?: bankAccountOrderByWithAggregationInput | bankAccountOrderByWithAggregationInput[]
    by: BankAccountScalarFieldEnum[] | BankAccountScalarFieldEnum
    having?: bankAccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BankAccountCountAggregateInputType | true
    _avg?: BankAccountAvgAggregateInputType
    _sum?: BankAccountSumAggregateInputType
    _min?: BankAccountMinAggregateInputType
    _max?: BankAccountMaxAggregateInputType
  }

  export type BankAccountGroupByOutputType = {
    id: number
    adminId: number
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage: string | null
    paymentMethod: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: BankAccountCountAggregateOutputType | null
    _avg: BankAccountAvgAggregateOutputType | null
    _sum: BankAccountSumAggregateOutputType | null
    _min: BankAccountMinAggregateOutputType | null
    _max: BankAccountMaxAggregateOutputType | null
  }

  type GetBankAccountGroupByPayload<T extends bankAccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BankAccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BankAccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
            : GetScalarType<T[P], BankAccountGroupByOutputType[P]>
        }
      >
    >


  export type bankAccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    accountHolderName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankBranch?: boolean
    accountType?: boolean
    ifscCode?: boolean
    cancelledChequeImage?: boolean
    paymentMethod?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bankAccount"]>



  export type bankAccountSelectScalar = {
    id?: boolean
    adminId?: boolean
    accountHolderName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    bankBranch?: boolean
    accountType?: boolean
    ifscCode?: boolean
    cancelledChequeImage?: boolean
    paymentMethod?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type bankAccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "accountHolderName" | "accountNumber" | "bankName" | "bankBranch" | "accountType" | "ifscCode" | "cancelledChequeImage" | "paymentMethod" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["bankAccount"]>
  export type bankAccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }

  export type $bankAccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bankAccount"
    objects: {
      admin: Prisma.$adminPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      accountHolderName: string
      accountNumber: string
      bankName: string
      bankBranch: string
      accountType: string
      ifscCode: string
      cancelledChequeImage: string | null
      paymentMethod: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["bankAccount"]>
    composites: {}
  }

  type bankAccountGetPayload<S extends boolean | null | undefined | bankAccountDefaultArgs> = $Result.GetResult<Prisma.$bankAccountPayload, S>

  type bankAccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bankAccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BankAccountCountAggregateInputType | true
    }

  export interface bankAccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bankAccount'], meta: { name: 'bankAccount' } }
    /**
     * Find zero or one BankAccount that matches the filter.
     * @param {bankAccountFindUniqueArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bankAccountFindUniqueArgs>(args: SelectSubset<T, bankAccountFindUniqueArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BankAccount that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bankAccountFindUniqueOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bankAccountFindUniqueOrThrowArgs>(args: SelectSubset<T, bankAccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankAccount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountFindFirstArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bankAccountFindFirstArgs>(args?: SelectSubset<T, bankAccountFindFirstArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankAccount that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountFindFirstOrThrowArgs} args - Arguments to find a BankAccount
     * @example
     * // Get one BankAccount
     * const bankAccount = await prisma.bankAccount.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bankAccountFindFirstOrThrowArgs>(args?: SelectSubset<T, bankAccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BankAccounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany()
     * 
     * // Get first 10 BankAccounts
     * const bankAccounts = await prisma.bankAccount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bankAccountWithIdOnly = await prisma.bankAccount.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bankAccountFindManyArgs>(args?: SelectSubset<T, bankAccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BankAccount.
     * @param {bankAccountCreateArgs} args - Arguments to create a BankAccount.
     * @example
     * // Create one BankAccount
     * const BankAccount = await prisma.bankAccount.create({
     *   data: {
     *     // ... data to create a BankAccount
     *   }
     * })
     * 
     */
    create<T extends bankAccountCreateArgs>(args: SelectSubset<T, bankAccountCreateArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BankAccounts.
     * @param {bankAccountCreateManyArgs} args - Arguments to create many BankAccounts.
     * @example
     * // Create many BankAccounts
     * const bankAccount = await prisma.bankAccount.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bankAccountCreateManyArgs>(args?: SelectSubset<T, bankAccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a BankAccount.
     * @param {bankAccountDeleteArgs} args - Arguments to delete one BankAccount.
     * @example
     * // Delete one BankAccount
     * const BankAccount = await prisma.bankAccount.delete({
     *   where: {
     *     // ... filter to delete one BankAccount
     *   }
     * })
     * 
     */
    delete<T extends bankAccountDeleteArgs>(args: SelectSubset<T, bankAccountDeleteArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BankAccount.
     * @param {bankAccountUpdateArgs} args - Arguments to update one BankAccount.
     * @example
     * // Update one BankAccount
     * const bankAccount = await prisma.bankAccount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bankAccountUpdateArgs>(args: SelectSubset<T, bankAccountUpdateArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BankAccounts.
     * @param {bankAccountDeleteManyArgs} args - Arguments to filter BankAccounts to delete.
     * @example
     * // Delete a few BankAccounts
     * const { count } = await prisma.bankAccount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bankAccountDeleteManyArgs>(args?: SelectSubset<T, bankAccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BankAccounts
     * const bankAccount = await prisma.bankAccount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bankAccountUpdateManyArgs>(args: SelectSubset<T, bankAccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BankAccount.
     * @param {bankAccountUpsertArgs} args - Arguments to update or create a BankAccount.
     * @example
     * // Update or create a BankAccount
     * const bankAccount = await prisma.bankAccount.upsert({
     *   create: {
     *     // ... data to create a BankAccount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BankAccount we want to update
     *   }
     * })
     */
    upsert<T extends bankAccountUpsertArgs>(args: SelectSubset<T, bankAccountUpsertArgs<ExtArgs>>): Prisma__bankAccountClient<$Result.GetResult<Prisma.$bankAccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BankAccounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountCountArgs} args - Arguments to filter BankAccounts to count.
     * @example
     * // Count the number of BankAccounts
     * const count = await prisma.bankAccount.count({
     *   where: {
     *     // ... the filter for the BankAccounts we want to count
     *   }
     * })
    **/
    count<T extends bankAccountCountArgs>(
      args?: Subset<T, bankAccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BankAccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankAccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BankAccountAggregateArgs>(args: Subset<T, BankAccountAggregateArgs>): Prisma.PrismaPromise<GetBankAccountAggregateType<T>>

    /**
     * Group by BankAccount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bankAccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bankAccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bankAccountGroupByArgs['orderBy'] }
        : { orderBy?: bankAccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bankAccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBankAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bankAccount model
   */
  readonly fields: bankAccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bankAccount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bankAccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends adminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, adminDefaultArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bankAccount model
   */
  interface bankAccountFieldRefs {
    readonly id: FieldRef<"bankAccount", 'Int'>
    readonly adminId: FieldRef<"bankAccount", 'Int'>
    readonly accountHolderName: FieldRef<"bankAccount", 'String'>
    readonly accountNumber: FieldRef<"bankAccount", 'String'>
    readonly bankName: FieldRef<"bankAccount", 'String'>
    readonly bankBranch: FieldRef<"bankAccount", 'String'>
    readonly accountType: FieldRef<"bankAccount", 'String'>
    readonly ifscCode: FieldRef<"bankAccount", 'String'>
    readonly cancelledChequeImage: FieldRef<"bankAccount", 'String'>
    readonly paymentMethod: FieldRef<"bankAccount", 'String'>
    readonly createdAt: FieldRef<"bankAccount", 'DateTime'>
    readonly createdBy: FieldRef<"bankAccount", 'Int'>
    readonly createdByRole: FieldRef<"bankAccount", 'String'>
    readonly updatedAt: FieldRef<"bankAccount", 'DateTime'>
    readonly updatedBy: FieldRef<"bankAccount", 'Int'>
    readonly updatedByRole: FieldRef<"bankAccount", 'String'>
    readonly deletedAt: FieldRef<"bankAccount", 'DateTime'>
    readonly deletedBy: FieldRef<"bankAccount", 'Int'>
    readonly deletedByRole: FieldRef<"bankAccount", 'String'>
  }
    

  // Custom InputTypes
  /**
   * bankAccount findUnique
   */
  export type bankAccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter, which bankAccount to fetch.
     */
    where: bankAccountWhereUniqueInput
  }

  /**
   * bankAccount findUniqueOrThrow
   */
  export type bankAccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter, which bankAccount to fetch.
     */
    where: bankAccountWhereUniqueInput
  }

  /**
   * bankAccount findFirst
   */
  export type bankAccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter, which bankAccount to fetch.
     */
    where?: bankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bankAccounts to fetch.
     */
    orderBy?: bankAccountOrderByWithRelationInput | bankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bankAccounts.
     */
    cursor?: bankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * bankAccount findFirstOrThrow
   */
  export type bankAccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter, which bankAccount to fetch.
     */
    where?: bankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bankAccounts to fetch.
     */
    orderBy?: bankAccountOrderByWithRelationInput | bankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bankAccounts.
     */
    cursor?: bankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bankAccounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bankAccounts.
     */
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * bankAccount findMany
   */
  export type bankAccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter, which bankAccounts to fetch.
     */
    where?: bankAccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bankAccounts to fetch.
     */
    orderBy?: bankAccountOrderByWithRelationInput | bankAccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bankAccounts.
     */
    cursor?: bankAccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bankAccounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bankAccounts.
     */
    skip?: number
    distinct?: BankAccountScalarFieldEnum | BankAccountScalarFieldEnum[]
  }

  /**
   * bankAccount create
   */
  export type bankAccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * The data needed to create a bankAccount.
     */
    data: XOR<bankAccountCreateInput, bankAccountUncheckedCreateInput>
  }

  /**
   * bankAccount createMany
   */
  export type bankAccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bankAccounts.
     */
    data: bankAccountCreateManyInput | bankAccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bankAccount update
   */
  export type bankAccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * The data needed to update a bankAccount.
     */
    data: XOR<bankAccountUpdateInput, bankAccountUncheckedUpdateInput>
    /**
     * Choose, which bankAccount to update.
     */
    where: bankAccountWhereUniqueInput
  }

  /**
   * bankAccount updateMany
   */
  export type bankAccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bankAccounts.
     */
    data: XOR<bankAccountUpdateManyMutationInput, bankAccountUncheckedUpdateManyInput>
    /**
     * Filter which bankAccounts to update
     */
    where?: bankAccountWhereInput
    /**
     * Limit how many bankAccounts to update.
     */
    limit?: number
  }

  /**
   * bankAccount upsert
   */
  export type bankAccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * The filter to search for the bankAccount to update in case it exists.
     */
    where: bankAccountWhereUniqueInput
    /**
     * In case the bankAccount found by the `where` argument doesn't exist, create a new bankAccount with this data.
     */
    create: XOR<bankAccountCreateInput, bankAccountUncheckedCreateInput>
    /**
     * In case the bankAccount was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bankAccountUpdateInput, bankAccountUncheckedUpdateInput>
  }

  /**
   * bankAccount delete
   */
  export type bankAccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
    /**
     * Filter which bankAccount to delete.
     */
    where: bankAccountWhereUniqueInput
  }

  /**
   * bankAccount deleteMany
   */
  export type bankAccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bankAccounts to delete
     */
    where?: bankAccountWhereInput
    /**
     * Limit how many bankAccounts to delete.
     */
    limit?: number
  }

  /**
   * bankAccount without action
   */
  export type bankAccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bankAccount
     */
    select?: bankAccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bankAccount
     */
    omit?: bankAccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bankAccountInclude<ExtArgs> | null
  }


  /**
   * Model adminStaff
   */

  export type AggregateAdminStaff = {
    _count: AdminStaffCountAggregateOutputType | null
    _avg: AdminStaffAvgAggregateOutputType | null
    _sum: AdminStaffSumAggregateOutputType | null
    _min: AdminStaffMinAggregateOutputType | null
    _max: AdminStaffMaxAggregateOutputType | null
  }

  export type AdminStaffAvgAggregateOutputType = {
    id: number | null
    admin_id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminStaffSumAggregateOutputType = {
    id: number | null
    admin_id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type AdminStaffMinAggregateOutputType = {
    id: number | null
    admin_id: number | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    status: string | null
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminStaffMaxAggregateOutputType = {
    id: number | null
    admin_id: number | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    status: string | null
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type AdminStaffCountAggregateOutputType = {
    id: number
    admin_id: number
    name: number
    email: number
    password: number
    role: number
    status: number
    pr_token: number
    pr_expires_at: number
    pr_last_reset: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type AdminStaffAvgAggregateInputType = {
    id?: true
    admin_id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminStaffSumAggregateInputType = {
    id?: true
    admin_id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type AdminStaffMinAggregateInputType = {
    id?: true
    admin_id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    status?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminStaffMaxAggregateInputType = {
    id?: true
    admin_id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    status?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type AdminStaffCountAggregateInputType = {
    id?: true
    admin_id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    status?: true
    pr_token?: true
    pr_expires_at?: true
    pr_last_reset?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type AdminStaffAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which adminStaff to aggregate.
     */
    where?: adminStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminStaffs to fetch.
     */
    orderBy?: adminStaffOrderByWithRelationInput | adminStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: adminStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned adminStaffs
    **/
    _count?: true | AdminStaffCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminStaffAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminStaffSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminStaffMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminStaffMaxAggregateInputType
  }

  export type GetAdminStaffAggregateType<T extends AdminStaffAggregateArgs> = {
        [P in keyof T & keyof AggregateAdminStaff]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdminStaff[P]>
      : GetScalarType<T[P], AggregateAdminStaff[P]>
  }




  export type adminStaffGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminStaffWhereInput
    orderBy?: adminStaffOrderByWithAggregationInput | adminStaffOrderByWithAggregationInput[]
    by: AdminStaffScalarFieldEnum[] | AdminStaffScalarFieldEnum
    having?: adminStaffScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminStaffCountAggregateInputType | true
    _avg?: AdminStaffAvgAggregateInputType
    _sum?: AdminStaffSumAggregateInputType
    _min?: AdminStaffMinAggregateInputType
    _max?: AdminStaffMaxAggregateInputType
  }

  export type AdminStaffGroupByOutputType = {
    id: number
    admin_id: number
    name: string
    email: string
    password: string
    role: string
    status: string
    pr_token: string | null
    pr_expires_at: Date | null
    pr_last_reset: Date | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: AdminStaffCountAggregateOutputType | null
    _avg: AdminStaffAvgAggregateOutputType | null
    _sum: AdminStaffSumAggregateOutputType | null
    _min: AdminStaffMinAggregateOutputType | null
    _max: AdminStaffMaxAggregateOutputType | null
  }

  type GetAdminStaffGroupByPayload<T extends adminStaffGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminStaffGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminStaffGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminStaffGroupByOutputType[P]>
            : GetScalarType<T[P], AdminStaffGroupByOutputType[P]>
        }
      >
    >


  export type adminStaffSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    status?: boolean
    pr_token?: boolean
    pr_expires_at?: boolean
    pr_last_reset?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adminStaff"]>



  export type adminStaffSelectScalar = {
    id?: boolean
    admin_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    status?: boolean
    pr_token?: boolean
    pr_expires_at?: boolean
    pr_last_reset?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type adminStaffOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admin_id" | "name" | "email" | "password" | "role" | "status" | "pr_token" | "pr_expires_at" | "pr_last_reset" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["adminStaff"]>
  export type adminStaffInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | adminDefaultArgs<ExtArgs>
  }

  export type $adminStaffPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "adminStaff"
    objects: {
      admin: Prisma.$adminPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      admin_id: number
      name: string
      email: string
      password: string
      role: string
      status: string
      pr_token: string | null
      pr_expires_at: Date | null
      pr_last_reset: Date | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["adminStaff"]>
    composites: {}
  }

  type adminStaffGetPayload<S extends boolean | null | undefined | adminStaffDefaultArgs> = $Result.GetResult<Prisma.$adminStaffPayload, S>

  type adminStaffCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<adminStaffFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminStaffCountAggregateInputType | true
    }

  export interface adminStaffDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['adminStaff'], meta: { name: 'adminStaff' } }
    /**
     * Find zero or one AdminStaff that matches the filter.
     * @param {adminStaffFindUniqueArgs} args - Arguments to find a AdminStaff
     * @example
     * // Get one AdminStaff
     * const adminStaff = await prisma.adminStaff.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends adminStaffFindUniqueArgs>(args: SelectSubset<T, adminStaffFindUniqueArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdminStaff that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {adminStaffFindUniqueOrThrowArgs} args - Arguments to find a AdminStaff
     * @example
     * // Get one AdminStaff
     * const adminStaff = await prisma.adminStaff.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends adminStaffFindUniqueOrThrowArgs>(args: SelectSubset<T, adminStaffFindUniqueOrThrowArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminStaff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffFindFirstArgs} args - Arguments to find a AdminStaff
     * @example
     * // Get one AdminStaff
     * const adminStaff = await prisma.adminStaff.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends adminStaffFindFirstArgs>(args?: SelectSubset<T, adminStaffFindFirstArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminStaff that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffFindFirstOrThrowArgs} args - Arguments to find a AdminStaff
     * @example
     * // Get one AdminStaff
     * const adminStaff = await prisma.adminStaff.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends adminStaffFindFirstOrThrowArgs>(args?: SelectSubset<T, adminStaffFindFirstOrThrowArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdminStaffs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdminStaffs
     * const adminStaffs = await prisma.adminStaff.findMany()
     * 
     * // Get first 10 AdminStaffs
     * const adminStaffs = await prisma.adminStaff.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminStaffWithIdOnly = await prisma.adminStaff.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends adminStaffFindManyArgs>(args?: SelectSubset<T, adminStaffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdminStaff.
     * @param {adminStaffCreateArgs} args - Arguments to create a AdminStaff.
     * @example
     * // Create one AdminStaff
     * const AdminStaff = await prisma.adminStaff.create({
     *   data: {
     *     // ... data to create a AdminStaff
     *   }
     * })
     * 
     */
    create<T extends adminStaffCreateArgs>(args: SelectSubset<T, adminStaffCreateArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdminStaffs.
     * @param {adminStaffCreateManyArgs} args - Arguments to create many AdminStaffs.
     * @example
     * // Create many AdminStaffs
     * const adminStaff = await prisma.adminStaff.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends adminStaffCreateManyArgs>(args?: SelectSubset<T, adminStaffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AdminStaff.
     * @param {adminStaffDeleteArgs} args - Arguments to delete one AdminStaff.
     * @example
     * // Delete one AdminStaff
     * const AdminStaff = await prisma.adminStaff.delete({
     *   where: {
     *     // ... filter to delete one AdminStaff
     *   }
     * })
     * 
     */
    delete<T extends adminStaffDeleteArgs>(args: SelectSubset<T, adminStaffDeleteArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdminStaff.
     * @param {adminStaffUpdateArgs} args - Arguments to update one AdminStaff.
     * @example
     * // Update one AdminStaff
     * const adminStaff = await prisma.adminStaff.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends adminStaffUpdateArgs>(args: SelectSubset<T, adminStaffUpdateArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdminStaffs.
     * @param {adminStaffDeleteManyArgs} args - Arguments to filter AdminStaffs to delete.
     * @example
     * // Delete a few AdminStaffs
     * const { count } = await prisma.adminStaff.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends adminStaffDeleteManyArgs>(args?: SelectSubset<T, adminStaffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminStaffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdminStaffs
     * const adminStaff = await prisma.adminStaff.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends adminStaffUpdateManyArgs>(args: SelectSubset<T, adminStaffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AdminStaff.
     * @param {adminStaffUpsertArgs} args - Arguments to update or create a AdminStaff.
     * @example
     * // Update or create a AdminStaff
     * const adminStaff = await prisma.adminStaff.upsert({
     *   create: {
     *     // ... data to create a AdminStaff
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdminStaff we want to update
     *   }
     * })
     */
    upsert<T extends adminStaffUpsertArgs>(args: SelectSubset<T, adminStaffUpsertArgs<ExtArgs>>): Prisma__adminStaffClient<$Result.GetResult<Prisma.$adminStaffPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdminStaffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffCountArgs} args - Arguments to filter AdminStaffs to count.
     * @example
     * // Count the number of AdminStaffs
     * const count = await prisma.adminStaff.count({
     *   where: {
     *     // ... the filter for the AdminStaffs we want to count
     *   }
     * })
    **/
    count<T extends adminStaffCountArgs>(
      args?: Subset<T, adminStaffCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminStaffCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdminStaff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminStaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminStaffAggregateArgs>(args: Subset<T, AdminStaffAggregateArgs>): Prisma.PrismaPromise<GetAdminStaffAggregateType<T>>

    /**
     * Group by AdminStaff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminStaffGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends adminStaffGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: adminStaffGroupByArgs['orderBy'] }
        : { orderBy?: adminStaffGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, adminStaffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminStaffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the adminStaff model
   */
  readonly fields: adminStaffFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for adminStaff.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__adminStaffClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends adminDefaultArgs<ExtArgs> = {}>(args?: Subset<T, adminDefaultArgs<ExtArgs>>): Prisma__adminClient<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the adminStaff model
   */
  interface adminStaffFieldRefs {
    readonly id: FieldRef<"adminStaff", 'Int'>
    readonly admin_id: FieldRef<"adminStaff", 'Int'>
    readonly name: FieldRef<"adminStaff", 'String'>
    readonly email: FieldRef<"adminStaff", 'String'>
    readonly password: FieldRef<"adminStaff", 'String'>
    readonly role: FieldRef<"adminStaff", 'String'>
    readonly status: FieldRef<"adminStaff", 'String'>
    readonly pr_token: FieldRef<"adminStaff", 'String'>
    readonly pr_expires_at: FieldRef<"adminStaff", 'DateTime'>
    readonly pr_last_reset: FieldRef<"adminStaff", 'DateTime'>
    readonly createdAt: FieldRef<"adminStaff", 'DateTime'>
    readonly createdBy: FieldRef<"adminStaff", 'Int'>
    readonly createdByRole: FieldRef<"adminStaff", 'String'>
    readonly updatedAt: FieldRef<"adminStaff", 'DateTime'>
    readonly updatedBy: FieldRef<"adminStaff", 'Int'>
    readonly updatedByRole: FieldRef<"adminStaff", 'String'>
    readonly deletedAt: FieldRef<"adminStaff", 'DateTime'>
    readonly deletedBy: FieldRef<"adminStaff", 'Int'>
    readonly deletedByRole: FieldRef<"adminStaff", 'String'>
  }
    

  // Custom InputTypes
  /**
   * adminStaff findUnique
   */
  export type adminStaffFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter, which adminStaff to fetch.
     */
    where: adminStaffWhereUniqueInput
  }

  /**
   * adminStaff findUniqueOrThrow
   */
  export type adminStaffFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter, which adminStaff to fetch.
     */
    where: adminStaffWhereUniqueInput
  }

  /**
   * adminStaff findFirst
   */
  export type adminStaffFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter, which adminStaff to fetch.
     */
    where?: adminStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminStaffs to fetch.
     */
    orderBy?: adminStaffOrderByWithRelationInput | adminStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for adminStaffs.
     */
    cursor?: adminStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of adminStaffs.
     */
    distinct?: AdminStaffScalarFieldEnum | AdminStaffScalarFieldEnum[]
  }

  /**
   * adminStaff findFirstOrThrow
   */
  export type adminStaffFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter, which adminStaff to fetch.
     */
    where?: adminStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminStaffs to fetch.
     */
    orderBy?: adminStaffOrderByWithRelationInput | adminStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for adminStaffs.
     */
    cursor?: adminStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of adminStaffs.
     */
    distinct?: AdminStaffScalarFieldEnum | AdminStaffScalarFieldEnum[]
  }

  /**
   * adminStaff findMany
   */
  export type adminStaffFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter, which adminStaffs to fetch.
     */
    where?: adminStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of adminStaffs to fetch.
     */
    orderBy?: adminStaffOrderByWithRelationInput | adminStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing adminStaffs.
     */
    cursor?: adminStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` adminStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` adminStaffs.
     */
    skip?: number
    distinct?: AdminStaffScalarFieldEnum | AdminStaffScalarFieldEnum[]
  }

  /**
   * adminStaff create
   */
  export type adminStaffCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * The data needed to create a adminStaff.
     */
    data: XOR<adminStaffCreateInput, adminStaffUncheckedCreateInput>
  }

  /**
   * adminStaff createMany
   */
  export type adminStaffCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many adminStaffs.
     */
    data: adminStaffCreateManyInput | adminStaffCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * adminStaff update
   */
  export type adminStaffUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * The data needed to update a adminStaff.
     */
    data: XOR<adminStaffUpdateInput, adminStaffUncheckedUpdateInput>
    /**
     * Choose, which adminStaff to update.
     */
    where: adminStaffWhereUniqueInput
  }

  /**
   * adminStaff updateMany
   */
  export type adminStaffUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update adminStaffs.
     */
    data: XOR<adminStaffUpdateManyMutationInput, adminStaffUncheckedUpdateManyInput>
    /**
     * Filter which adminStaffs to update
     */
    where?: adminStaffWhereInput
    /**
     * Limit how many adminStaffs to update.
     */
    limit?: number
  }

  /**
   * adminStaff upsert
   */
  export type adminStaffUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * The filter to search for the adminStaff to update in case it exists.
     */
    where: adminStaffWhereUniqueInput
    /**
     * In case the adminStaff found by the `where` argument doesn't exist, create a new adminStaff with this data.
     */
    create: XOR<adminStaffCreateInput, adminStaffUncheckedCreateInput>
    /**
     * In case the adminStaff was found with the provided `where` argument, update it with this data.
     */
    update: XOR<adminStaffUpdateInput, adminStaffUncheckedUpdateInput>
  }

  /**
   * adminStaff delete
   */
  export type adminStaffDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
    /**
     * Filter which adminStaff to delete.
     */
    where: adminStaffWhereUniqueInput
  }

  /**
   * adminStaff deleteMany
   */
  export type adminStaffDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which adminStaffs to delete
     */
    where?: adminStaffWhereInput
    /**
     * Limit how many adminStaffs to delete.
     */
    limit?: number
  }

  /**
   * adminStaff without action
   */
  export type adminStaffDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the adminStaff
     */
    select?: adminStaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the adminStaff
     */
    omit?: adminStaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminStaffInclude<ExtArgs> | null
  }


  /**
   * Model loginLog
   */

  export type AggregateLoginLog = {
    _count: LoginLogCountAggregateOutputType | null
    _avg: LoginLogAvgAggregateOutputType | null
    _sum: LoginLogSumAggregateOutputType | null
    _min: LoginLogMinAggregateOutputType | null
    _max: LoginLogMaxAggregateOutputType | null
  }

  export type LoginLogAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type LoginLogSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type LoginLogMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    adminRole: string | null
    action: string | null
    response: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type LoginLogMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    adminRole: string | null
    action: string | null
    response: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type LoginLogCountAggregateOutputType = {
    id: number
    adminId: number
    adminRole: number
    action: number
    response: number
    ipv4: number
    ipv6: number
    internetServiceProvider: number
    clientInformation: number
    userAgent: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type LoginLogAvgAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type LoginLogSumAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type LoginLogMinAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    action?: true
    response?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type LoginLogMaxAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    action?: true
    response?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type LoginLogCountAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    action?: true
    response?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type LoginLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which loginLog to aggregate.
     */
    where?: loginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of loginLogs to fetch.
     */
    orderBy?: loginLogOrderByWithRelationInput | loginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: loginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` loginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` loginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned loginLogs
    **/
    _count?: true | LoginLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoginLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoginLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoginLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoginLogMaxAggregateInputType
  }

  export type GetLoginLogAggregateType<T extends LoginLogAggregateArgs> = {
        [P in keyof T & keyof AggregateLoginLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoginLog[P]>
      : GetScalarType<T[P], AggregateLoginLog[P]>
  }




  export type loginLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: loginLogWhereInput
    orderBy?: loginLogOrderByWithAggregationInput | loginLogOrderByWithAggregationInput[]
    by: LoginLogScalarFieldEnum[] | LoginLogScalarFieldEnum
    having?: loginLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoginLogCountAggregateInputType | true
    _avg?: LoginLogAvgAggregateInputType
    _sum?: LoginLogSumAggregateInputType
    _min?: LoginLogMinAggregateInputType
    _max?: LoginLogMaxAggregateInputType
  }

  export type LoginLogGroupByOutputType = {
    id: number
    adminId: number
    adminRole: string
    action: string
    response: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: LoginLogCountAggregateOutputType | null
    _avg: LoginLogAvgAggregateOutputType | null
    _sum: LoginLogSumAggregateOutputType | null
    _min: LoginLogMinAggregateOutputType | null
    _max: LoginLogMaxAggregateOutputType | null
  }

  type GetLoginLogGroupByPayload<T extends loginLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoginLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoginLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoginLogGroupByOutputType[P]>
            : GetScalarType<T[P], LoginLogGroupByOutputType[P]>
        }
      >
    >


  export type loginLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    adminRole?: boolean
    action?: boolean
    response?: boolean
    ipv4?: boolean
    ipv6?: boolean
    internetServiceProvider?: boolean
    clientInformation?: boolean
    userAgent?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }, ExtArgs["result"]["loginLog"]>



  export type loginLogSelectScalar = {
    id?: boolean
    adminId?: boolean
    adminRole?: boolean
    action?: boolean
    response?: boolean
    ipv4?: boolean
    ipv6?: boolean
    internetServiceProvider?: boolean
    clientInformation?: boolean
    userAgent?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type loginLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "adminRole" | "action" | "response" | "ipv4" | "ipv6" | "internetServiceProvider" | "clientInformation" | "userAgent" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["loginLog"]>

  export type $loginLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "loginLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      adminRole: string
      action: string
      response: string | null
      ipv4: string | null
      ipv6: string | null
      internetServiceProvider: string | null
      clientInformation: string | null
      userAgent: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["loginLog"]>
    composites: {}
  }

  type loginLogGetPayload<S extends boolean | null | undefined | loginLogDefaultArgs> = $Result.GetResult<Prisma.$loginLogPayload, S>

  type loginLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<loginLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LoginLogCountAggregateInputType | true
    }

  export interface loginLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['loginLog'], meta: { name: 'loginLog' } }
    /**
     * Find zero or one LoginLog that matches the filter.
     * @param {loginLogFindUniqueArgs} args - Arguments to find a LoginLog
     * @example
     * // Get one LoginLog
     * const loginLog = await prisma.loginLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends loginLogFindUniqueArgs>(args: SelectSubset<T, loginLogFindUniqueArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LoginLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {loginLogFindUniqueOrThrowArgs} args - Arguments to find a LoginLog
     * @example
     * // Get one LoginLog
     * const loginLog = await prisma.loginLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends loginLogFindUniqueOrThrowArgs>(args: SelectSubset<T, loginLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LoginLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogFindFirstArgs} args - Arguments to find a LoginLog
     * @example
     * // Get one LoginLog
     * const loginLog = await prisma.loginLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends loginLogFindFirstArgs>(args?: SelectSubset<T, loginLogFindFirstArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LoginLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogFindFirstOrThrowArgs} args - Arguments to find a LoginLog
     * @example
     * // Get one LoginLog
     * const loginLog = await prisma.loginLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends loginLogFindFirstOrThrowArgs>(args?: SelectSubset<T, loginLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LoginLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoginLogs
     * const loginLogs = await prisma.loginLog.findMany()
     * 
     * // Get first 10 LoginLogs
     * const loginLogs = await prisma.loginLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loginLogWithIdOnly = await prisma.loginLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends loginLogFindManyArgs>(args?: SelectSubset<T, loginLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LoginLog.
     * @param {loginLogCreateArgs} args - Arguments to create a LoginLog.
     * @example
     * // Create one LoginLog
     * const LoginLog = await prisma.loginLog.create({
     *   data: {
     *     // ... data to create a LoginLog
     *   }
     * })
     * 
     */
    create<T extends loginLogCreateArgs>(args: SelectSubset<T, loginLogCreateArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LoginLogs.
     * @param {loginLogCreateManyArgs} args - Arguments to create many LoginLogs.
     * @example
     * // Create many LoginLogs
     * const loginLog = await prisma.loginLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends loginLogCreateManyArgs>(args?: SelectSubset<T, loginLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a LoginLog.
     * @param {loginLogDeleteArgs} args - Arguments to delete one LoginLog.
     * @example
     * // Delete one LoginLog
     * const LoginLog = await prisma.loginLog.delete({
     *   where: {
     *     // ... filter to delete one LoginLog
     *   }
     * })
     * 
     */
    delete<T extends loginLogDeleteArgs>(args: SelectSubset<T, loginLogDeleteArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LoginLog.
     * @param {loginLogUpdateArgs} args - Arguments to update one LoginLog.
     * @example
     * // Update one LoginLog
     * const loginLog = await prisma.loginLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends loginLogUpdateArgs>(args: SelectSubset<T, loginLogUpdateArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LoginLogs.
     * @param {loginLogDeleteManyArgs} args - Arguments to filter LoginLogs to delete.
     * @example
     * // Delete a few LoginLogs
     * const { count } = await prisma.loginLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends loginLogDeleteManyArgs>(args?: SelectSubset<T, loginLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoginLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoginLogs
     * const loginLog = await prisma.loginLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends loginLogUpdateManyArgs>(args: SelectSubset<T, loginLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LoginLog.
     * @param {loginLogUpsertArgs} args - Arguments to update or create a LoginLog.
     * @example
     * // Update or create a LoginLog
     * const loginLog = await prisma.loginLog.upsert({
     *   create: {
     *     // ... data to create a LoginLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoginLog we want to update
     *   }
     * })
     */
    upsert<T extends loginLogUpsertArgs>(args: SelectSubset<T, loginLogUpsertArgs<ExtArgs>>): Prisma__loginLogClient<$Result.GetResult<Prisma.$loginLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LoginLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogCountArgs} args - Arguments to filter LoginLogs to count.
     * @example
     * // Count the number of LoginLogs
     * const count = await prisma.loginLog.count({
     *   where: {
     *     // ... the filter for the LoginLogs we want to count
     *   }
     * })
    **/
    count<T extends loginLogCountArgs>(
      args?: Subset<T, loginLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoginLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoginLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoginLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoginLogAggregateArgs>(args: Subset<T, LoginLogAggregateArgs>): Prisma.PrismaPromise<GetLoginLogAggregateType<T>>

    /**
     * Group by LoginLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends loginLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: loginLogGroupByArgs['orderBy'] }
        : { orderBy?: loginLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, loginLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoginLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the loginLog model
   */
  readonly fields: loginLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for loginLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__loginLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the loginLog model
   */
  interface loginLogFieldRefs {
    readonly id: FieldRef<"loginLog", 'Int'>
    readonly adminId: FieldRef<"loginLog", 'Int'>
    readonly adminRole: FieldRef<"loginLog", 'String'>
    readonly action: FieldRef<"loginLog", 'String'>
    readonly response: FieldRef<"loginLog", 'String'>
    readonly ipv4: FieldRef<"loginLog", 'String'>
    readonly ipv6: FieldRef<"loginLog", 'String'>
    readonly internetServiceProvider: FieldRef<"loginLog", 'String'>
    readonly clientInformation: FieldRef<"loginLog", 'String'>
    readonly userAgent: FieldRef<"loginLog", 'String'>
    readonly createdAt: FieldRef<"loginLog", 'DateTime'>
    readonly createdBy: FieldRef<"loginLog", 'Int'>
    readonly createdByRole: FieldRef<"loginLog", 'String'>
    readonly updatedAt: FieldRef<"loginLog", 'DateTime'>
    readonly updatedBy: FieldRef<"loginLog", 'Int'>
    readonly updatedByRole: FieldRef<"loginLog", 'String'>
    readonly deletedAt: FieldRef<"loginLog", 'DateTime'>
    readonly deletedBy: FieldRef<"loginLog", 'Int'>
    readonly deletedByRole: FieldRef<"loginLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * loginLog findUnique
   */
  export type loginLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter, which loginLog to fetch.
     */
    where: loginLogWhereUniqueInput
  }

  /**
   * loginLog findUniqueOrThrow
   */
  export type loginLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter, which loginLog to fetch.
     */
    where: loginLogWhereUniqueInput
  }

  /**
   * loginLog findFirst
   */
  export type loginLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter, which loginLog to fetch.
     */
    where?: loginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of loginLogs to fetch.
     */
    orderBy?: loginLogOrderByWithRelationInput | loginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for loginLogs.
     */
    cursor?: loginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` loginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` loginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of loginLogs.
     */
    distinct?: LoginLogScalarFieldEnum | LoginLogScalarFieldEnum[]
  }

  /**
   * loginLog findFirstOrThrow
   */
  export type loginLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter, which loginLog to fetch.
     */
    where?: loginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of loginLogs to fetch.
     */
    orderBy?: loginLogOrderByWithRelationInput | loginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for loginLogs.
     */
    cursor?: loginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` loginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` loginLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of loginLogs.
     */
    distinct?: LoginLogScalarFieldEnum | LoginLogScalarFieldEnum[]
  }

  /**
   * loginLog findMany
   */
  export type loginLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter, which loginLogs to fetch.
     */
    where?: loginLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of loginLogs to fetch.
     */
    orderBy?: loginLogOrderByWithRelationInput | loginLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing loginLogs.
     */
    cursor?: loginLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` loginLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` loginLogs.
     */
    skip?: number
    distinct?: LoginLogScalarFieldEnum | LoginLogScalarFieldEnum[]
  }

  /**
   * loginLog create
   */
  export type loginLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * The data needed to create a loginLog.
     */
    data: XOR<loginLogCreateInput, loginLogUncheckedCreateInput>
  }

  /**
   * loginLog createMany
   */
  export type loginLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many loginLogs.
     */
    data: loginLogCreateManyInput | loginLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * loginLog update
   */
  export type loginLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * The data needed to update a loginLog.
     */
    data: XOR<loginLogUpdateInput, loginLogUncheckedUpdateInput>
    /**
     * Choose, which loginLog to update.
     */
    where: loginLogWhereUniqueInput
  }

  /**
   * loginLog updateMany
   */
  export type loginLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update loginLogs.
     */
    data: XOR<loginLogUpdateManyMutationInput, loginLogUncheckedUpdateManyInput>
    /**
     * Filter which loginLogs to update
     */
    where?: loginLogWhereInput
    /**
     * Limit how many loginLogs to update.
     */
    limit?: number
  }

  /**
   * loginLog upsert
   */
  export type loginLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * The filter to search for the loginLog to update in case it exists.
     */
    where: loginLogWhereUniqueInput
    /**
     * In case the loginLog found by the `where` argument doesn't exist, create a new loginLog with this data.
     */
    create: XOR<loginLogCreateInput, loginLogUncheckedCreateInput>
    /**
     * In case the loginLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<loginLogUpdateInput, loginLogUncheckedUpdateInput>
  }

  /**
   * loginLog delete
   */
  export type loginLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
    /**
     * Filter which loginLog to delete.
     */
    where: loginLogWhereUniqueInput
  }

  /**
   * loginLog deleteMany
   */
  export type loginLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which loginLogs to delete
     */
    where?: loginLogWhereInput
    /**
     * Limit how many loginLogs to delete.
     */
    limit?: number
  }

  /**
   * loginLog without action
   */
  export type loginLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the loginLog
     */
    select?: loginLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the loginLog
     */
    omit?: loginLogOmit<ExtArgs> | null
  }


  /**
   * Model activityLog
   */

  export type AggregateActivityLog = {
    _count: ActivityLogCountAggregateOutputType | null
    _avg: ActivityLogAvgAggregateOutputType | null
    _sum: ActivityLogSumAggregateOutputType | null
    _min: ActivityLogMinAggregateOutputType | null
    _max: ActivityLogMaxAggregateOutputType | null
  }

  export type ActivityLogAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ActivityLogSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ActivityLogMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    adminRole: string | null
    module: string | null
    action: string | null
    endpoint: string | null
    method: string | null
    payload: string | null
    response: string | null
    result: boolean | null
    data: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ActivityLogMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    adminRole: string | null
    module: string | null
    action: string | null
    endpoint: string | null
    method: string | null
    payload: string | null
    response: string | null
    result: boolean | null
    data: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ActivityLogCountAggregateOutputType = {
    id: number
    adminId: number
    adminRole: number
    module: number
    action: number
    endpoint: number
    method: number
    payload: number
    response: number
    result: number
    data: number
    ipv4: number
    ipv6: number
    internetServiceProvider: number
    clientInformation: number
    userAgent: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type ActivityLogAvgAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ActivityLogSumAggregateInputType = {
    id?: true
    adminId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ActivityLogMinAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    module?: true
    action?: true
    endpoint?: true
    method?: true
    payload?: true
    response?: true
    result?: true
    data?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ActivityLogMaxAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    module?: true
    action?: true
    endpoint?: true
    method?: true
    payload?: true
    response?: true
    result?: true
    data?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ActivityLogCountAggregateInputType = {
    id?: true
    adminId?: true
    adminRole?: true
    module?: true
    action?: true
    endpoint?: true
    method?: true
    payload?: true
    response?: true
    result?: true
    data?: true
    ipv4?: true
    ipv6?: true
    internetServiceProvider?: true
    clientInformation?: true
    userAgent?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type ActivityLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which activityLog to aggregate.
     */
    where?: activityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activityLogs to fetch.
     */
    orderBy?: activityLogOrderByWithRelationInput | activityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: activityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activityLogs
    **/
    _count?: true | ActivityLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ActivityLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ActivityLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActivityLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActivityLogMaxAggregateInputType
  }

  export type GetActivityLogAggregateType<T extends ActivityLogAggregateArgs> = {
        [P in keyof T & keyof AggregateActivityLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivityLog[P]>
      : GetScalarType<T[P], AggregateActivityLog[P]>
  }




  export type activityLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: activityLogWhereInput
    orderBy?: activityLogOrderByWithAggregationInput | activityLogOrderByWithAggregationInput[]
    by: ActivityLogScalarFieldEnum[] | ActivityLogScalarFieldEnum
    having?: activityLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActivityLogCountAggregateInputType | true
    _avg?: ActivityLogAvgAggregateInputType
    _sum?: ActivityLogSumAggregateInputType
    _min?: ActivityLogMinAggregateInputType
    _max?: ActivityLogMaxAggregateInputType
  }

  export type ActivityLogGroupByOutputType = {
    id: number
    adminId: number
    adminRole: string
    module: string
    action: string
    endpoint: string
    method: string
    payload: string | null
    response: string | null
    result: boolean
    data: string | null
    ipv4: string | null
    ipv6: string | null
    internetServiceProvider: string | null
    clientInformation: string | null
    userAgent: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: ActivityLogCountAggregateOutputType | null
    _avg: ActivityLogAvgAggregateOutputType | null
    _sum: ActivityLogSumAggregateOutputType | null
    _min: ActivityLogMinAggregateOutputType | null
    _max: ActivityLogMaxAggregateOutputType | null
  }

  type GetActivityLogGroupByPayload<T extends activityLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActivityLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActivityLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActivityLogGroupByOutputType[P]>
            : GetScalarType<T[P], ActivityLogGroupByOutputType[P]>
        }
      >
    >


  export type activityLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    adminRole?: boolean
    module?: boolean
    action?: boolean
    endpoint?: boolean
    method?: boolean
    payload?: boolean
    response?: boolean
    result?: boolean
    data?: boolean
    ipv4?: boolean
    ipv6?: boolean
    internetServiceProvider?: boolean
    clientInformation?: boolean
    userAgent?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }, ExtArgs["result"]["activityLog"]>



  export type activityLogSelectScalar = {
    id?: boolean
    adminId?: boolean
    adminRole?: boolean
    module?: boolean
    action?: boolean
    endpoint?: boolean
    method?: boolean
    payload?: boolean
    response?: boolean
    result?: boolean
    data?: boolean
    ipv4?: boolean
    ipv6?: boolean
    internetServiceProvider?: boolean
    clientInformation?: boolean
    userAgent?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type activityLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "adminRole" | "module" | "action" | "endpoint" | "method" | "payload" | "response" | "result" | "data" | "ipv4" | "ipv6" | "internetServiceProvider" | "clientInformation" | "userAgent" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["activityLog"]>

  export type $activityLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "activityLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      adminRole: string
      module: string
      action: string
      endpoint: string
      method: string
      payload: string | null
      response: string | null
      result: boolean
      data: string | null
      ipv4: string | null
      ipv6: string | null
      internetServiceProvider: string | null
      clientInformation: string | null
      userAgent: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["activityLog"]>
    composites: {}
  }

  type activityLogGetPayload<S extends boolean | null | undefined | activityLogDefaultArgs> = $Result.GetResult<Prisma.$activityLogPayload, S>

  type activityLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<activityLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ActivityLogCountAggregateInputType | true
    }

  export interface activityLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['activityLog'], meta: { name: 'activityLog' } }
    /**
     * Find zero or one ActivityLog that matches the filter.
     * @param {activityLogFindUniqueArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends activityLogFindUniqueArgs>(args: SelectSubset<T, activityLogFindUniqueArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ActivityLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {activityLogFindUniqueOrThrowArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends activityLogFindUniqueOrThrowArgs>(args: SelectSubset<T, activityLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActivityLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogFindFirstArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends activityLogFindFirstArgs>(args?: SelectSubset<T, activityLogFindFirstArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActivityLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogFindFirstOrThrowArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends activityLogFindFirstOrThrowArgs>(args?: SelectSubset<T, activityLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ActivityLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ActivityLogs
     * const activityLogs = await prisma.activityLog.findMany()
     * 
     * // Get first 10 ActivityLogs
     * const activityLogs = await prisma.activityLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activityLogWithIdOnly = await prisma.activityLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends activityLogFindManyArgs>(args?: SelectSubset<T, activityLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ActivityLog.
     * @param {activityLogCreateArgs} args - Arguments to create a ActivityLog.
     * @example
     * // Create one ActivityLog
     * const ActivityLog = await prisma.activityLog.create({
     *   data: {
     *     // ... data to create a ActivityLog
     *   }
     * })
     * 
     */
    create<T extends activityLogCreateArgs>(args: SelectSubset<T, activityLogCreateArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ActivityLogs.
     * @param {activityLogCreateManyArgs} args - Arguments to create many ActivityLogs.
     * @example
     * // Create many ActivityLogs
     * const activityLog = await prisma.activityLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends activityLogCreateManyArgs>(args?: SelectSubset<T, activityLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ActivityLog.
     * @param {activityLogDeleteArgs} args - Arguments to delete one ActivityLog.
     * @example
     * // Delete one ActivityLog
     * const ActivityLog = await prisma.activityLog.delete({
     *   where: {
     *     // ... filter to delete one ActivityLog
     *   }
     * })
     * 
     */
    delete<T extends activityLogDeleteArgs>(args: SelectSubset<T, activityLogDeleteArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ActivityLog.
     * @param {activityLogUpdateArgs} args - Arguments to update one ActivityLog.
     * @example
     * // Update one ActivityLog
     * const activityLog = await prisma.activityLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends activityLogUpdateArgs>(args: SelectSubset<T, activityLogUpdateArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ActivityLogs.
     * @param {activityLogDeleteManyArgs} args - Arguments to filter ActivityLogs to delete.
     * @example
     * // Delete a few ActivityLogs
     * const { count } = await prisma.activityLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends activityLogDeleteManyArgs>(args?: SelectSubset<T, activityLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ActivityLogs
     * const activityLog = await prisma.activityLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends activityLogUpdateManyArgs>(args: SelectSubset<T, activityLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ActivityLog.
     * @param {activityLogUpsertArgs} args - Arguments to update or create a ActivityLog.
     * @example
     * // Update or create a ActivityLog
     * const activityLog = await prisma.activityLog.upsert({
     *   create: {
     *     // ... data to create a ActivityLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ActivityLog we want to update
     *   }
     * })
     */
    upsert<T extends activityLogUpsertArgs>(args: SelectSubset<T, activityLogUpsertArgs<ExtArgs>>): Prisma__activityLogClient<$Result.GetResult<Prisma.$activityLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogCountArgs} args - Arguments to filter ActivityLogs to count.
     * @example
     * // Count the number of ActivityLogs
     * const count = await prisma.activityLog.count({
     *   where: {
     *     // ... the filter for the ActivityLogs we want to count
     *   }
     * })
    **/
    count<T extends activityLogCountArgs>(
      args?: Subset<T, activityLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActivityLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActivityLogAggregateArgs>(args: Subset<T, ActivityLogAggregateArgs>): Prisma.PrismaPromise<GetActivityLogAggregateType<T>>

    /**
     * Group by ActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends activityLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: activityLogGroupByArgs['orderBy'] }
        : { orderBy?: activityLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, activityLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivityLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the activityLog model
   */
  readonly fields: activityLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for activityLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__activityLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the activityLog model
   */
  interface activityLogFieldRefs {
    readonly id: FieldRef<"activityLog", 'Int'>
    readonly adminId: FieldRef<"activityLog", 'Int'>
    readonly adminRole: FieldRef<"activityLog", 'String'>
    readonly module: FieldRef<"activityLog", 'String'>
    readonly action: FieldRef<"activityLog", 'String'>
    readonly endpoint: FieldRef<"activityLog", 'String'>
    readonly method: FieldRef<"activityLog", 'String'>
    readonly payload: FieldRef<"activityLog", 'String'>
    readonly response: FieldRef<"activityLog", 'String'>
    readonly result: FieldRef<"activityLog", 'Boolean'>
    readonly data: FieldRef<"activityLog", 'String'>
    readonly ipv4: FieldRef<"activityLog", 'String'>
    readonly ipv6: FieldRef<"activityLog", 'String'>
    readonly internetServiceProvider: FieldRef<"activityLog", 'String'>
    readonly clientInformation: FieldRef<"activityLog", 'String'>
    readonly userAgent: FieldRef<"activityLog", 'String'>
    readonly createdAt: FieldRef<"activityLog", 'DateTime'>
    readonly createdBy: FieldRef<"activityLog", 'Int'>
    readonly createdByRole: FieldRef<"activityLog", 'String'>
    readonly updatedAt: FieldRef<"activityLog", 'DateTime'>
    readonly updatedBy: FieldRef<"activityLog", 'Int'>
    readonly updatedByRole: FieldRef<"activityLog", 'String'>
    readonly deletedAt: FieldRef<"activityLog", 'DateTime'>
    readonly deletedBy: FieldRef<"activityLog", 'Int'>
    readonly deletedByRole: FieldRef<"activityLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * activityLog findUnique
   */
  export type activityLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter, which activityLog to fetch.
     */
    where: activityLogWhereUniqueInput
  }

  /**
   * activityLog findUniqueOrThrow
   */
  export type activityLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter, which activityLog to fetch.
     */
    where: activityLogWhereUniqueInput
  }

  /**
   * activityLog findFirst
   */
  export type activityLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter, which activityLog to fetch.
     */
    where?: activityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activityLogs to fetch.
     */
    orderBy?: activityLogOrderByWithRelationInput | activityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activityLogs.
     */
    cursor?: activityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activityLogs.
     */
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * activityLog findFirstOrThrow
   */
  export type activityLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter, which activityLog to fetch.
     */
    where?: activityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activityLogs to fetch.
     */
    orderBy?: activityLogOrderByWithRelationInput | activityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activityLogs.
     */
    cursor?: activityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activityLogs.
     */
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * activityLog findMany
   */
  export type activityLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter, which activityLogs to fetch.
     */
    where?: activityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activityLogs to fetch.
     */
    orderBy?: activityLogOrderByWithRelationInput | activityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activityLogs.
     */
    cursor?: activityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activityLogs.
     */
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * activityLog create
   */
  export type activityLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * The data needed to create a activityLog.
     */
    data: XOR<activityLogCreateInput, activityLogUncheckedCreateInput>
  }

  /**
   * activityLog createMany
   */
  export type activityLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many activityLogs.
     */
    data: activityLogCreateManyInput | activityLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * activityLog update
   */
  export type activityLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * The data needed to update a activityLog.
     */
    data: XOR<activityLogUpdateInput, activityLogUncheckedUpdateInput>
    /**
     * Choose, which activityLog to update.
     */
    where: activityLogWhereUniqueInput
  }

  /**
   * activityLog updateMany
   */
  export type activityLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update activityLogs.
     */
    data: XOR<activityLogUpdateManyMutationInput, activityLogUncheckedUpdateManyInput>
    /**
     * Filter which activityLogs to update
     */
    where?: activityLogWhereInput
    /**
     * Limit how many activityLogs to update.
     */
    limit?: number
  }

  /**
   * activityLog upsert
   */
  export type activityLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * The filter to search for the activityLog to update in case it exists.
     */
    where: activityLogWhereUniqueInput
    /**
     * In case the activityLog found by the `where` argument doesn't exist, create a new activityLog with this data.
     */
    create: XOR<activityLogCreateInput, activityLogUncheckedCreateInput>
    /**
     * In case the activityLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<activityLogUpdateInput, activityLogUncheckedUpdateInput>
  }

  /**
   * activityLog delete
   */
  export type activityLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
    /**
     * Filter which activityLog to delete.
     */
    where: activityLogWhereUniqueInput
  }

  /**
   * activityLog deleteMany
   */
  export type activityLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which activityLogs to delete
     */
    where?: activityLogWhereInput
    /**
     * Limit how many activityLogs to delete.
     */
    limit?: number
  }

  /**
   * activityLog without action
   */
  export type activityLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activityLog
     */
    select?: activityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activityLog
     */
    omit?: activityLogOmit<ExtArgs> | null
  }


  /**
   * Model country
   */

  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CountrySumAggregateOutputType = {
    id: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CountryMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    iso3: string | null
    iso2: string | null
    phonecode: string | null
    currency: string | null
    currencyName: string | null
    currencySymbol: string | null
    nationality: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CountryMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    iso3: string | null
    iso2: string | null
    phonecode: string | null
    currency: string | null
    currencyName: string | null
    currencySymbol: string | null
    nationality: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CountryCountAggregateOutputType = {
    id: number
    name: number
    iso3: number
    iso2: number
    phonecode: number
    currency: number
    currencyName: number
    currencySymbol: number
    nationality: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type CountryAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CountrySumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CountryMinAggregateInputType = {
    id?: true
    name?: true
    iso3?: true
    iso2?: true
    phonecode?: true
    currency?: true
    currencyName?: true
    currencySymbol?: true
    nationality?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CountryMaxAggregateInputType = {
    id?: true
    name?: true
    iso3?: true
    iso2?: true
    phonecode?: true
    currency?: true
    currencyName?: true
    currencySymbol?: true
    nationality?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CountryCountAggregateInputType = {
    id?: true
    name?: true
    iso3?: true
    iso2?: true
    phonecode?: true
    currency?: true
    currencyName?: true
    currencySymbol?: true
    nationality?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type CountryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which country to aggregate.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CountryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CountrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type countryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: countryWhereInput
    orderBy?: countryOrderByWithAggregationInput | countryOrderByWithAggregationInput[]
    by: CountryScalarFieldEnum[] | CountryScalarFieldEnum
    having?: countryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _avg?: CountryAvgAggregateInputType
    _sum?: CountrySumAggregateInputType
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }

  export type CountryGroupByOutputType = {
    id: bigint
    name: string
    iso3: string | null
    iso2: string | null
    phonecode: string | null
    currency: string | null
    currencyName: string | null
    currencySymbol: string | null
    nationality: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: CountryCountAggregateOutputType | null
    _avg: CountryAvgAggregateOutputType | null
    _sum: CountrySumAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends countryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type countrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    iso3?: boolean
    iso2?: boolean
    phonecode?: boolean
    currency?: boolean
    currencyName?: boolean
    currencySymbol?: boolean
    nationality?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    states?: boolean | country$statesArgs<ExtArgs>
    cities?: boolean | country$citiesArgs<ExtArgs>
    warehouses?: boolean | country$warehousesArgs<ExtArgs>
    highRtos?: boolean | country$highRtosArgs<ExtArgs>
    admins?: boolean | country$adminsArgs<ExtArgs>
    originProducts?: boolean | country$originProductsArgs<ExtArgs>
    shippingProducts?: boolean | country$shippingProductsArgs<ExtArgs>
    shippingOrders?: boolean | country$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | country$billingOrdersArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["country"]>



  export type countrySelectScalar = {
    id?: boolean
    name?: boolean
    iso3?: boolean
    iso2?: boolean
    phonecode?: boolean
    currency?: boolean
    currencyName?: boolean
    currencySymbol?: boolean
    nationality?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type countryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "iso3" | "iso2" | "phonecode" | "currency" | "currencyName" | "currencySymbol" | "nationality" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["country"]>
  export type countryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    states?: boolean | country$statesArgs<ExtArgs>
    cities?: boolean | country$citiesArgs<ExtArgs>
    warehouses?: boolean | country$warehousesArgs<ExtArgs>
    highRtos?: boolean | country$highRtosArgs<ExtArgs>
    admins?: boolean | country$adminsArgs<ExtArgs>
    originProducts?: boolean | country$originProductsArgs<ExtArgs>
    shippingProducts?: boolean | country$shippingProductsArgs<ExtArgs>
    shippingOrders?: boolean | country$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | country$billingOrdersArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $countryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "country"
    objects: {
      states: Prisma.$statePayload<ExtArgs>[]
      cities: Prisma.$cityPayload<ExtArgs>[]
      warehouses: Prisma.$warehousePayload<ExtArgs>[]
      highRtos: Prisma.$highRtoPayload<ExtArgs>[]
      admins: Prisma.$adminPayload<ExtArgs>[]
      originProducts: Prisma.$productPayload<ExtArgs>[]
      shippingProducts: Prisma.$productPayload<ExtArgs>[]
      shippingOrders: Prisma.$OrderPayload<ExtArgs>[]
      billingOrders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      iso3: string | null
      iso2: string | null
      phonecode: string | null
      currency: string | null
      currencyName: string | null
      currencySymbol: string | null
      nationality: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["country"]>
    composites: {}
  }

  type countryGetPayload<S extends boolean | null | undefined | countryDefaultArgs> = $Result.GetResult<Prisma.$countryPayload, S>

  type countryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<countryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CountryCountAggregateInputType | true
    }

  export interface countryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['country'], meta: { name: 'country' } }
    /**
     * Find zero or one Country that matches the filter.
     * @param {countryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends countryFindUniqueArgs>(args: SelectSubset<T, countryFindUniqueArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Country that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {countryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends countryFindUniqueOrThrowArgs>(args: SelectSubset<T, countryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends countryFindFirstArgs>(args?: SelectSubset<T, countryFindFirstArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends countryFindFirstOrThrowArgs>(args?: SelectSubset<T, countryFindFirstOrThrowArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const countryWithIdOnly = await prisma.country.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends countryFindManyArgs>(args?: SelectSubset<T, countryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Country.
     * @param {countryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
     */
    create<T extends countryCreateArgs>(args: SelectSubset<T, countryCreateArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Countries.
     * @param {countryCreateManyArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends countryCreateManyArgs>(args?: SelectSubset<T, countryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Country.
     * @param {countryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
     */
    delete<T extends countryDeleteArgs>(args: SelectSubset<T, countryDeleteArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Country.
     * @param {countryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends countryUpdateArgs>(args: SelectSubset<T, countryUpdateArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Countries.
     * @param {countryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends countryDeleteManyArgs>(args?: SelectSubset<T, countryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends countryUpdateManyArgs>(args: SelectSubset<T, countryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Country.
     * @param {countryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
     */
    upsert<T extends countryUpsertArgs>(args: SelectSubset<T, countryUpsertArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends countryCountArgs>(
      args?: Subset<T, countryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): Prisma.PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {countryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends countryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: countryGroupByArgs['orderBy'] }
        : { orderBy?: countryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, countryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the country model
   */
  readonly fields: countryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__countryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    states<T extends country$statesArgs<ExtArgs> = {}>(args?: Subset<T, country$statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cities<T extends country$citiesArgs<ExtArgs> = {}>(args?: Subset<T, country$citiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    warehouses<T extends country$warehousesArgs<ExtArgs> = {}>(args?: Subset<T, country$warehousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    highRtos<T extends country$highRtosArgs<ExtArgs> = {}>(args?: Subset<T, country$highRtosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admins<T extends country$adminsArgs<ExtArgs> = {}>(args?: Subset<T, country$adminsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    originProducts<T extends country$originProductsArgs<ExtArgs> = {}>(args?: Subset<T, country$originProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingProducts<T extends country$shippingProductsArgs<ExtArgs> = {}>(args?: Subset<T, country$shippingProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingOrders<T extends country$shippingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, country$shippingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    billingOrders<T extends country$billingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, country$billingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the country model
   */
  interface countryFieldRefs {
    readonly id: FieldRef<"country", 'BigInt'>
    readonly name: FieldRef<"country", 'String'>
    readonly iso3: FieldRef<"country", 'String'>
    readonly iso2: FieldRef<"country", 'String'>
    readonly phonecode: FieldRef<"country", 'String'>
    readonly currency: FieldRef<"country", 'String'>
    readonly currencyName: FieldRef<"country", 'String'>
    readonly currencySymbol: FieldRef<"country", 'String'>
    readonly nationality: FieldRef<"country", 'String'>
    readonly createdAt: FieldRef<"country", 'DateTime'>
    readonly createdBy: FieldRef<"country", 'Int'>
    readonly createdByRole: FieldRef<"country", 'String'>
    readonly updatedAt: FieldRef<"country", 'DateTime'>
    readonly updatedBy: FieldRef<"country", 'Int'>
    readonly updatedByRole: FieldRef<"country", 'String'>
    readonly deletedAt: FieldRef<"country", 'DateTime'>
    readonly deletedBy: FieldRef<"country", 'Int'>
    readonly deletedByRole: FieldRef<"country", 'String'>
  }
    

  // Custom InputTypes
  /**
   * country findUnique
   */
  export type countryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country findUniqueOrThrow
   */
  export type countryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country findFirst
   */
  export type countryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country findFirstOrThrow
   */
  export type countryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter, which country to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country findMany
   */
  export type countryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter, which countries to fetch.
     */
    where?: countryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of countries to fetch.
     */
    orderBy?: countryOrderByWithRelationInput | countryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing countries.
     */
    cursor?: countryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` countries.
     */
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * country create
   */
  export type countryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * The data needed to create a country.
     */
    data: XOR<countryCreateInput, countryUncheckedCreateInput>
  }

  /**
   * country createMany
   */
  export type countryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many countries.
     */
    data: countryCreateManyInput | countryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * country update
   */
  export type countryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * The data needed to update a country.
     */
    data: XOR<countryUpdateInput, countryUncheckedUpdateInput>
    /**
     * Choose, which country to update.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country updateMany
   */
  export type countryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update countries.
     */
    data: XOR<countryUpdateManyMutationInput, countryUncheckedUpdateManyInput>
    /**
     * Filter which countries to update
     */
    where?: countryWhereInput
    /**
     * Limit how many countries to update.
     */
    limit?: number
  }

  /**
   * country upsert
   */
  export type countryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * The filter to search for the country to update in case it exists.
     */
    where: countryWhereUniqueInput
    /**
     * In case the country found by the `where` argument doesn't exist, create a new country with this data.
     */
    create: XOR<countryCreateInput, countryUncheckedCreateInput>
    /**
     * In case the country was found with the provided `where` argument, update it with this data.
     */
    update: XOR<countryUpdateInput, countryUncheckedUpdateInput>
  }

  /**
   * country delete
   */
  export type countryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    /**
     * Filter which country to delete.
     */
    where: countryWhereUniqueInput
  }

  /**
   * country deleteMany
   */
  export type countryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which countries to delete
     */
    where?: countryWhereInput
    /**
     * Limit how many countries to delete.
     */
    limit?: number
  }

  /**
   * country.states
   */
  export type country$statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
    orderBy?: stateOrderByWithRelationInput | stateOrderByWithRelationInput[]
    cursor?: stateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * country.cities
   */
  export type country$citiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    cursor?: cityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * country.warehouses
   */
  export type country$warehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    where?: warehouseWhereInput
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    cursor?: warehouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * country.highRtos
   */
  export type country$highRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    where?: highRtoWhereInput
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    cursor?: highRtoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * country.admins
   */
  export type country$adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    where?: adminWhereInput
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    cursor?: adminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * country.originProducts
   */
  export type country$originProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    where?: productWhereInput
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    cursor?: productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * country.shippingProducts
   */
  export type country$shippingProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    where?: productWhereInput
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    cursor?: productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * country.shippingOrders
   */
  export type country$shippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * country.billingOrders
   */
  export type country$billingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * country without action
   */
  export type countryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
  }


  /**
   * Model state
   */

  export type AggregateState = {
    _count: StateCountAggregateOutputType | null
    _avg: StateAvgAggregateOutputType | null
    _sum: StateSumAggregateOutputType | null
    _min: StateMinAggregateOutputType | null
    _max: StateMaxAggregateOutputType | null
  }

  export type StateAvgAggregateOutputType = {
    id: number | null
    countryId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type StateSumAggregateOutputType = {
    id: bigint | null
    countryId: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type StateMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    countryId: bigint | null
    iso2: string | null
    type: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type StateMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    countryId: bigint | null
    iso2: string | null
    type: string | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type StateCountAggregateOutputType = {
    id: number
    name: number
    countryId: number
    iso2: number
    type: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type StateAvgAggregateInputType = {
    id?: true
    countryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type StateSumAggregateInputType = {
    id?: true
    countryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type StateMinAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    iso2?: true
    type?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type StateMaxAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    iso2?: true
    type?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type StateCountAggregateInputType = {
    id?: true
    name?: true
    countryId?: true
    iso2?: true
    type?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type StateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which state to aggregate.
     */
    where?: stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of states to fetch.
     */
    orderBy?: stateOrderByWithRelationInput | stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned states
    **/
    _count?: true | StateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StateMaxAggregateInputType
  }

  export type GetStateAggregateType<T extends StateAggregateArgs> = {
        [P in keyof T & keyof AggregateState]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateState[P]>
      : GetScalarType<T[P], AggregateState[P]>
  }




  export type stateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stateWhereInput
    orderBy?: stateOrderByWithAggregationInput | stateOrderByWithAggregationInput[]
    by: StateScalarFieldEnum[] | StateScalarFieldEnum
    having?: stateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StateCountAggregateInputType | true
    _avg?: StateAvgAggregateInputType
    _sum?: StateSumAggregateInputType
    _min?: StateMinAggregateInputType
    _max?: StateMaxAggregateInputType
  }

  export type StateGroupByOutputType = {
    id: bigint
    name: string
    countryId: bigint
    iso2: string | null
    type: string | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: StateCountAggregateOutputType | null
    _avg: StateAvgAggregateOutputType | null
    _sum: StateSumAggregateOutputType | null
    _min: StateMinAggregateOutputType | null
    _max: StateMaxAggregateOutputType | null
  }

  type GetStateGroupByPayload<T extends stateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StateGroupByOutputType[P]>
            : GetScalarType<T[P], StateGroupByOutputType[P]>
        }
      >
    >


  export type stateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    countryId?: boolean
    iso2?: boolean
    type?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    country?: boolean | countryDefaultArgs<ExtArgs>
    cities?: boolean | state$citiesArgs<ExtArgs>
    warehouses?: boolean | state$warehousesArgs<ExtArgs>
    highRtos?: boolean | state$highRtosArgs<ExtArgs>
    admins?: boolean | state$adminsArgs<ExtArgs>
    shippingOrders?: boolean | state$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | state$billingOrdersArgs<ExtArgs>
    _count?: boolean | StateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["state"]>



  export type stateSelectScalar = {
    id?: boolean
    name?: boolean
    countryId?: boolean
    iso2?: boolean
    type?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type stateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "countryId" | "iso2" | "type" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["state"]>
  export type stateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    country?: boolean | countryDefaultArgs<ExtArgs>
    cities?: boolean | state$citiesArgs<ExtArgs>
    warehouses?: boolean | state$warehousesArgs<ExtArgs>
    highRtos?: boolean | state$highRtosArgs<ExtArgs>
    admins?: boolean | state$adminsArgs<ExtArgs>
    shippingOrders?: boolean | state$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | state$billingOrdersArgs<ExtArgs>
    _count?: boolean | StateCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $statePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "state"
    objects: {
      country: Prisma.$countryPayload<ExtArgs>
      cities: Prisma.$cityPayload<ExtArgs>[]
      warehouses: Prisma.$warehousePayload<ExtArgs>[]
      highRtos: Prisma.$highRtoPayload<ExtArgs>[]
      admins: Prisma.$adminPayload<ExtArgs>[]
      shippingOrders: Prisma.$OrderPayload<ExtArgs>[]
      billingOrders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      countryId: bigint
      iso2: string | null
      type: string | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["state"]>
    composites: {}
  }

  type stateGetPayload<S extends boolean | null | undefined | stateDefaultArgs> = $Result.GetResult<Prisma.$statePayload, S>

  type stateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StateCountAggregateInputType | true
    }

  export interface stateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['state'], meta: { name: 'state' } }
    /**
     * Find zero or one State that matches the filter.
     * @param {stateFindUniqueArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stateFindUniqueArgs>(args: SelectSubset<T, stateFindUniqueArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one State that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stateFindUniqueOrThrowArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stateFindUniqueOrThrowArgs>(args: SelectSubset<T, stateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first State that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateFindFirstArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stateFindFirstArgs>(args?: SelectSubset<T, stateFindFirstArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first State that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateFindFirstOrThrowArgs} args - Arguments to find a State
     * @example
     * // Get one State
     * const state = await prisma.state.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stateFindFirstOrThrowArgs>(args?: SelectSubset<T, stateFindFirstOrThrowArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more States that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all States
     * const states = await prisma.state.findMany()
     * 
     * // Get first 10 States
     * const states = await prisma.state.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stateWithIdOnly = await prisma.state.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends stateFindManyArgs>(args?: SelectSubset<T, stateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a State.
     * @param {stateCreateArgs} args - Arguments to create a State.
     * @example
     * // Create one State
     * const State = await prisma.state.create({
     *   data: {
     *     // ... data to create a State
     *   }
     * })
     * 
     */
    create<T extends stateCreateArgs>(args: SelectSubset<T, stateCreateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many States.
     * @param {stateCreateManyArgs} args - Arguments to create many States.
     * @example
     * // Create many States
     * const state = await prisma.state.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stateCreateManyArgs>(args?: SelectSubset<T, stateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a State.
     * @param {stateDeleteArgs} args - Arguments to delete one State.
     * @example
     * // Delete one State
     * const State = await prisma.state.delete({
     *   where: {
     *     // ... filter to delete one State
     *   }
     * })
     * 
     */
    delete<T extends stateDeleteArgs>(args: SelectSubset<T, stateDeleteArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one State.
     * @param {stateUpdateArgs} args - Arguments to update one State.
     * @example
     * // Update one State
     * const state = await prisma.state.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stateUpdateArgs>(args: SelectSubset<T, stateUpdateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more States.
     * @param {stateDeleteManyArgs} args - Arguments to filter States to delete.
     * @example
     * // Delete a few States
     * const { count } = await prisma.state.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stateDeleteManyArgs>(args?: SelectSubset<T, stateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more States.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many States
     * const state = await prisma.state.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stateUpdateManyArgs>(args: SelectSubset<T, stateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one State.
     * @param {stateUpsertArgs} args - Arguments to update or create a State.
     * @example
     * // Update or create a State
     * const state = await prisma.state.upsert({
     *   create: {
     *     // ... data to create a State
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the State we want to update
     *   }
     * })
     */
    upsert<T extends stateUpsertArgs>(args: SelectSubset<T, stateUpsertArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of States.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateCountArgs} args - Arguments to filter States to count.
     * @example
     * // Count the number of States
     * const count = await prisma.state.count({
     *   where: {
     *     // ... the filter for the States we want to count
     *   }
     * })
    **/
    count<T extends stateCountArgs>(
      args?: Subset<T, stateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a State.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StateAggregateArgs>(args: Subset<T, StateAggregateArgs>): Prisma.PrismaPromise<GetStateAggregateType<T>>

    /**
     * Group by State.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stateGroupByArgs['orderBy'] }
        : { orderBy?: stateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the state model
   */
  readonly fields: stateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for state.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    country<T extends countryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, countryDefaultArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cities<T extends state$citiesArgs<ExtArgs> = {}>(args?: Subset<T, state$citiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    warehouses<T extends state$warehousesArgs<ExtArgs> = {}>(args?: Subset<T, state$warehousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    highRtos<T extends state$highRtosArgs<ExtArgs> = {}>(args?: Subset<T, state$highRtosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admins<T extends state$adminsArgs<ExtArgs> = {}>(args?: Subset<T, state$adminsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingOrders<T extends state$shippingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, state$shippingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    billingOrders<T extends state$billingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, state$billingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the state model
   */
  interface stateFieldRefs {
    readonly id: FieldRef<"state", 'BigInt'>
    readonly name: FieldRef<"state", 'String'>
    readonly countryId: FieldRef<"state", 'BigInt'>
    readonly iso2: FieldRef<"state", 'String'>
    readonly type: FieldRef<"state", 'String'>
    readonly createdAt: FieldRef<"state", 'DateTime'>
    readonly createdBy: FieldRef<"state", 'Int'>
    readonly createdByRole: FieldRef<"state", 'String'>
    readonly updatedAt: FieldRef<"state", 'DateTime'>
    readonly updatedBy: FieldRef<"state", 'Int'>
    readonly updatedByRole: FieldRef<"state", 'String'>
    readonly deletedAt: FieldRef<"state", 'DateTime'>
    readonly deletedBy: FieldRef<"state", 'Int'>
    readonly deletedByRole: FieldRef<"state", 'String'>
  }
    

  // Custom InputTypes
  /**
   * state findUnique
   */
  export type stateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter, which state to fetch.
     */
    where: stateWhereUniqueInput
  }

  /**
   * state findUniqueOrThrow
   */
  export type stateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter, which state to fetch.
     */
    where: stateWhereUniqueInput
  }

  /**
   * state findFirst
   */
  export type stateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter, which state to fetch.
     */
    where?: stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of states to fetch.
     */
    orderBy?: stateOrderByWithRelationInput | stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for states.
     */
    cursor?: stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of states.
     */
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * state findFirstOrThrow
   */
  export type stateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter, which state to fetch.
     */
    where?: stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of states to fetch.
     */
    orderBy?: stateOrderByWithRelationInput | stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for states.
     */
    cursor?: stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of states.
     */
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * state findMany
   */
  export type stateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter, which states to fetch.
     */
    where?: stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of states to fetch.
     */
    orderBy?: stateOrderByWithRelationInput | stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing states.
     */
    cursor?: stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` states.
     */
    skip?: number
    distinct?: StateScalarFieldEnum | StateScalarFieldEnum[]
  }

  /**
   * state create
   */
  export type stateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * The data needed to create a state.
     */
    data: XOR<stateCreateInput, stateUncheckedCreateInput>
  }

  /**
   * state createMany
   */
  export type stateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many states.
     */
    data: stateCreateManyInput | stateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * state update
   */
  export type stateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * The data needed to update a state.
     */
    data: XOR<stateUpdateInput, stateUncheckedUpdateInput>
    /**
     * Choose, which state to update.
     */
    where: stateWhereUniqueInput
  }

  /**
   * state updateMany
   */
  export type stateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update states.
     */
    data: XOR<stateUpdateManyMutationInput, stateUncheckedUpdateManyInput>
    /**
     * Filter which states to update
     */
    where?: stateWhereInput
    /**
     * Limit how many states to update.
     */
    limit?: number
  }

  /**
   * state upsert
   */
  export type stateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * The filter to search for the state to update in case it exists.
     */
    where: stateWhereUniqueInput
    /**
     * In case the state found by the `where` argument doesn't exist, create a new state with this data.
     */
    create: XOR<stateCreateInput, stateUncheckedCreateInput>
    /**
     * In case the state was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stateUpdateInput, stateUncheckedUpdateInput>
  }

  /**
   * state delete
   */
  export type stateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    /**
     * Filter which state to delete.
     */
    where: stateWhereUniqueInput
  }

  /**
   * state deleteMany
   */
  export type stateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which states to delete
     */
    where?: stateWhereInput
    /**
     * Limit how many states to delete.
     */
    limit?: number
  }

  /**
   * state.cities
   */
  export type state$citiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    cursor?: cityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * state.warehouses
   */
  export type state$warehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    where?: warehouseWhereInput
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    cursor?: warehouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * state.highRtos
   */
  export type state$highRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    where?: highRtoWhereInput
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    cursor?: highRtoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * state.admins
   */
  export type state$adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    where?: adminWhereInput
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    cursor?: adminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * state.shippingOrders
   */
  export type state$shippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * state.billingOrders
   */
  export type state$billingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * state without action
   */
  export type stateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
  }


  /**
   * Model city
   */

  export type AggregateCity = {
    _count: CityCountAggregateOutputType | null
    _avg: CityAvgAggregateOutputType | null
    _sum: CitySumAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  export type CityAvgAggregateOutputType = {
    id: number | null
    stateId: number | null
    countryId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CitySumAggregateOutputType = {
    id: bigint | null
    stateId: bigint | null
    countryId: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CityMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    stateId: bigint | null
    countryId: bigint | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CityMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    stateId: bigint | null
    countryId: bigint | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CityCountAggregateOutputType = {
    id: number
    name: number
    stateId: number
    countryId: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type CityAvgAggregateInputType = {
    id?: true
    stateId?: true
    countryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CitySumAggregateInputType = {
    id?: true
    stateId?: true
    countryId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CityMinAggregateInputType = {
    id?: true
    name?: true
    stateId?: true
    countryId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CityMaxAggregateInputType = {
    id?: true
    name?: true
    stateId?: true
    countryId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CityCountAggregateInputType = {
    id?: true
    name?: true
    stateId?: true
    countryId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type CityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which city to aggregate.
     */
    where?: cityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cities to fetch.
     */
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cities
    **/
    _count?: true | CityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CityMaxAggregateInputType
  }

  export type GetCityAggregateType<T extends CityAggregateArgs> = {
        [P in keyof T & keyof AggregateCity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCity[P]>
      : GetScalarType<T[P], AggregateCity[P]>
  }




  export type cityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cityWhereInput
    orderBy?: cityOrderByWithAggregationInput | cityOrderByWithAggregationInput[]
    by: CityScalarFieldEnum[] | CityScalarFieldEnum
    having?: cityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CityCountAggregateInputType | true
    _avg?: CityAvgAggregateInputType
    _sum?: CitySumAggregateInputType
    _min?: CityMinAggregateInputType
    _max?: CityMaxAggregateInputType
  }

  export type CityGroupByOutputType = {
    id: bigint
    name: string
    stateId: bigint
    countryId: bigint
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: CityCountAggregateOutputType | null
    _avg: CityAvgAggregateOutputType | null
    _sum: CitySumAggregateOutputType | null
    _min: CityMinAggregateOutputType | null
    _max: CityMaxAggregateOutputType | null
  }

  type GetCityGroupByPayload<T extends cityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CityGroupByOutputType[P]>
            : GetScalarType<T[P], CityGroupByOutputType[P]>
        }
      >
    >


  export type citySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    stateId?: boolean
    countryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    state?: boolean | stateDefaultArgs<ExtArgs>
    country?: boolean | countryDefaultArgs<ExtArgs>
    warehouses?: boolean | city$warehousesArgs<ExtArgs>
    highRtos?: boolean | city$highRtosArgs<ExtArgs>
    admins?: boolean | city$adminsArgs<ExtArgs>
    shippingOrders?: boolean | city$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | city$billingOrdersArgs<ExtArgs>
    _count?: boolean | CityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["city"]>



  export type citySelectScalar = {
    id?: boolean
    name?: boolean
    stateId?: boolean
    countryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type cityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "stateId" | "countryId" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["city"]>
  export type cityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    state?: boolean | stateDefaultArgs<ExtArgs>
    country?: boolean | countryDefaultArgs<ExtArgs>
    warehouses?: boolean | city$warehousesArgs<ExtArgs>
    highRtos?: boolean | city$highRtosArgs<ExtArgs>
    admins?: boolean | city$adminsArgs<ExtArgs>
    shippingOrders?: boolean | city$shippingOrdersArgs<ExtArgs>
    billingOrders?: boolean | city$billingOrdersArgs<ExtArgs>
    _count?: boolean | CityCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $cityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "city"
    objects: {
      state: Prisma.$statePayload<ExtArgs>
      country: Prisma.$countryPayload<ExtArgs>
      warehouses: Prisma.$warehousePayload<ExtArgs>[]
      highRtos: Prisma.$highRtoPayload<ExtArgs>[]
      admins: Prisma.$adminPayload<ExtArgs>[]
      shippingOrders: Prisma.$OrderPayload<ExtArgs>[]
      billingOrders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      stateId: bigint
      countryId: bigint
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["city"]>
    composites: {}
  }

  type cityGetPayload<S extends boolean | null | undefined | cityDefaultArgs> = $Result.GetResult<Prisma.$cityPayload, S>

  type cityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CityCountAggregateInputType | true
    }

  export interface cityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['city'], meta: { name: 'city' } }
    /**
     * Find zero or one City that matches the filter.
     * @param {cityFindUniqueArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cityFindUniqueArgs>(args: SelectSubset<T, cityFindUniqueArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one City that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cityFindUniqueOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cityFindUniqueOrThrowArgs>(args: SelectSubset<T, cityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityFindFirstArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cityFindFirstArgs>(args?: SelectSubset<T, cityFindFirstArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first City that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityFindFirstOrThrowArgs} args - Arguments to find a City
     * @example
     * // Get one City
     * const city = await prisma.city.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cityFindFirstOrThrowArgs>(args?: SelectSubset<T, cityFindFirstOrThrowArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cities
     * const cities = await prisma.city.findMany()
     * 
     * // Get first 10 Cities
     * const cities = await prisma.city.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cityWithIdOnly = await prisma.city.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cityFindManyArgs>(args?: SelectSubset<T, cityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a City.
     * @param {cityCreateArgs} args - Arguments to create a City.
     * @example
     * // Create one City
     * const City = await prisma.city.create({
     *   data: {
     *     // ... data to create a City
     *   }
     * })
     * 
     */
    create<T extends cityCreateArgs>(args: SelectSubset<T, cityCreateArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cities.
     * @param {cityCreateManyArgs} args - Arguments to create many Cities.
     * @example
     * // Create many Cities
     * const city = await prisma.city.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cityCreateManyArgs>(args?: SelectSubset<T, cityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a City.
     * @param {cityDeleteArgs} args - Arguments to delete one City.
     * @example
     * // Delete one City
     * const City = await prisma.city.delete({
     *   where: {
     *     // ... filter to delete one City
     *   }
     * })
     * 
     */
    delete<T extends cityDeleteArgs>(args: SelectSubset<T, cityDeleteArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one City.
     * @param {cityUpdateArgs} args - Arguments to update one City.
     * @example
     * // Update one City
     * const city = await prisma.city.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cityUpdateArgs>(args: SelectSubset<T, cityUpdateArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cities.
     * @param {cityDeleteManyArgs} args - Arguments to filter Cities to delete.
     * @example
     * // Delete a few Cities
     * const { count } = await prisma.city.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cityDeleteManyArgs>(args?: SelectSubset<T, cityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cities
     * const city = await prisma.city.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cityUpdateManyArgs>(args: SelectSubset<T, cityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one City.
     * @param {cityUpsertArgs} args - Arguments to update or create a City.
     * @example
     * // Update or create a City
     * const city = await prisma.city.upsert({
     *   create: {
     *     // ... data to create a City
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the City we want to update
     *   }
     * })
     */
    upsert<T extends cityUpsertArgs>(args: SelectSubset<T, cityUpsertArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityCountArgs} args - Arguments to filter Cities to count.
     * @example
     * // Count the number of Cities
     * const count = await prisma.city.count({
     *   where: {
     *     // ... the filter for the Cities we want to count
     *   }
     * })
    **/
    count<T extends cityCountArgs>(
      args?: Subset<T, cityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CityAggregateArgs>(args: Subset<T, CityAggregateArgs>): Prisma.PrismaPromise<GetCityAggregateType<T>>

    /**
     * Group by City.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cityGroupByArgs['orderBy'] }
        : { orderBy?: cityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the city model
   */
  readonly fields: cityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for city.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    state<T extends stateDefaultArgs<ExtArgs> = {}>(args?: Subset<T, stateDefaultArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    country<T extends countryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, countryDefaultArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    warehouses<T extends city$warehousesArgs<ExtArgs> = {}>(args?: Subset<T, city$warehousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    highRtos<T extends city$highRtosArgs<ExtArgs> = {}>(args?: Subset<T, city$highRtosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admins<T extends city$adminsArgs<ExtArgs> = {}>(args?: Subset<T, city$adminsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingOrders<T extends city$shippingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, city$shippingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    billingOrders<T extends city$billingOrdersArgs<ExtArgs> = {}>(args?: Subset<T, city$billingOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the city model
   */
  interface cityFieldRefs {
    readonly id: FieldRef<"city", 'BigInt'>
    readonly name: FieldRef<"city", 'String'>
    readonly stateId: FieldRef<"city", 'BigInt'>
    readonly countryId: FieldRef<"city", 'BigInt'>
    readonly createdAt: FieldRef<"city", 'DateTime'>
    readonly createdBy: FieldRef<"city", 'Int'>
    readonly createdByRole: FieldRef<"city", 'String'>
    readonly updatedAt: FieldRef<"city", 'DateTime'>
    readonly updatedBy: FieldRef<"city", 'Int'>
    readonly updatedByRole: FieldRef<"city", 'String'>
    readonly deletedAt: FieldRef<"city", 'DateTime'>
    readonly deletedBy: FieldRef<"city", 'Int'>
    readonly deletedByRole: FieldRef<"city", 'String'>
  }
    

  // Custom InputTypes
  /**
   * city findUnique
   */
  export type cityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter, which city to fetch.
     */
    where: cityWhereUniqueInput
  }

  /**
   * city findUniqueOrThrow
   */
  export type cityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter, which city to fetch.
     */
    where: cityWhereUniqueInput
  }

  /**
   * city findFirst
   */
  export type cityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter, which city to fetch.
     */
    where?: cityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cities to fetch.
     */
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cities.
     */
    cursor?: cityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * city findFirstOrThrow
   */
  export type cityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter, which city to fetch.
     */
    where?: cityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cities to fetch.
     */
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cities.
     */
    cursor?: cityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cities.
     */
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * city findMany
   */
  export type cityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter, which cities to fetch.
     */
    where?: cityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cities to fetch.
     */
    orderBy?: cityOrderByWithRelationInput | cityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cities.
     */
    cursor?: cityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cities.
     */
    skip?: number
    distinct?: CityScalarFieldEnum | CityScalarFieldEnum[]
  }

  /**
   * city create
   */
  export type cityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * The data needed to create a city.
     */
    data: XOR<cityCreateInput, cityUncheckedCreateInput>
  }

  /**
   * city createMany
   */
  export type cityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cities.
     */
    data: cityCreateManyInput | cityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * city update
   */
  export type cityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * The data needed to update a city.
     */
    data: XOR<cityUpdateInput, cityUncheckedUpdateInput>
    /**
     * Choose, which city to update.
     */
    where: cityWhereUniqueInput
  }

  /**
   * city updateMany
   */
  export type cityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cities.
     */
    data: XOR<cityUpdateManyMutationInput, cityUncheckedUpdateManyInput>
    /**
     * Filter which cities to update
     */
    where?: cityWhereInput
    /**
     * Limit how many cities to update.
     */
    limit?: number
  }

  /**
   * city upsert
   */
  export type cityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * The filter to search for the city to update in case it exists.
     */
    where: cityWhereUniqueInput
    /**
     * In case the city found by the `where` argument doesn't exist, create a new city with this data.
     */
    create: XOR<cityCreateInput, cityUncheckedCreateInput>
    /**
     * In case the city was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cityUpdateInput, cityUncheckedUpdateInput>
  }

  /**
   * city delete
   */
  export type cityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    /**
     * Filter which city to delete.
     */
    where: cityWhereUniqueInput
  }

  /**
   * city deleteMany
   */
  export type cityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cities to delete
     */
    where?: cityWhereInput
    /**
     * Limit how many cities to delete.
     */
    limit?: number
  }

  /**
   * city.warehouses
   */
  export type city$warehousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    where?: warehouseWhereInput
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    cursor?: warehouseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * city.highRtos
   */
  export type city$highRtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    where?: highRtoWhereInput
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    cursor?: highRtoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * city.admins
   */
  export type city$adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin
     */
    select?: adminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin
     */
    omit?: adminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminInclude<ExtArgs> | null
    where?: adminWhereInput
    orderBy?: adminOrderByWithRelationInput | adminOrderByWithRelationInput[]
    cursor?: adminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * city.shippingOrders
   */
  export type city$shippingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * city.billingOrders
   */
  export type city$billingOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * city without action
   */
  export type cityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
  }


  /**
   * Model warehouse
   */

  export type AggregateWarehouse = {
    _count: WarehouseCountAggregateOutputType | null
    _avg: WarehouseAvgAggregateOutputType | null
    _sum: WarehouseSumAggregateOutputType | null
    _min: WarehouseMinAggregateOutputType | null
    _max: WarehouseMaxAggregateOutputType | null
  }

  export type WarehouseAvgAggregateOutputType = {
    id: number | null
    countryId: number | null
    stateId: number | null
    cityId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type WarehouseSumAggregateOutputType = {
    id: number | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type WarehouseMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    gst_number: string | null
    contact_name: string | null
    contact_number: string | null
    address_line_1: string | null
    address_line_2: string | null
    postal_code: string | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type WarehouseMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    gst_number: string | null
    contact_name: string | null
    contact_number: string | null
    address_line_1: string | null
    address_line_2: string | null
    postal_code: string | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type WarehouseCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    gst_number: number
    contact_name: number
    contact_number: number
    address_line_1: number
    address_line_2: number
    postal_code: number
    countryId: number
    stateId: number
    cityId: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type WarehouseAvgAggregateInputType = {
    id?: true
    countryId?: true
    stateId?: true
    cityId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type WarehouseSumAggregateInputType = {
    id?: true
    countryId?: true
    stateId?: true
    cityId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type WarehouseMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    gst_number?: true
    contact_name?: true
    contact_number?: true
    address_line_1?: true
    address_line_2?: true
    postal_code?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type WarehouseMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    gst_number?: true
    contact_name?: true
    contact_number?: true
    address_line_1?: true
    address_line_2?: true
    postal_code?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type WarehouseCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    gst_number?: true
    contact_name?: true
    contact_number?: true
    address_line_1?: true
    address_line_2?: true
    postal_code?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type WarehouseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which warehouse to aggregate.
     */
    where?: warehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of warehouses to fetch.
     */
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: warehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned warehouses
    **/
    _count?: true | WarehouseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WarehouseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WarehouseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WarehouseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WarehouseMaxAggregateInputType
  }

  export type GetWarehouseAggregateType<T extends WarehouseAggregateArgs> = {
        [P in keyof T & keyof AggregateWarehouse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWarehouse[P]>
      : GetScalarType<T[P], AggregateWarehouse[P]>
  }




  export type warehouseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: warehouseWhereInput
    orderBy?: warehouseOrderByWithAggregationInput | warehouseOrderByWithAggregationInput[]
    by: WarehouseScalarFieldEnum[] | WarehouseScalarFieldEnum
    having?: warehouseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WarehouseCountAggregateInputType | true
    _avg?: WarehouseAvgAggregateInputType
    _sum?: WarehouseSumAggregateInputType
    _min?: WarehouseMinAggregateInputType
    _max?: WarehouseMaxAggregateInputType
  }

  export type WarehouseGroupByOutputType = {
    id: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2: string | null
    postal_code: string
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: WarehouseCountAggregateOutputType | null
    _avg: WarehouseAvgAggregateOutputType | null
    _sum: WarehouseSumAggregateOutputType | null
    _min: WarehouseMinAggregateOutputType | null
    _max: WarehouseMaxAggregateOutputType | null
  }

  type GetWarehouseGroupByPayload<T extends warehouseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WarehouseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WarehouseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WarehouseGroupByOutputType[P]>
            : GetScalarType<T[P], WarehouseGroupByOutputType[P]>
        }
      >
    >


  export type warehouseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    gst_number?: boolean
    contact_name?: boolean
    contact_number?: boolean
    address_line_1?: boolean
    address_line_2?: boolean
    postal_code?: boolean
    countryId?: boolean
    stateId?: boolean
    cityId?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    country?: boolean | warehouse$countryArgs<ExtArgs>
    state?: boolean | warehouse$stateArgs<ExtArgs>
    city?: boolean | warehouse$cityArgs<ExtArgs>
  }, ExtArgs["result"]["warehouse"]>



  export type warehouseSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    gst_number?: boolean
    contact_name?: boolean
    contact_number?: boolean
    address_line_1?: boolean
    address_line_2?: boolean
    postal_code?: boolean
    countryId?: boolean
    stateId?: boolean
    cityId?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type warehouseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "gst_number" | "contact_name" | "contact_number" | "address_line_1" | "address_line_2" | "postal_code" | "countryId" | "stateId" | "cityId" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["warehouse"]>
  export type warehouseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    country?: boolean | warehouse$countryArgs<ExtArgs>
    state?: boolean | warehouse$stateArgs<ExtArgs>
    city?: boolean | warehouse$cityArgs<ExtArgs>
  }

  export type $warehousePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "warehouse"
    objects: {
      country: Prisma.$countryPayload<ExtArgs> | null
      state: Prisma.$statePayload<ExtArgs> | null
      city: Prisma.$cityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
      gst_number: string
      contact_name: string
      contact_number: string
      address_line_1: string
      address_line_2: string | null
      postal_code: string
      countryId: bigint | null
      stateId: bigint | null
      cityId: bigint | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["warehouse"]>
    composites: {}
  }

  type warehouseGetPayload<S extends boolean | null | undefined | warehouseDefaultArgs> = $Result.GetResult<Prisma.$warehousePayload, S>

  type warehouseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<warehouseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WarehouseCountAggregateInputType | true
    }

  export interface warehouseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['warehouse'], meta: { name: 'warehouse' } }
    /**
     * Find zero or one Warehouse that matches the filter.
     * @param {warehouseFindUniqueArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends warehouseFindUniqueArgs>(args: SelectSubset<T, warehouseFindUniqueArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Warehouse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {warehouseFindUniqueOrThrowArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends warehouseFindUniqueOrThrowArgs>(args: SelectSubset<T, warehouseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Warehouse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseFindFirstArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends warehouseFindFirstArgs>(args?: SelectSubset<T, warehouseFindFirstArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Warehouse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseFindFirstOrThrowArgs} args - Arguments to find a Warehouse
     * @example
     * // Get one Warehouse
     * const warehouse = await prisma.warehouse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends warehouseFindFirstOrThrowArgs>(args?: SelectSubset<T, warehouseFindFirstOrThrowArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Warehouses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Warehouses
     * const warehouses = await prisma.warehouse.findMany()
     * 
     * // Get first 10 Warehouses
     * const warehouses = await prisma.warehouse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const warehouseWithIdOnly = await prisma.warehouse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends warehouseFindManyArgs>(args?: SelectSubset<T, warehouseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Warehouse.
     * @param {warehouseCreateArgs} args - Arguments to create a Warehouse.
     * @example
     * // Create one Warehouse
     * const Warehouse = await prisma.warehouse.create({
     *   data: {
     *     // ... data to create a Warehouse
     *   }
     * })
     * 
     */
    create<T extends warehouseCreateArgs>(args: SelectSubset<T, warehouseCreateArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Warehouses.
     * @param {warehouseCreateManyArgs} args - Arguments to create many Warehouses.
     * @example
     * // Create many Warehouses
     * const warehouse = await prisma.warehouse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends warehouseCreateManyArgs>(args?: SelectSubset<T, warehouseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Warehouse.
     * @param {warehouseDeleteArgs} args - Arguments to delete one Warehouse.
     * @example
     * // Delete one Warehouse
     * const Warehouse = await prisma.warehouse.delete({
     *   where: {
     *     // ... filter to delete one Warehouse
     *   }
     * })
     * 
     */
    delete<T extends warehouseDeleteArgs>(args: SelectSubset<T, warehouseDeleteArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Warehouse.
     * @param {warehouseUpdateArgs} args - Arguments to update one Warehouse.
     * @example
     * // Update one Warehouse
     * const warehouse = await prisma.warehouse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends warehouseUpdateArgs>(args: SelectSubset<T, warehouseUpdateArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Warehouses.
     * @param {warehouseDeleteManyArgs} args - Arguments to filter Warehouses to delete.
     * @example
     * // Delete a few Warehouses
     * const { count } = await prisma.warehouse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends warehouseDeleteManyArgs>(args?: SelectSubset<T, warehouseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Warehouses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Warehouses
     * const warehouse = await prisma.warehouse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends warehouseUpdateManyArgs>(args: SelectSubset<T, warehouseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Warehouse.
     * @param {warehouseUpsertArgs} args - Arguments to update or create a Warehouse.
     * @example
     * // Update or create a Warehouse
     * const warehouse = await prisma.warehouse.upsert({
     *   create: {
     *     // ... data to create a Warehouse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Warehouse we want to update
     *   }
     * })
     */
    upsert<T extends warehouseUpsertArgs>(args: SelectSubset<T, warehouseUpsertArgs<ExtArgs>>): Prisma__warehouseClient<$Result.GetResult<Prisma.$warehousePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Warehouses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseCountArgs} args - Arguments to filter Warehouses to count.
     * @example
     * // Count the number of Warehouses
     * const count = await prisma.warehouse.count({
     *   where: {
     *     // ... the filter for the Warehouses we want to count
     *   }
     * })
    **/
    count<T extends warehouseCountArgs>(
      args?: Subset<T, warehouseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WarehouseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Warehouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WarehouseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WarehouseAggregateArgs>(args: Subset<T, WarehouseAggregateArgs>): Prisma.PrismaPromise<GetWarehouseAggregateType<T>>

    /**
     * Group by Warehouse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {warehouseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends warehouseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: warehouseGroupByArgs['orderBy'] }
        : { orderBy?: warehouseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, warehouseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWarehouseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the warehouse model
   */
  readonly fields: warehouseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for warehouse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__warehouseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    country<T extends warehouse$countryArgs<ExtArgs> = {}>(args?: Subset<T, warehouse$countryArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    state<T extends warehouse$stateArgs<ExtArgs> = {}>(args?: Subset<T, warehouse$stateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    city<T extends warehouse$cityArgs<ExtArgs> = {}>(args?: Subset<T, warehouse$cityArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the warehouse model
   */
  interface warehouseFieldRefs {
    readonly id: FieldRef<"warehouse", 'Int'>
    readonly name: FieldRef<"warehouse", 'String'>
    readonly slug: FieldRef<"warehouse", 'String'>
    readonly gst_number: FieldRef<"warehouse", 'String'>
    readonly contact_name: FieldRef<"warehouse", 'String'>
    readonly contact_number: FieldRef<"warehouse", 'String'>
    readonly address_line_1: FieldRef<"warehouse", 'String'>
    readonly address_line_2: FieldRef<"warehouse", 'String'>
    readonly postal_code: FieldRef<"warehouse", 'String'>
    readonly countryId: FieldRef<"warehouse", 'BigInt'>
    readonly stateId: FieldRef<"warehouse", 'BigInt'>
    readonly cityId: FieldRef<"warehouse", 'BigInt'>
    readonly status: FieldRef<"warehouse", 'Boolean'>
    readonly createdAt: FieldRef<"warehouse", 'DateTime'>
    readonly createdBy: FieldRef<"warehouse", 'Int'>
    readonly createdByRole: FieldRef<"warehouse", 'String'>
    readonly updatedAt: FieldRef<"warehouse", 'DateTime'>
    readonly updatedBy: FieldRef<"warehouse", 'Int'>
    readonly updatedByRole: FieldRef<"warehouse", 'String'>
    readonly deletedAt: FieldRef<"warehouse", 'DateTime'>
    readonly deletedBy: FieldRef<"warehouse", 'Int'>
    readonly deletedByRole: FieldRef<"warehouse", 'String'>
  }
    

  // Custom InputTypes
  /**
   * warehouse findUnique
   */
  export type warehouseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter, which warehouse to fetch.
     */
    where: warehouseWhereUniqueInput
  }

  /**
   * warehouse findUniqueOrThrow
   */
  export type warehouseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter, which warehouse to fetch.
     */
    where: warehouseWhereUniqueInput
  }

  /**
   * warehouse findFirst
   */
  export type warehouseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter, which warehouse to fetch.
     */
    where?: warehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of warehouses to fetch.
     */
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for warehouses.
     */
    cursor?: warehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of warehouses.
     */
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * warehouse findFirstOrThrow
   */
  export type warehouseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter, which warehouse to fetch.
     */
    where?: warehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of warehouses to fetch.
     */
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for warehouses.
     */
    cursor?: warehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` warehouses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of warehouses.
     */
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * warehouse findMany
   */
  export type warehouseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter, which warehouses to fetch.
     */
    where?: warehouseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of warehouses to fetch.
     */
    orderBy?: warehouseOrderByWithRelationInput | warehouseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing warehouses.
     */
    cursor?: warehouseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` warehouses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` warehouses.
     */
    skip?: number
    distinct?: WarehouseScalarFieldEnum | WarehouseScalarFieldEnum[]
  }

  /**
   * warehouse create
   */
  export type warehouseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * The data needed to create a warehouse.
     */
    data: XOR<warehouseCreateInput, warehouseUncheckedCreateInput>
  }

  /**
   * warehouse createMany
   */
  export type warehouseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many warehouses.
     */
    data: warehouseCreateManyInput | warehouseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * warehouse update
   */
  export type warehouseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * The data needed to update a warehouse.
     */
    data: XOR<warehouseUpdateInput, warehouseUncheckedUpdateInput>
    /**
     * Choose, which warehouse to update.
     */
    where: warehouseWhereUniqueInput
  }

  /**
   * warehouse updateMany
   */
  export type warehouseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update warehouses.
     */
    data: XOR<warehouseUpdateManyMutationInput, warehouseUncheckedUpdateManyInput>
    /**
     * Filter which warehouses to update
     */
    where?: warehouseWhereInput
    /**
     * Limit how many warehouses to update.
     */
    limit?: number
  }

  /**
   * warehouse upsert
   */
  export type warehouseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * The filter to search for the warehouse to update in case it exists.
     */
    where: warehouseWhereUniqueInput
    /**
     * In case the warehouse found by the `where` argument doesn't exist, create a new warehouse with this data.
     */
    create: XOR<warehouseCreateInput, warehouseUncheckedCreateInput>
    /**
     * In case the warehouse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<warehouseUpdateInput, warehouseUncheckedUpdateInput>
  }

  /**
   * warehouse delete
   */
  export type warehouseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
    /**
     * Filter which warehouse to delete.
     */
    where: warehouseWhereUniqueInput
  }

  /**
   * warehouse deleteMany
   */
  export type warehouseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which warehouses to delete
     */
    where?: warehouseWhereInput
    /**
     * Limit how many warehouses to delete.
     */
    limit?: number
  }

  /**
   * warehouse.country
   */
  export type warehouse$countryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    where?: countryWhereInput
  }

  /**
   * warehouse.state
   */
  export type warehouse$stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
  }

  /**
   * warehouse.city
   */
  export type warehouse$cityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
  }

  /**
   * warehouse without action
   */
  export type warehouseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the warehouse
     */
    select?: warehouseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the warehouse
     */
    omit?: warehouseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: warehouseInclude<ExtArgs> | null
  }


  /**
   * Model category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    description: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    description: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    description: number
    image: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which category to aggregate.
     */
    where?: categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoryOrderByWithRelationInput | categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoryWhereInput
    orderBy?: categoryOrderByWithAggregationInput | categoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: categoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    name: string
    slug: string
    description: string | null
    image: string | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends categoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    products?: boolean | category$productsArgs<ExtArgs>
    productRequests?: boolean | category$productRequestsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>



  export type categorySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type categoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "description" | "image" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["category"]>
  export type categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | category$productsArgs<ExtArgs>
    productRequests?: boolean | category$productRequestsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "category"
    objects: {
      products: Prisma.$productPayload<ExtArgs>[]
      productRequests: Prisma.$productRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
      description: string | null
      image: string | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type categoryGetPayload<S extends boolean | null | undefined | categoryDefaultArgs> = $Result.GetResult<Prisma.$categoryPayload, S>

  type categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['category'], meta: { name: 'category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {categoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoryFindUniqueArgs>(args: SelectSubset<T, categoryFindUniqueArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoryFindFirstArgs>(args?: SelectSubset<T, categoryFindFirstArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoryFindManyArgs>(args?: SelectSubset<T, categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {categoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends categoryCreateArgs>(args: SelectSubset<T, categoryCreateArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {categoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoryCreateManyArgs>(args?: SelectSubset<T, categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {categoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends categoryDeleteArgs>(args: SelectSubset<T, categoryDeleteArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {categoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoryUpdateArgs>(args: SelectSubset<T, categoryUpdateArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {categoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoryDeleteManyArgs>(args?: SelectSubset<T, categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoryUpdateManyArgs>(args: SelectSubset<T, categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {categoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends categoryUpsertArgs>(args: SelectSubset<T, categoryUpsertArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends categoryCountArgs>(
      args?: Subset<T, categoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoryGroupByArgs['orderBy'] }
        : { orderBy?: categoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the category model
   */
  readonly fields: categoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends category$productsArgs<ExtArgs> = {}>(args?: Subset<T, category$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productRequests<T extends category$productRequestsArgs<ExtArgs> = {}>(args?: Subset<T, category$productRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the category model
   */
  interface categoryFieldRefs {
    readonly id: FieldRef<"category", 'Int'>
    readonly name: FieldRef<"category", 'String'>
    readonly slug: FieldRef<"category", 'String'>
    readonly description: FieldRef<"category", 'String'>
    readonly image: FieldRef<"category", 'String'>
    readonly status: FieldRef<"category", 'Boolean'>
    readonly createdAt: FieldRef<"category", 'DateTime'>
    readonly createdBy: FieldRef<"category", 'Int'>
    readonly createdByRole: FieldRef<"category", 'String'>
    readonly updatedAt: FieldRef<"category", 'DateTime'>
    readonly updatedBy: FieldRef<"category", 'Int'>
    readonly updatedByRole: FieldRef<"category", 'String'>
    readonly deletedAt: FieldRef<"category", 'DateTime'>
    readonly deletedBy: FieldRef<"category", 'Int'>
    readonly deletedByRole: FieldRef<"category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * category findUnique
   */
  export type categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter, which category to fetch.
     */
    where: categoryWhereUniqueInput
  }

  /**
   * category findUniqueOrThrow
   */
  export type categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter, which category to fetch.
     */
    where: categoryWhereUniqueInput
  }

  /**
   * category findFirst
   */
  export type categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter, which category to fetch.
     */
    where?: categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoryOrderByWithRelationInput | categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * category findFirstOrThrow
   */
  export type categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter, which category to fetch.
     */
    where?: categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoryOrderByWithRelationInput | categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * category findMany
   */
  export type categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoryOrderByWithRelationInput | categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categories.
     */
    cursor?: categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * category create
   */
  export type categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * The data needed to create a category.
     */
    data: XOR<categoryCreateInput, categoryUncheckedCreateInput>
  }

  /**
   * category createMany
   */
  export type categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categories.
     */
    data: categoryCreateManyInput | categoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * category update
   */
  export type categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * The data needed to update a category.
     */
    data: XOR<categoryUpdateInput, categoryUncheckedUpdateInput>
    /**
     * Choose, which category to update.
     */
    where: categoryWhereUniqueInput
  }

  /**
   * category updateMany
   */
  export type categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categories.
     */
    data: XOR<categoryUpdateManyMutationInput, categoryUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoryWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * category upsert
   */
  export type categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * The filter to search for the category to update in case it exists.
     */
    where: categoryWhereUniqueInput
    /**
     * In case the category found by the `where` argument doesn't exist, create a new category with this data.
     */
    create: XOR<categoryCreateInput, categoryUncheckedCreateInput>
    /**
     * In case the category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoryUpdateInput, categoryUncheckedUpdateInput>
  }

  /**
   * category delete
   */
  export type categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
    /**
     * Filter which category to delete.
     */
    where: categoryWhereUniqueInput
  }

  /**
   * category deleteMany
   */
  export type categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to delete
     */
    where?: categoryWhereInput
    /**
     * Limit how many categories to delete.
     */
    limit?: number
  }

  /**
   * category.products
   */
  export type category$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    where?: productWhereInput
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    cursor?: productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * category.productRequests
   */
  export type category$productRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    where?: productRequestWhereInput
    orderBy?: productRequestOrderByWithRelationInput | productRequestOrderByWithRelationInput[]
    cursor?: productRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductRequestScalarFieldEnum | ProductRequestScalarFieldEnum[]
  }

  /**
   * category without action
   */
  export type categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the category
     */
    select?: categorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the category
     */
    omit?: categoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoryInclude<ExtArgs> | null
  }


  /**
   * Model brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type BrandSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type BrandMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    description: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type BrandMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    description: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    description: number
    image: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type BrandAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type BrandSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type BrandMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which brand to aggregate.
     */
    where?: brandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandOrderByWithRelationInput | brandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: brandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BrandAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BrandSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type brandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: brandWhereInput
    orderBy?: brandOrderByWithAggregationInput | brandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: brandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _avg?: BrandAvgAggregateInputType
    _sum?: BrandSumAggregateInputType
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: number
    name: string
    slug: string
    description: string | null
    image: string | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends brandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type brandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    products?: boolean | brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>



  export type brandSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type brandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "description" | "image" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["brand"]>
  export type brandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $brandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "brand"
    objects: {
      products: Prisma.$productPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
      description: string | null
      image: string | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type brandGetPayload<S extends boolean | null | undefined | brandDefaultArgs> = $Result.GetResult<Prisma.$brandPayload, S>

  type brandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<brandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface brandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['brand'], meta: { name: 'brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {brandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends brandFindUniqueArgs>(args: SelectSubset<T, brandFindUniqueArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {brandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends brandFindUniqueOrThrowArgs>(args: SelectSubset<T, brandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends brandFindFirstArgs>(args?: SelectSubset<T, brandFindFirstArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends brandFindFirstOrThrowArgs>(args?: SelectSubset<T, brandFindFirstOrThrowArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends brandFindManyArgs>(args?: SelectSubset<T, brandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brand.
     * @param {brandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends brandCreateArgs>(args: SelectSubset<T, brandCreateArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {brandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends brandCreateManyArgs>(args?: SelectSubset<T, brandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Brand.
     * @param {brandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends brandDeleteArgs>(args: SelectSubset<T, brandDeleteArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brand.
     * @param {brandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends brandUpdateArgs>(args: SelectSubset<T, brandUpdateArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {brandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends brandDeleteManyArgs>(args?: SelectSubset<T, brandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends brandUpdateManyArgs>(args: SelectSubset<T, brandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Brand.
     * @param {brandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends brandUpsertArgs>(args: SelectSubset<T, brandUpsertArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends brandCountArgs>(
      args?: Subset<T, brandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends brandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: brandGroupByArgs['orderBy'] }
        : { orderBy?: brandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, brandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the brand model
   */
  readonly fields: brandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__brandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends brand$productsArgs<ExtArgs> = {}>(args?: Subset<T, brand$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the brand model
   */
  interface brandFieldRefs {
    readonly id: FieldRef<"brand", 'Int'>
    readonly name: FieldRef<"brand", 'String'>
    readonly slug: FieldRef<"brand", 'String'>
    readonly description: FieldRef<"brand", 'String'>
    readonly image: FieldRef<"brand", 'String'>
    readonly status: FieldRef<"brand", 'Boolean'>
    readonly createdAt: FieldRef<"brand", 'DateTime'>
    readonly createdBy: FieldRef<"brand", 'Int'>
    readonly createdByRole: FieldRef<"brand", 'String'>
    readonly updatedAt: FieldRef<"brand", 'DateTime'>
    readonly updatedBy: FieldRef<"brand", 'Int'>
    readonly updatedByRole: FieldRef<"brand", 'String'>
    readonly deletedAt: FieldRef<"brand", 'DateTime'>
    readonly deletedBy: FieldRef<"brand", 'Int'>
    readonly deletedByRole: FieldRef<"brand", 'String'>
  }
    

  // Custom InputTypes
  /**
   * brand findUnique
   */
  export type brandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter, which brand to fetch.
     */
    where: brandWhereUniqueInput
  }

  /**
   * brand findUniqueOrThrow
   */
  export type brandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter, which brand to fetch.
     */
    where: brandWhereUniqueInput
  }

  /**
   * brand findFirst
   */
  export type brandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter, which brand to fetch.
     */
    where?: brandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandOrderByWithRelationInput | brandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for brands.
     */
    cursor?: brandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * brand findFirstOrThrow
   */
  export type brandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter, which brand to fetch.
     */
    where?: brandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandOrderByWithRelationInput | brandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for brands.
     */
    cursor?: brandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * brand findMany
   */
  export type brandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where?: brandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandOrderByWithRelationInput | brandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing brands.
     */
    cursor?: brandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * brand create
   */
  export type brandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * The data needed to create a brand.
     */
    data: XOR<brandCreateInput, brandUncheckedCreateInput>
  }

  /**
   * brand createMany
   */
  export type brandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many brands.
     */
    data: brandCreateManyInput | brandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * brand update
   */
  export type brandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * The data needed to update a brand.
     */
    data: XOR<brandUpdateInput, brandUncheckedUpdateInput>
    /**
     * Choose, which brand to update.
     */
    where: brandWhereUniqueInput
  }

  /**
   * brand updateMany
   */
  export type brandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update brands.
     */
    data: XOR<brandUpdateManyMutationInput, brandUncheckedUpdateManyInput>
    /**
     * Filter which brands to update
     */
    where?: brandWhereInput
    /**
     * Limit how many brands to update.
     */
    limit?: number
  }

  /**
   * brand upsert
   */
  export type brandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * The filter to search for the brand to update in case it exists.
     */
    where: brandWhereUniqueInput
    /**
     * In case the brand found by the `where` argument doesn't exist, create a new brand with this data.
     */
    create: XOR<brandCreateInput, brandUncheckedCreateInput>
    /**
     * In case the brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<brandUpdateInput, brandUncheckedUpdateInput>
  }

  /**
   * brand delete
   */
  export type brandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
    /**
     * Filter which brand to delete.
     */
    where: brandWhereUniqueInput
  }

  /**
   * brand deleteMany
   */
  export type brandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which brands to delete
     */
    where?: brandWhereInput
    /**
     * Limit how many brands to delete.
     */
    limit?: number
  }

  /**
   * brand.products
   */
  export type brand$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    where?: productWhereInput
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    cursor?: productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * brand without action
   */
  export type brandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brand
     */
    select?: brandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brand
     */
    omit?: brandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandInclude<ExtArgs> | null
  }


  /**
   * Model productRequest
   */

  export type AggregateProductRequest = {
    _count: ProductRequestCountAggregateOutputType | null
    _avg: ProductRequestAvgAggregateOutputType | null
    _sum: ProductRequestSumAggregateOutputType | null
    _min: ProductRequestMinAggregateOutputType | null
    _max: ProductRequestMaxAggregateOutputType | null
  }

  export type ProductRequestAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
    expectedPrice: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductRequestSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
    expectedPrice: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductRequestMinAggregateOutputType = {
    id: number | null
    name: string | null
    categoryId: number | null
    expectedPrice: number | null
    expectedDailyOrders: string | null
    url: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductRequestMaxAggregateOutputType = {
    id: number | null
    name: string | null
    categoryId: number | null
    expectedPrice: number | null
    expectedDailyOrders: string | null
    url: string | null
    image: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductRequestCountAggregateOutputType = {
    id: number
    name: number
    categoryId: number
    expectedPrice: number
    expectedDailyOrders: number
    url: number
    image: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type ProductRequestAvgAggregateInputType = {
    id?: true
    categoryId?: true
    expectedPrice?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductRequestSumAggregateInputType = {
    id?: true
    categoryId?: true
    expectedPrice?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductRequestMinAggregateInputType = {
    id?: true
    name?: true
    categoryId?: true
    expectedPrice?: true
    expectedDailyOrders?: true
    url?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductRequestMaxAggregateInputType = {
    id?: true
    name?: true
    categoryId?: true
    expectedPrice?: true
    expectedDailyOrders?: true
    url?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductRequestCountAggregateInputType = {
    id?: true
    name?: true
    categoryId?: true
    expectedPrice?: true
    expectedDailyOrders?: true
    url?: true
    image?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type ProductRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productRequest to aggregate.
     */
    where?: productRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productRequests to fetch.
     */
    orderBy?: productRequestOrderByWithRelationInput | productRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productRequests
    **/
    _count?: true | ProductRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductRequestMaxAggregateInputType
  }

  export type GetProductRequestAggregateType<T extends ProductRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateProductRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductRequest[P]>
      : GetScalarType<T[P], AggregateProductRequest[P]>
  }




  export type productRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productRequestWhereInput
    orderBy?: productRequestOrderByWithAggregationInput | productRequestOrderByWithAggregationInput[]
    by: ProductRequestScalarFieldEnum[] | ProductRequestScalarFieldEnum
    having?: productRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductRequestCountAggregateInputType | true
    _avg?: ProductRequestAvgAggregateInputType
    _sum?: ProductRequestSumAggregateInputType
    _min?: ProductRequestMinAggregateInputType
    _max?: ProductRequestMaxAggregateInputType
  }

  export type ProductRequestGroupByOutputType = {
    id: number
    name: string
    categoryId: number
    expectedPrice: number | null
    expectedDailyOrders: string | null
    url: string | null
    image: string | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: ProductRequestCountAggregateOutputType | null
    _avg: ProductRequestAvgAggregateOutputType | null
    _sum: ProductRequestSumAggregateOutputType | null
    _min: ProductRequestMinAggregateOutputType | null
    _max: ProductRequestMaxAggregateOutputType | null
  }

  type GetProductRequestGroupByPayload<T extends productRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ProductRequestGroupByOutputType[P]>
        }
      >
    >


  export type productRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    categoryId?: boolean
    expectedPrice?: boolean
    expectedDailyOrders?: boolean
    url?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    category?: boolean | categoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productRequest"]>



  export type productRequestSelectScalar = {
    id?: boolean
    name?: boolean
    categoryId?: boolean
    expectedPrice?: boolean
    expectedDailyOrders?: boolean
    url?: boolean
    image?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type productRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "categoryId" | "expectedPrice" | "expectedDailyOrders" | "url" | "image" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["productRequest"]>
  export type productRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | categoryDefaultArgs<ExtArgs>
  }

  export type $productRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productRequest"
    objects: {
      category: Prisma.$categoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      categoryId: number
      expectedPrice: number | null
      expectedDailyOrders: string | null
      url: string | null
      image: string | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["productRequest"]>
    composites: {}
  }

  type productRequestGetPayload<S extends boolean | null | undefined | productRequestDefaultArgs> = $Result.GetResult<Prisma.$productRequestPayload, S>

  type productRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductRequestCountAggregateInputType | true
    }

  export interface productRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productRequest'], meta: { name: 'productRequest' } }
    /**
     * Find zero or one ProductRequest that matches the filter.
     * @param {productRequestFindUniqueArgs} args - Arguments to find a ProductRequest
     * @example
     * // Get one ProductRequest
     * const productRequest = await prisma.productRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productRequestFindUniqueArgs>(args: SelectSubset<T, productRequestFindUniqueArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productRequestFindUniqueOrThrowArgs} args - Arguments to find a ProductRequest
     * @example
     * // Get one ProductRequest
     * const productRequest = await prisma.productRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, productRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestFindFirstArgs} args - Arguments to find a ProductRequest
     * @example
     * // Get one ProductRequest
     * const productRequest = await prisma.productRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productRequestFindFirstArgs>(args?: SelectSubset<T, productRequestFindFirstArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestFindFirstOrThrowArgs} args - Arguments to find a ProductRequest
     * @example
     * // Get one ProductRequest
     * const productRequest = await prisma.productRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, productRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductRequests
     * const productRequests = await prisma.productRequest.findMany()
     * 
     * // Get first 10 ProductRequests
     * const productRequests = await prisma.productRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productRequestWithIdOnly = await prisma.productRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productRequestFindManyArgs>(args?: SelectSubset<T, productRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductRequest.
     * @param {productRequestCreateArgs} args - Arguments to create a ProductRequest.
     * @example
     * // Create one ProductRequest
     * const ProductRequest = await prisma.productRequest.create({
     *   data: {
     *     // ... data to create a ProductRequest
     *   }
     * })
     * 
     */
    create<T extends productRequestCreateArgs>(args: SelectSubset<T, productRequestCreateArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductRequests.
     * @param {productRequestCreateManyArgs} args - Arguments to create many ProductRequests.
     * @example
     * // Create many ProductRequests
     * const productRequest = await prisma.productRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productRequestCreateManyArgs>(args?: SelectSubset<T, productRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductRequest.
     * @param {productRequestDeleteArgs} args - Arguments to delete one ProductRequest.
     * @example
     * // Delete one ProductRequest
     * const ProductRequest = await prisma.productRequest.delete({
     *   where: {
     *     // ... filter to delete one ProductRequest
     *   }
     * })
     * 
     */
    delete<T extends productRequestDeleteArgs>(args: SelectSubset<T, productRequestDeleteArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductRequest.
     * @param {productRequestUpdateArgs} args - Arguments to update one ProductRequest.
     * @example
     * // Update one ProductRequest
     * const productRequest = await prisma.productRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productRequestUpdateArgs>(args: SelectSubset<T, productRequestUpdateArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductRequests.
     * @param {productRequestDeleteManyArgs} args - Arguments to filter ProductRequests to delete.
     * @example
     * // Delete a few ProductRequests
     * const { count } = await prisma.productRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productRequestDeleteManyArgs>(args?: SelectSubset<T, productRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductRequests
     * const productRequest = await prisma.productRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productRequestUpdateManyArgs>(args: SelectSubset<T, productRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductRequest.
     * @param {productRequestUpsertArgs} args - Arguments to update or create a ProductRequest.
     * @example
     * // Update or create a ProductRequest
     * const productRequest = await prisma.productRequest.upsert({
     *   create: {
     *     // ... data to create a ProductRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductRequest we want to update
     *   }
     * })
     */
    upsert<T extends productRequestUpsertArgs>(args: SelectSubset<T, productRequestUpsertArgs<ExtArgs>>): Prisma__productRequestClient<$Result.GetResult<Prisma.$productRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestCountArgs} args - Arguments to filter ProductRequests to count.
     * @example
     * // Count the number of ProductRequests
     * const count = await prisma.productRequest.count({
     *   where: {
     *     // ... the filter for the ProductRequests we want to count
     *   }
     * })
    **/
    count<T extends productRequestCountArgs>(
      args?: Subset<T, productRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductRequestAggregateArgs>(args: Subset<T, ProductRequestAggregateArgs>): Prisma.PrismaPromise<GetProductRequestAggregateType<T>>

    /**
     * Group by ProductRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productRequestGroupByArgs['orderBy'] }
        : { orderBy?: productRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productRequest model
   */
  readonly fields: productRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, categoryDefaultArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productRequest model
   */
  interface productRequestFieldRefs {
    readonly id: FieldRef<"productRequest", 'Int'>
    readonly name: FieldRef<"productRequest", 'String'>
    readonly categoryId: FieldRef<"productRequest", 'Int'>
    readonly expectedPrice: FieldRef<"productRequest", 'Int'>
    readonly expectedDailyOrders: FieldRef<"productRequest", 'String'>
    readonly url: FieldRef<"productRequest", 'String'>
    readonly image: FieldRef<"productRequest", 'String'>
    readonly status: FieldRef<"productRequest", 'Boolean'>
    readonly createdAt: FieldRef<"productRequest", 'DateTime'>
    readonly createdBy: FieldRef<"productRequest", 'Int'>
    readonly createdByRole: FieldRef<"productRequest", 'String'>
    readonly updatedAt: FieldRef<"productRequest", 'DateTime'>
    readonly updatedBy: FieldRef<"productRequest", 'Int'>
    readonly updatedByRole: FieldRef<"productRequest", 'String'>
    readonly deletedAt: FieldRef<"productRequest", 'DateTime'>
    readonly deletedBy: FieldRef<"productRequest", 'Int'>
    readonly deletedByRole: FieldRef<"productRequest", 'String'>
  }
    

  // Custom InputTypes
  /**
   * productRequest findUnique
   */
  export type productRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter, which productRequest to fetch.
     */
    where: productRequestWhereUniqueInput
  }

  /**
   * productRequest findUniqueOrThrow
   */
  export type productRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter, which productRequest to fetch.
     */
    where: productRequestWhereUniqueInput
  }

  /**
   * productRequest findFirst
   */
  export type productRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter, which productRequest to fetch.
     */
    where?: productRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productRequests to fetch.
     */
    orderBy?: productRequestOrderByWithRelationInput | productRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productRequests.
     */
    cursor?: productRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productRequests.
     */
    distinct?: ProductRequestScalarFieldEnum | ProductRequestScalarFieldEnum[]
  }

  /**
   * productRequest findFirstOrThrow
   */
  export type productRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter, which productRequest to fetch.
     */
    where?: productRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productRequests to fetch.
     */
    orderBy?: productRequestOrderByWithRelationInput | productRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productRequests.
     */
    cursor?: productRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productRequests.
     */
    distinct?: ProductRequestScalarFieldEnum | ProductRequestScalarFieldEnum[]
  }

  /**
   * productRequest findMany
   */
  export type productRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter, which productRequests to fetch.
     */
    where?: productRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productRequests to fetch.
     */
    orderBy?: productRequestOrderByWithRelationInput | productRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productRequests.
     */
    cursor?: productRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productRequests.
     */
    skip?: number
    distinct?: ProductRequestScalarFieldEnum | ProductRequestScalarFieldEnum[]
  }

  /**
   * productRequest create
   */
  export type productRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a productRequest.
     */
    data: XOR<productRequestCreateInput, productRequestUncheckedCreateInput>
  }

  /**
   * productRequest createMany
   */
  export type productRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productRequests.
     */
    data: productRequestCreateManyInput | productRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productRequest update
   */
  export type productRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a productRequest.
     */
    data: XOR<productRequestUpdateInput, productRequestUncheckedUpdateInput>
    /**
     * Choose, which productRequest to update.
     */
    where: productRequestWhereUniqueInput
  }

  /**
   * productRequest updateMany
   */
  export type productRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productRequests.
     */
    data: XOR<productRequestUpdateManyMutationInput, productRequestUncheckedUpdateManyInput>
    /**
     * Filter which productRequests to update
     */
    where?: productRequestWhereInput
    /**
     * Limit how many productRequests to update.
     */
    limit?: number
  }

  /**
   * productRequest upsert
   */
  export type productRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the productRequest to update in case it exists.
     */
    where: productRequestWhereUniqueInput
    /**
     * In case the productRequest found by the `where` argument doesn't exist, create a new productRequest with this data.
     */
    create: XOR<productRequestCreateInput, productRequestUncheckedCreateInput>
    /**
     * In case the productRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productRequestUpdateInput, productRequestUncheckedUpdateInput>
  }

  /**
   * productRequest delete
   */
  export type productRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
    /**
     * Filter which productRequest to delete.
     */
    where: productRequestWhereUniqueInput
  }

  /**
   * productRequest deleteMany
   */
  export type productRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productRequests to delete
     */
    where?: productRequestWhereInput
    /**
     * Limit how many productRequests to delete.
     */
    limit?: number
  }

  /**
   * productRequest without action
   */
  export type productRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productRequest
     */
    select?: productRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productRequest
     */
    omit?: productRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productRequestInclude<ExtArgs> | null
  }


  /**
   * Model product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
    brandId: number | null
    originCountryId: number | null
    taxRate: number | null
    shippingCountryId: number | null
    weight: number | null
    package_length: number | null
    package_width: number | null
    package_height: number | null
    chargeable_weight: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
    brandId: number | null
    originCountryId: bigint | null
    taxRate: number | null
    shippingCountryId: bigint | null
    weight: number | null
    package_length: number | null
    package_width: number | null
    package_height: number | null
    chargeable_weight: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: number | null
    categoryId: number | null
    name: string | null
    slug: string | null
    main_sku: string | null
    description: string | null
    brandId: number | null
    originCountryId: bigint | null
    ean: string | null
    hsnCode: string | null
    taxRate: number | null
    upc: string | null
    rtoAddress: string | null
    pickupAddress: string | null
    shippingCountryId: bigint | null
    video_url: string | null
    list_as: string | null
    shipping_time: string | null
    weight: number | null
    package_length: number | null
    package_width: number | null
    package_height: number | null
    chargeable_weight: number | null
    package_weight_image: string | null
    package_length_image: string | null
    package_width_image: string | null
    package_height_image: string | null
    product_detail_video: string | null
    training_guidance_video: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: number | null
    categoryId: number | null
    name: string | null
    slug: string | null
    main_sku: string | null
    description: string | null
    brandId: number | null
    originCountryId: bigint | null
    ean: string | null
    hsnCode: string | null
    taxRate: number | null
    upc: string | null
    rtoAddress: string | null
    pickupAddress: string | null
    shippingCountryId: bigint | null
    video_url: string | null
    list_as: string | null
    shipping_time: string | null
    weight: number | null
    package_length: number | null
    package_width: number | null
    package_height: number | null
    chargeable_weight: number | null
    package_weight_image: string | null
    package_length_image: string | null
    package_width_image: string | null
    package_height_image: string | null
    product_detail_video: string | null
    training_guidance_video: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    categoryId: number
    name: number
    slug: number
    main_sku: number
    description: number
    tags: number
    brandId: number
    originCountryId: number
    ean: number
    hsnCode: number
    taxRate: number
    upc: number
    rtoAddress: number
    pickupAddress: number
    shippingCountryId: number
    video_url: number
    list_as: number
    shipping_time: number
    weight: number
    package_length: number
    package_width: number
    package_height: number
    chargeable_weight: number
    package_weight_image: number
    package_length_image: number
    package_width_image: number
    package_height_image: number
    product_detail_video: number
    training_guidance_video: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    id?: true
    categoryId?: true
    brandId?: true
    originCountryId?: true
    taxRate?: true
    shippingCountryId?: true
    weight?: true
    package_length?: true
    package_width?: true
    package_height?: true
    chargeable_weight?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductSumAggregateInputType = {
    id?: true
    categoryId?: true
    brandId?: true
    originCountryId?: true
    taxRate?: true
    shippingCountryId?: true
    weight?: true
    package_length?: true
    package_width?: true
    package_height?: true
    chargeable_weight?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    slug?: true
    main_sku?: true
    description?: true
    brandId?: true
    originCountryId?: true
    ean?: true
    hsnCode?: true
    taxRate?: true
    upc?: true
    rtoAddress?: true
    pickupAddress?: true
    shippingCountryId?: true
    video_url?: true
    list_as?: true
    shipping_time?: true
    weight?: true
    package_length?: true
    package_width?: true
    package_height?: true
    chargeable_weight?: true
    package_weight_image?: true
    package_length_image?: true
    package_width_image?: true
    package_height_image?: true
    product_detail_video?: true
    training_guidance_video?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    slug?: true
    main_sku?: true
    description?: true
    brandId?: true
    originCountryId?: true
    ean?: true
    hsnCode?: true
    taxRate?: true
    upc?: true
    rtoAddress?: true
    pickupAddress?: true
    shippingCountryId?: true
    video_url?: true
    list_as?: true
    shipping_time?: true
    weight?: true
    package_length?: true
    package_width?: true
    package_height?: true
    chargeable_weight?: true
    package_weight_image?: true
    package_length_image?: true
    package_width_image?: true
    package_height_image?: true
    product_detail_video?: true
    training_guidance_video?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    slug?: true
    main_sku?: true
    description?: true
    tags?: true
    brandId?: true
    originCountryId?: true
    ean?: true
    hsnCode?: true
    taxRate?: true
    upc?: true
    rtoAddress?: true
    pickupAddress?: true
    shippingCountryId?: true
    video_url?: true
    list_as?: true
    shipping_time?: true
    weight?: true
    package_length?: true
    package_width?: true
    package_height?: true
    chargeable_weight?: true
    package_weight_image?: true
    package_length_image?: true
    package_width_image?: true
    package_height_image?: true
    product_detail_video?: true
    training_guidance_video?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product to aggregate.
     */
    where?: productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type productGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productWhereInput
    orderBy?: productOrderByWithAggregationInput | productOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: productScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description: string | null
    tags: JsonValue | null
    brandId: number
    originCountryId: bigint
    ean: string | null
    hsnCode: string | null
    taxRate: number | null
    upc: string | null
    rtoAddress: string | null
    pickupAddress: string | null
    shippingCountryId: bigint
    video_url: string | null
    list_as: string | null
    shipping_time: string | null
    weight: number | null
    package_length: number | null
    package_width: number | null
    package_height: number | null
    chargeable_weight: number | null
    package_weight_image: string | null
    package_length_image: string | null
    package_width_image: string | null
    package_height_image: string | null
    product_detail_video: string | null
    training_guidance_video: string | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends productGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type productSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    slug?: boolean
    main_sku?: boolean
    description?: boolean
    tags?: boolean
    brandId?: boolean
    originCountryId?: boolean
    ean?: boolean
    hsnCode?: boolean
    taxRate?: boolean
    upc?: boolean
    rtoAddress?: boolean
    pickupAddress?: boolean
    shippingCountryId?: boolean
    video_url?: boolean
    list_as?: boolean
    shipping_time?: boolean
    weight?: boolean
    package_length?: boolean
    package_width?: boolean
    package_height?: boolean
    chargeable_weight?: boolean
    package_weight_image?: boolean
    package_length_image?: boolean
    package_width_image?: boolean
    package_height_image?: boolean
    product_detail_video?: boolean
    training_guidance_video?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    category?: boolean | categoryDefaultArgs<ExtArgs>
    brand?: boolean | brandDefaultArgs<ExtArgs>
    originCountry?: boolean | countryDefaultArgs<ExtArgs>
    shippingCountry?: boolean | countryDefaultArgs<ExtArgs>
    variants?: boolean | product$variantsArgs<ExtArgs>
    orderItems?: boolean | product$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>



  export type productSelectScalar = {
    id?: boolean
    categoryId?: boolean
    name?: boolean
    slug?: boolean
    main_sku?: boolean
    description?: boolean
    tags?: boolean
    brandId?: boolean
    originCountryId?: boolean
    ean?: boolean
    hsnCode?: boolean
    taxRate?: boolean
    upc?: boolean
    rtoAddress?: boolean
    pickupAddress?: boolean
    shippingCountryId?: boolean
    video_url?: boolean
    list_as?: boolean
    shipping_time?: boolean
    weight?: boolean
    package_length?: boolean
    package_width?: boolean
    package_height?: boolean
    chargeable_weight?: boolean
    package_weight_image?: boolean
    package_length_image?: boolean
    package_width_image?: boolean
    package_height_image?: boolean
    product_detail_video?: boolean
    training_guidance_video?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type productOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoryId" | "name" | "slug" | "main_sku" | "description" | "tags" | "brandId" | "originCountryId" | "ean" | "hsnCode" | "taxRate" | "upc" | "rtoAddress" | "pickupAddress" | "shippingCountryId" | "video_url" | "list_as" | "shipping_time" | "weight" | "package_length" | "package_width" | "package_height" | "chargeable_weight" | "package_weight_image" | "package_length_image" | "package_width_image" | "package_height_image" | "product_detail_video" | "training_guidance_video" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["product"]>
  export type productInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | categoryDefaultArgs<ExtArgs>
    brand?: boolean | brandDefaultArgs<ExtArgs>
    originCountry?: boolean | countryDefaultArgs<ExtArgs>
    shippingCountry?: boolean | countryDefaultArgs<ExtArgs>
    variants?: boolean | product$variantsArgs<ExtArgs>
    orderItems?: boolean | product$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $productPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product"
    objects: {
      category: Prisma.$categoryPayload<ExtArgs>
      brand: Prisma.$brandPayload<ExtArgs>
      originCountry: Prisma.$countryPayload<ExtArgs>
      shippingCountry: Prisma.$countryPayload<ExtArgs>
      variants: Prisma.$productVariantPayload<ExtArgs>[]
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      categoryId: number
      name: string
      slug: string
      main_sku: string
      description: string | null
      tags: Prisma.JsonValue | null
      brandId: number
      originCountryId: bigint
      ean: string | null
      hsnCode: string | null
      taxRate: number | null
      upc: string | null
      rtoAddress: string | null
      pickupAddress: string | null
      shippingCountryId: bigint
      video_url: string | null
      list_as: string | null
      shipping_time: string | null
      weight: number | null
      package_length: number | null
      package_width: number | null
      package_height: number | null
      chargeable_weight: number | null
      package_weight_image: string | null
      package_length_image: string | null
      package_width_image: string | null
      package_height_image: string | null
      product_detail_video: string | null
      training_guidance_video: string | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type productGetPayload<S extends boolean | null | undefined | productDefaultArgs> = $Result.GetResult<Prisma.$productPayload, S>

  type productCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface productDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product'], meta: { name: 'product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {productFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productFindUniqueArgs>(args: SelectSubset<T, productFindUniqueArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productFindUniqueOrThrowArgs>(args: SelectSubset<T, productFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productFindFirstArgs>(args?: SelectSubset<T, productFindFirstArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productFindFirstOrThrowArgs>(args?: SelectSubset<T, productFindFirstOrThrowArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productFindManyArgs>(args?: SelectSubset<T, productFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {productCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends productCreateArgs>(args: SelectSubset<T, productCreateArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productCreateManyArgs>(args?: SelectSubset<T, productCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product.
     * @param {productDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends productDeleteArgs>(args: SelectSubset<T, productDeleteArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {productUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productUpdateArgs>(args: SelectSubset<T, productUpdateArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productDeleteManyArgs>(args?: SelectSubset<T, productDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productUpdateManyArgs>(args: SelectSubset<T, productUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {productUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends productUpsertArgs>(args: SelectSubset<T, productUpsertArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productCountArgs>(
      args?: Subset<T, productCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productGroupByArgs['orderBy'] }
        : { orderBy?: productGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product model
   */
  readonly fields: productFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends categoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, categoryDefaultArgs<ExtArgs>>): Prisma__categoryClient<$Result.GetResult<Prisma.$categoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    brand<T extends brandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, brandDefaultArgs<ExtArgs>>): Prisma__brandClient<$Result.GetResult<Prisma.$brandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    originCountry<T extends countryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, countryDefaultArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    shippingCountry<T extends countryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, countryDefaultArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variants<T extends product$variantsArgs<ExtArgs> = {}>(args?: Subset<T, product$variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderItems<T extends product$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, product$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product model
   */
  interface productFieldRefs {
    readonly id: FieldRef<"product", 'Int'>
    readonly categoryId: FieldRef<"product", 'Int'>
    readonly name: FieldRef<"product", 'String'>
    readonly slug: FieldRef<"product", 'String'>
    readonly main_sku: FieldRef<"product", 'String'>
    readonly description: FieldRef<"product", 'String'>
    readonly tags: FieldRef<"product", 'Json'>
    readonly brandId: FieldRef<"product", 'Int'>
    readonly originCountryId: FieldRef<"product", 'BigInt'>
    readonly ean: FieldRef<"product", 'String'>
    readonly hsnCode: FieldRef<"product", 'String'>
    readonly taxRate: FieldRef<"product", 'Float'>
    readonly upc: FieldRef<"product", 'String'>
    readonly rtoAddress: FieldRef<"product", 'String'>
    readonly pickupAddress: FieldRef<"product", 'String'>
    readonly shippingCountryId: FieldRef<"product", 'BigInt'>
    readonly video_url: FieldRef<"product", 'String'>
    readonly list_as: FieldRef<"product", 'String'>
    readonly shipping_time: FieldRef<"product", 'String'>
    readonly weight: FieldRef<"product", 'Float'>
    readonly package_length: FieldRef<"product", 'Float'>
    readonly package_width: FieldRef<"product", 'Float'>
    readonly package_height: FieldRef<"product", 'Float'>
    readonly chargeable_weight: FieldRef<"product", 'Float'>
    readonly package_weight_image: FieldRef<"product", 'String'>
    readonly package_length_image: FieldRef<"product", 'String'>
    readonly package_width_image: FieldRef<"product", 'String'>
    readonly package_height_image: FieldRef<"product", 'String'>
    readonly product_detail_video: FieldRef<"product", 'String'>
    readonly training_guidance_video: FieldRef<"product", 'String'>
    readonly status: FieldRef<"product", 'Boolean'>
    readonly createdAt: FieldRef<"product", 'DateTime'>
    readonly createdBy: FieldRef<"product", 'Int'>
    readonly createdByRole: FieldRef<"product", 'String'>
    readonly updatedAt: FieldRef<"product", 'DateTime'>
    readonly updatedBy: FieldRef<"product", 'Int'>
    readonly updatedByRole: FieldRef<"product", 'String'>
    readonly deletedAt: FieldRef<"product", 'DateTime'>
    readonly deletedBy: FieldRef<"product", 'Int'>
    readonly deletedByRole: FieldRef<"product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * product findUnique
   */
  export type productFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter, which product to fetch.
     */
    where: productWhereUniqueInput
  }

  /**
   * product findUniqueOrThrow
   */
  export type productFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter, which product to fetch.
     */
    where: productWhereUniqueInput
  }

  /**
   * product findFirst
   */
  export type productFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter, which product to fetch.
     */
    where?: productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * product findFirstOrThrow
   */
  export type productFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter, which product to fetch.
     */
    where?: productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * product findMany
   */
  export type productFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productOrderByWithRelationInput | productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * product create
   */
  export type productCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * The data needed to create a product.
     */
    data: XOR<productCreateInput, productUncheckedCreateInput>
  }

  /**
   * product createMany
   */
  export type productCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productCreateManyInput | productCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product update
   */
  export type productUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * The data needed to update a product.
     */
    data: XOR<productUpdateInput, productUncheckedUpdateInput>
    /**
     * Choose, which product to update.
     */
    where: productWhereUniqueInput
  }

  /**
   * product updateMany
   */
  export type productUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productUpdateManyMutationInput, productUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * product upsert
   */
  export type productUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * The filter to search for the product to update in case it exists.
     */
    where: productWhereUniqueInput
    /**
     * In case the product found by the `where` argument doesn't exist, create a new product with this data.
     */
    create: XOR<productCreateInput, productUncheckedCreateInput>
    /**
     * In case the product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productUpdateInput, productUncheckedUpdateInput>
  }

  /**
   * product delete
   */
  export type productDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    /**
     * Filter which product to delete.
     */
    where: productWhereUniqueInput
  }

  /**
   * product deleteMany
   */
  export type productDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * product.variants
   */
  export type product$variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    where?: productVariantWhereInput
    orderBy?: productVariantOrderByWithRelationInput | productVariantOrderByWithRelationInput[]
    cursor?: productVariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * product.orderItems
   */
  export type product$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * product without action
   */
  export type productDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
  }


  /**
   * Model productVariant
   */

  export type AggregateProductVariant = {
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  export type ProductVariantAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    qty: number | null
    suggested_price: number | null
    shipowl_price: number | null
    rto_suggested_price: number | null
    rto_price: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductVariantSumAggregateOutputType = {
    id: number | null
    productId: number | null
    qty: number | null
    suggested_price: number | null
    shipowl_price: number | null
    rto_suggested_price: number | null
    rto_price: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProductVariantMinAggregateOutputType = {
    id: number | null
    productId: number | null
    image: string | null
    color: string | null
    sku: string | null
    qty: number | null
    currency: string | null
    article_id: string | null
    product_link: string | null
    suggested_price: number | null
    shipowl_price: number | null
    rto_suggested_price: number | null
    rto_price: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductVariantMaxAggregateOutputType = {
    id: number | null
    productId: number | null
    image: string | null
    color: string | null
    sku: string | null
    qty: number | null
    currency: string | null
    article_id: string | null
    product_link: string | null
    suggested_price: number | null
    shipowl_price: number | null
    rto_suggested_price: number | null
    rto_price: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type ProductVariantCountAggregateOutputType = {
    id: number
    productId: number
    image: number
    color: number
    sku: number
    qty: number
    currency: number
    article_id: number
    product_link: number
    suggested_price: number
    shipowl_price: number
    rto_suggested_price: number
    rto_price: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type ProductVariantAvgAggregateInputType = {
    id?: true
    productId?: true
    qty?: true
    suggested_price?: true
    shipowl_price?: true
    rto_suggested_price?: true
    rto_price?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductVariantSumAggregateInputType = {
    id?: true
    productId?: true
    qty?: true
    suggested_price?: true
    shipowl_price?: true
    rto_suggested_price?: true
    rto_price?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProductVariantMinAggregateInputType = {
    id?: true
    productId?: true
    image?: true
    color?: true
    sku?: true
    qty?: true
    currency?: true
    article_id?: true
    product_link?: true
    suggested_price?: true
    shipowl_price?: true
    rto_suggested_price?: true
    rto_price?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductVariantMaxAggregateInputType = {
    id?: true
    productId?: true
    image?: true
    color?: true
    sku?: true
    qty?: true
    currency?: true
    article_id?: true
    product_link?: true
    suggested_price?: true
    shipowl_price?: true
    rto_suggested_price?: true
    rto_price?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type ProductVariantCountAggregateInputType = {
    id?: true
    productId?: true
    image?: true
    color?: true
    sku?: true
    qty?: true
    currency?: true
    article_id?: true
    product_link?: true
    suggested_price?: true
    shipowl_price?: true
    rto_suggested_price?: true
    rto_price?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type ProductVariantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productVariant to aggregate.
     */
    where?: productVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productVariants to fetch.
     */
    orderBy?: productVariantOrderByWithRelationInput | productVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productVariants
    **/
    _count?: true | ProductVariantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductVariantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductVariantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductVariantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductVariantMaxAggregateInputType
  }

  export type GetProductVariantAggregateType<T extends ProductVariantAggregateArgs> = {
        [P in keyof T & keyof AggregateProductVariant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductVariant[P]>
      : GetScalarType<T[P], AggregateProductVariant[P]>
  }




  export type productVariantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productVariantWhereInput
    orderBy?: productVariantOrderByWithAggregationInput | productVariantOrderByWithAggregationInput[]
    by: ProductVariantScalarFieldEnum[] | ProductVariantScalarFieldEnum
    having?: productVariantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductVariantCountAggregateInputType | true
    _avg?: ProductVariantAvgAggregateInputType
    _sum?: ProductVariantSumAggregateInputType
    _min?: ProductVariantMinAggregateInputType
    _max?: ProductVariantMaxAggregateInputType
  }

  export type ProductVariantGroupByOutputType = {
    id: number
    productId: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id: string | null
    product_link: string | null
    suggested_price: number | null
    shipowl_price: number | null
    rto_suggested_price: number | null
    rto_price: number | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  type GetProductVariantGroupByPayload<T extends productVariantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductVariantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductVariantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
            : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
        }
      >
    >


  export type productVariantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    image?: boolean
    color?: boolean
    sku?: boolean
    qty?: boolean
    currency?: boolean
    article_id?: boolean
    product_link?: boolean
    suggested_price?: boolean
    shipowl_price?: boolean
    rto_suggested_price?: boolean
    rto_price?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    product?: boolean | productDefaultArgs<ExtArgs>
    orderItems?: boolean | productVariant$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductVariantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>



  export type productVariantSelectScalar = {
    id?: boolean
    productId?: boolean
    image?: boolean
    color?: boolean
    sku?: boolean
    qty?: boolean
    currency?: boolean
    article_id?: boolean
    product_link?: boolean
    suggested_price?: boolean
    shipowl_price?: boolean
    rto_suggested_price?: boolean
    rto_price?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type productVariantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "image" | "color" | "sku" | "qty" | "currency" | "article_id" | "product_link" | "suggested_price" | "shipowl_price" | "rto_suggested_price" | "rto_price" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["productVariant"]>
  export type productVariantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | productDefaultArgs<ExtArgs>
    orderItems?: boolean | productVariant$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductVariantCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $productVariantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productVariant"
    objects: {
      product: Prisma.$productPayload<ExtArgs>
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: number
      image: string
      color: string
      sku: string
      qty: number
      currency: string
      article_id: string | null
      product_link: string | null
      suggested_price: number | null
      shipowl_price: number | null
      rto_suggested_price: number | null
      rto_price: number | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["productVariant"]>
    composites: {}
  }

  type productVariantGetPayload<S extends boolean | null | undefined | productVariantDefaultArgs> = $Result.GetResult<Prisma.$productVariantPayload, S>

  type productVariantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productVariantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductVariantCountAggregateInputType | true
    }

  export interface productVariantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productVariant'], meta: { name: 'productVariant' } }
    /**
     * Find zero or one ProductVariant that matches the filter.
     * @param {productVariantFindUniqueArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productVariantFindUniqueArgs>(args: SelectSubset<T, productVariantFindUniqueArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductVariant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productVariantFindUniqueOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productVariantFindUniqueOrThrowArgs>(args: SelectSubset<T, productVariantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantFindFirstArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productVariantFindFirstArgs>(args?: SelectSubset<T, productVariantFindFirstArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantFindFirstOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productVariantFindFirstOrThrowArgs>(args?: SelectSubset<T, productVariantFindFirstOrThrowArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductVariants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductVariants
     * const productVariants = await prisma.productVariant.findMany()
     * 
     * // Get first 10 ProductVariants
     * const productVariants = await prisma.productVariant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productVariantFindManyArgs>(args?: SelectSubset<T, productVariantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductVariant.
     * @param {productVariantCreateArgs} args - Arguments to create a ProductVariant.
     * @example
     * // Create one ProductVariant
     * const ProductVariant = await prisma.productVariant.create({
     *   data: {
     *     // ... data to create a ProductVariant
     *   }
     * })
     * 
     */
    create<T extends productVariantCreateArgs>(args: SelectSubset<T, productVariantCreateArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductVariants.
     * @param {productVariantCreateManyArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productVariantCreateManyArgs>(args?: SelectSubset<T, productVariantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductVariant.
     * @param {productVariantDeleteArgs} args - Arguments to delete one ProductVariant.
     * @example
     * // Delete one ProductVariant
     * const ProductVariant = await prisma.productVariant.delete({
     *   where: {
     *     // ... filter to delete one ProductVariant
     *   }
     * })
     * 
     */
    delete<T extends productVariantDeleteArgs>(args: SelectSubset<T, productVariantDeleteArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductVariant.
     * @param {productVariantUpdateArgs} args - Arguments to update one ProductVariant.
     * @example
     * // Update one ProductVariant
     * const productVariant = await prisma.productVariant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productVariantUpdateArgs>(args: SelectSubset<T, productVariantUpdateArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductVariants.
     * @param {productVariantDeleteManyArgs} args - Arguments to filter ProductVariants to delete.
     * @example
     * // Delete a few ProductVariants
     * const { count } = await prisma.productVariant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productVariantDeleteManyArgs>(args?: SelectSubset<T, productVariantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productVariantUpdateManyArgs>(args: SelectSubset<T, productVariantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductVariant.
     * @param {productVariantUpsertArgs} args - Arguments to update or create a ProductVariant.
     * @example
     * // Update or create a ProductVariant
     * const productVariant = await prisma.productVariant.upsert({
     *   create: {
     *     // ... data to create a ProductVariant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductVariant we want to update
     *   }
     * })
     */
    upsert<T extends productVariantUpsertArgs>(args: SelectSubset<T, productVariantUpsertArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantCountArgs} args - Arguments to filter ProductVariants to count.
     * @example
     * // Count the number of ProductVariants
     * const count = await prisma.productVariant.count({
     *   where: {
     *     // ... the filter for the ProductVariants we want to count
     *   }
     * })
    **/
    count<T extends productVariantCountArgs>(
      args?: Subset<T, productVariantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductVariantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductVariantAggregateArgs>(args: Subset<T, ProductVariantAggregateArgs>): Prisma.PrismaPromise<GetProductVariantAggregateType<T>>

    /**
     * Group by ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productVariantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productVariantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productVariantGroupByArgs['orderBy'] }
        : { orderBy?: productVariantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productVariantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductVariantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productVariant model
   */
  readonly fields: productVariantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productVariant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productVariantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends productDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productDefaultArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    orderItems<T extends productVariant$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, productVariant$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productVariant model
   */
  interface productVariantFieldRefs {
    readonly id: FieldRef<"productVariant", 'Int'>
    readonly productId: FieldRef<"productVariant", 'Int'>
    readonly image: FieldRef<"productVariant", 'String'>
    readonly color: FieldRef<"productVariant", 'String'>
    readonly sku: FieldRef<"productVariant", 'String'>
    readonly qty: FieldRef<"productVariant", 'Int'>
    readonly currency: FieldRef<"productVariant", 'String'>
    readonly article_id: FieldRef<"productVariant", 'String'>
    readonly product_link: FieldRef<"productVariant", 'String'>
    readonly suggested_price: FieldRef<"productVariant", 'Float'>
    readonly shipowl_price: FieldRef<"productVariant", 'Float'>
    readonly rto_suggested_price: FieldRef<"productVariant", 'Float'>
    readonly rto_price: FieldRef<"productVariant", 'Float'>
    readonly createdAt: FieldRef<"productVariant", 'DateTime'>
    readonly createdBy: FieldRef<"productVariant", 'Int'>
    readonly createdByRole: FieldRef<"productVariant", 'String'>
    readonly updatedAt: FieldRef<"productVariant", 'DateTime'>
    readonly updatedBy: FieldRef<"productVariant", 'Int'>
    readonly updatedByRole: FieldRef<"productVariant", 'String'>
    readonly deletedAt: FieldRef<"productVariant", 'DateTime'>
    readonly deletedBy: FieldRef<"productVariant", 'Int'>
    readonly deletedByRole: FieldRef<"productVariant", 'String'>
  }
    

  // Custom InputTypes
  /**
   * productVariant findUnique
   */
  export type productVariantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter, which productVariant to fetch.
     */
    where: productVariantWhereUniqueInput
  }

  /**
   * productVariant findUniqueOrThrow
   */
  export type productVariantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter, which productVariant to fetch.
     */
    where: productVariantWhereUniqueInput
  }

  /**
   * productVariant findFirst
   */
  export type productVariantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter, which productVariant to fetch.
     */
    where?: productVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productVariants to fetch.
     */
    orderBy?: productVariantOrderByWithRelationInput | productVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productVariants.
     */
    cursor?: productVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * productVariant findFirstOrThrow
   */
  export type productVariantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter, which productVariant to fetch.
     */
    where?: productVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productVariants to fetch.
     */
    orderBy?: productVariantOrderByWithRelationInput | productVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productVariants.
     */
    cursor?: productVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * productVariant findMany
   */
  export type productVariantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter, which productVariants to fetch.
     */
    where?: productVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productVariants to fetch.
     */
    orderBy?: productVariantOrderByWithRelationInput | productVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productVariants.
     */
    cursor?: productVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productVariants.
     */
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * productVariant create
   */
  export type productVariantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * The data needed to create a productVariant.
     */
    data: XOR<productVariantCreateInput, productVariantUncheckedCreateInput>
  }

  /**
   * productVariant createMany
   */
  export type productVariantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productVariants.
     */
    data: productVariantCreateManyInput | productVariantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productVariant update
   */
  export type productVariantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * The data needed to update a productVariant.
     */
    data: XOR<productVariantUpdateInput, productVariantUncheckedUpdateInput>
    /**
     * Choose, which productVariant to update.
     */
    where: productVariantWhereUniqueInput
  }

  /**
   * productVariant updateMany
   */
  export type productVariantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productVariants.
     */
    data: XOR<productVariantUpdateManyMutationInput, productVariantUncheckedUpdateManyInput>
    /**
     * Filter which productVariants to update
     */
    where?: productVariantWhereInput
    /**
     * Limit how many productVariants to update.
     */
    limit?: number
  }

  /**
   * productVariant upsert
   */
  export type productVariantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * The filter to search for the productVariant to update in case it exists.
     */
    where: productVariantWhereUniqueInput
    /**
     * In case the productVariant found by the `where` argument doesn't exist, create a new productVariant with this data.
     */
    create: XOR<productVariantCreateInput, productVariantUncheckedCreateInput>
    /**
     * In case the productVariant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productVariantUpdateInput, productVariantUncheckedUpdateInput>
  }

  /**
   * productVariant delete
   */
  export type productVariantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    /**
     * Filter which productVariant to delete.
     */
    where: productVariantWhereUniqueInput
  }

  /**
   * productVariant deleteMany
   */
  export type productVariantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productVariants to delete
     */
    where?: productVariantWhereInput
    /**
     * Limit how many productVariants to delete.
     */
    limit?: number
  }

  /**
   * productVariant.orderItems
   */
  export type productVariant$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * productVariant without action
   */
  export type productVariantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
  }


  /**
   * Model courierCompany
   */

  export type AggregateCourierCompany = {
    _count: CourierCompanyCountAggregateOutputType | null
    _avg: CourierCompanyAvgAggregateOutputType | null
    _sum: CourierCompanySumAggregateOutputType | null
    _min: CourierCompanyMinAggregateOutputType | null
    _max: CourierCompanyMaxAggregateOutputType | null
  }

  export type CourierCompanyAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CourierCompanySumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CourierCompanyMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    code: string | null
    website: string | null
    email: string | null
    phoneNumber: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CourierCompanyMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
    code: string | null
    website: string | null
    email: string | null
    phoneNumber: string | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type CourierCompanyCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    code: number
    website: number
    email: number
    phoneNumber: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type CourierCompanyAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CourierCompanySumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CourierCompanyMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    code?: true
    website?: true
    email?: true
    phoneNumber?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CourierCompanyMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    code?: true
    website?: true
    email?: true
    phoneNumber?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type CourierCompanyCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    code?: true
    website?: true
    email?: true
    phoneNumber?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type CourierCompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courierCompany to aggregate.
     */
    where?: courierCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courierCompanies to fetch.
     */
    orderBy?: courierCompanyOrderByWithRelationInput | courierCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: courierCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courierCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courierCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned courierCompanies
    **/
    _count?: true | CourierCompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CourierCompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CourierCompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourierCompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourierCompanyMaxAggregateInputType
  }

  export type GetCourierCompanyAggregateType<T extends CourierCompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCourierCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourierCompany[P]>
      : GetScalarType<T[P], AggregateCourierCompany[P]>
  }




  export type courierCompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: courierCompanyWhereInput
    orderBy?: courierCompanyOrderByWithAggregationInput | courierCompanyOrderByWithAggregationInput[]
    by: CourierCompanyScalarFieldEnum[] | CourierCompanyScalarFieldEnum
    having?: courierCompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourierCompanyCountAggregateInputType | true
    _avg?: CourierCompanyAvgAggregateInputType
    _sum?: CourierCompanySumAggregateInputType
    _min?: CourierCompanyMinAggregateInputType
    _max?: CourierCompanyMaxAggregateInputType
  }

  export type CourierCompanyGroupByOutputType = {
    id: number
    name: string
    slug: string
    code: string | null
    website: string | null
    email: string
    phoneNumber: string | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: CourierCompanyCountAggregateOutputType | null
    _avg: CourierCompanyAvgAggregateOutputType | null
    _sum: CourierCompanySumAggregateOutputType | null
    _min: CourierCompanyMinAggregateOutputType | null
    _max: CourierCompanyMaxAggregateOutputType | null
  }

  type GetCourierCompanyGroupByPayload<T extends courierCompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourierCompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourierCompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourierCompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CourierCompanyGroupByOutputType[P]>
        }
      >
    >


  export type courierCompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    code?: boolean
    website?: boolean
    email?: boolean
    phoneNumber?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }, ExtArgs["result"]["courierCompany"]>



  export type courierCompanySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    code?: boolean
    website?: boolean
    email?: boolean
    phoneNumber?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type courierCompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "code" | "website" | "email" | "phoneNumber" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["courierCompany"]>

  export type $courierCompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "courierCompany"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
      code: string | null
      website: string | null
      email: string
      phoneNumber: string | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["courierCompany"]>
    composites: {}
  }

  type courierCompanyGetPayload<S extends boolean | null | undefined | courierCompanyDefaultArgs> = $Result.GetResult<Prisma.$courierCompanyPayload, S>

  type courierCompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<courierCompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CourierCompanyCountAggregateInputType | true
    }

  export interface courierCompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['courierCompany'], meta: { name: 'courierCompany' } }
    /**
     * Find zero or one CourierCompany that matches the filter.
     * @param {courierCompanyFindUniqueArgs} args - Arguments to find a CourierCompany
     * @example
     * // Get one CourierCompany
     * const courierCompany = await prisma.courierCompany.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends courierCompanyFindUniqueArgs>(args: SelectSubset<T, courierCompanyFindUniqueArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CourierCompany that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {courierCompanyFindUniqueOrThrowArgs} args - Arguments to find a CourierCompany
     * @example
     * // Get one CourierCompany
     * const courierCompany = await prisma.courierCompany.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends courierCompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, courierCompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CourierCompany that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyFindFirstArgs} args - Arguments to find a CourierCompany
     * @example
     * // Get one CourierCompany
     * const courierCompany = await prisma.courierCompany.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends courierCompanyFindFirstArgs>(args?: SelectSubset<T, courierCompanyFindFirstArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CourierCompany that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyFindFirstOrThrowArgs} args - Arguments to find a CourierCompany
     * @example
     * // Get one CourierCompany
     * const courierCompany = await prisma.courierCompany.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends courierCompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, courierCompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CourierCompanies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CourierCompanies
     * const courierCompanies = await prisma.courierCompany.findMany()
     * 
     * // Get first 10 CourierCompanies
     * const courierCompanies = await prisma.courierCompany.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const courierCompanyWithIdOnly = await prisma.courierCompany.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends courierCompanyFindManyArgs>(args?: SelectSubset<T, courierCompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CourierCompany.
     * @param {courierCompanyCreateArgs} args - Arguments to create a CourierCompany.
     * @example
     * // Create one CourierCompany
     * const CourierCompany = await prisma.courierCompany.create({
     *   data: {
     *     // ... data to create a CourierCompany
     *   }
     * })
     * 
     */
    create<T extends courierCompanyCreateArgs>(args: SelectSubset<T, courierCompanyCreateArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CourierCompanies.
     * @param {courierCompanyCreateManyArgs} args - Arguments to create many CourierCompanies.
     * @example
     * // Create many CourierCompanies
     * const courierCompany = await prisma.courierCompany.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends courierCompanyCreateManyArgs>(args?: SelectSubset<T, courierCompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CourierCompany.
     * @param {courierCompanyDeleteArgs} args - Arguments to delete one CourierCompany.
     * @example
     * // Delete one CourierCompany
     * const CourierCompany = await prisma.courierCompany.delete({
     *   where: {
     *     // ... filter to delete one CourierCompany
     *   }
     * })
     * 
     */
    delete<T extends courierCompanyDeleteArgs>(args: SelectSubset<T, courierCompanyDeleteArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CourierCompany.
     * @param {courierCompanyUpdateArgs} args - Arguments to update one CourierCompany.
     * @example
     * // Update one CourierCompany
     * const courierCompany = await prisma.courierCompany.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends courierCompanyUpdateArgs>(args: SelectSubset<T, courierCompanyUpdateArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CourierCompanies.
     * @param {courierCompanyDeleteManyArgs} args - Arguments to filter CourierCompanies to delete.
     * @example
     * // Delete a few CourierCompanies
     * const { count } = await prisma.courierCompany.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends courierCompanyDeleteManyArgs>(args?: SelectSubset<T, courierCompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CourierCompanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CourierCompanies
     * const courierCompany = await prisma.courierCompany.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends courierCompanyUpdateManyArgs>(args: SelectSubset<T, courierCompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CourierCompany.
     * @param {courierCompanyUpsertArgs} args - Arguments to update or create a CourierCompany.
     * @example
     * // Update or create a CourierCompany
     * const courierCompany = await prisma.courierCompany.upsert({
     *   create: {
     *     // ... data to create a CourierCompany
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CourierCompany we want to update
     *   }
     * })
     */
    upsert<T extends courierCompanyUpsertArgs>(args: SelectSubset<T, courierCompanyUpsertArgs<ExtArgs>>): Prisma__courierCompanyClient<$Result.GetResult<Prisma.$courierCompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CourierCompanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyCountArgs} args - Arguments to filter CourierCompanies to count.
     * @example
     * // Count the number of CourierCompanies
     * const count = await prisma.courierCompany.count({
     *   where: {
     *     // ... the filter for the CourierCompanies we want to count
     *   }
     * })
    **/
    count<T extends courierCompanyCountArgs>(
      args?: Subset<T, courierCompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourierCompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CourierCompany.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourierCompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourierCompanyAggregateArgs>(args: Subset<T, CourierCompanyAggregateArgs>): Prisma.PrismaPromise<GetCourierCompanyAggregateType<T>>

    /**
     * Group by CourierCompany.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends courierCompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: courierCompanyGroupByArgs['orderBy'] }
        : { orderBy?: courierCompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, courierCompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourierCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the courierCompany model
   */
  readonly fields: courierCompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for courierCompany.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__courierCompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the courierCompany model
   */
  interface courierCompanyFieldRefs {
    readonly id: FieldRef<"courierCompany", 'Int'>
    readonly name: FieldRef<"courierCompany", 'String'>
    readonly slug: FieldRef<"courierCompany", 'String'>
    readonly code: FieldRef<"courierCompany", 'String'>
    readonly website: FieldRef<"courierCompany", 'String'>
    readonly email: FieldRef<"courierCompany", 'String'>
    readonly phoneNumber: FieldRef<"courierCompany", 'String'>
    readonly status: FieldRef<"courierCompany", 'Boolean'>
    readonly createdAt: FieldRef<"courierCompany", 'DateTime'>
    readonly createdBy: FieldRef<"courierCompany", 'Int'>
    readonly createdByRole: FieldRef<"courierCompany", 'String'>
    readonly updatedAt: FieldRef<"courierCompany", 'DateTime'>
    readonly updatedBy: FieldRef<"courierCompany", 'Int'>
    readonly updatedByRole: FieldRef<"courierCompany", 'String'>
    readonly deletedAt: FieldRef<"courierCompany", 'DateTime'>
    readonly deletedBy: FieldRef<"courierCompany", 'Int'>
    readonly deletedByRole: FieldRef<"courierCompany", 'String'>
  }
    

  // Custom InputTypes
  /**
   * courierCompany findUnique
   */
  export type courierCompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter, which courierCompany to fetch.
     */
    where: courierCompanyWhereUniqueInput
  }

  /**
   * courierCompany findUniqueOrThrow
   */
  export type courierCompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter, which courierCompany to fetch.
     */
    where: courierCompanyWhereUniqueInput
  }

  /**
   * courierCompany findFirst
   */
  export type courierCompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter, which courierCompany to fetch.
     */
    where?: courierCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courierCompanies to fetch.
     */
    orderBy?: courierCompanyOrderByWithRelationInput | courierCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courierCompanies.
     */
    cursor?: courierCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courierCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courierCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courierCompanies.
     */
    distinct?: CourierCompanyScalarFieldEnum | CourierCompanyScalarFieldEnum[]
  }

  /**
   * courierCompany findFirstOrThrow
   */
  export type courierCompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter, which courierCompany to fetch.
     */
    where?: courierCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courierCompanies to fetch.
     */
    orderBy?: courierCompanyOrderByWithRelationInput | courierCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courierCompanies.
     */
    cursor?: courierCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courierCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courierCompanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courierCompanies.
     */
    distinct?: CourierCompanyScalarFieldEnum | CourierCompanyScalarFieldEnum[]
  }

  /**
   * courierCompany findMany
   */
  export type courierCompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter, which courierCompanies to fetch.
     */
    where?: courierCompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courierCompanies to fetch.
     */
    orderBy?: courierCompanyOrderByWithRelationInput | courierCompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing courierCompanies.
     */
    cursor?: courierCompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courierCompanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courierCompanies.
     */
    skip?: number
    distinct?: CourierCompanyScalarFieldEnum | CourierCompanyScalarFieldEnum[]
  }

  /**
   * courierCompany create
   */
  export type courierCompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * The data needed to create a courierCompany.
     */
    data: XOR<courierCompanyCreateInput, courierCompanyUncheckedCreateInput>
  }

  /**
   * courierCompany createMany
   */
  export type courierCompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many courierCompanies.
     */
    data: courierCompanyCreateManyInput | courierCompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * courierCompany update
   */
  export type courierCompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * The data needed to update a courierCompany.
     */
    data: XOR<courierCompanyUpdateInput, courierCompanyUncheckedUpdateInput>
    /**
     * Choose, which courierCompany to update.
     */
    where: courierCompanyWhereUniqueInput
  }

  /**
   * courierCompany updateMany
   */
  export type courierCompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update courierCompanies.
     */
    data: XOR<courierCompanyUpdateManyMutationInput, courierCompanyUncheckedUpdateManyInput>
    /**
     * Filter which courierCompanies to update
     */
    where?: courierCompanyWhereInput
    /**
     * Limit how many courierCompanies to update.
     */
    limit?: number
  }

  /**
   * courierCompany upsert
   */
  export type courierCompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * The filter to search for the courierCompany to update in case it exists.
     */
    where: courierCompanyWhereUniqueInput
    /**
     * In case the courierCompany found by the `where` argument doesn't exist, create a new courierCompany with this data.
     */
    create: XOR<courierCompanyCreateInput, courierCompanyUncheckedCreateInput>
    /**
     * In case the courierCompany was found with the provided `where` argument, update it with this data.
     */
    update: XOR<courierCompanyUpdateInput, courierCompanyUncheckedUpdateInput>
  }

  /**
   * courierCompany delete
   */
  export type courierCompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
    /**
     * Filter which courierCompany to delete.
     */
    where: courierCompanyWhereUniqueInput
  }

  /**
   * courierCompany deleteMany
   */
  export type courierCompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courierCompanies to delete
     */
    where?: courierCompanyWhereInput
    /**
     * Limit how many courierCompanies to delete.
     */
    limit?: number
  }

  /**
   * courierCompany without action
   */
  export type courierCompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courierCompany
     */
    select?: courierCompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the courierCompany
     */
    omit?: courierCompanyOmit<ExtArgs> | null
  }


  /**
   * Model highRto
   */

  export type AggregateHighRto = {
    _count: HighRtoCountAggregateOutputType | null
    _avg: HighRtoAvgAggregateOutputType | null
    _sum: HighRtoSumAggregateOutputType | null
    _min: HighRtoMinAggregateOutputType | null
    _max: HighRtoMaxAggregateOutputType | null
  }

  export type HighRtoAvgAggregateOutputType = {
    id: number | null
    countryId: number | null
    stateId: number | null
    cityId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type HighRtoSumAggregateOutputType = {
    id: number | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type HighRtoMinAggregateOutputType = {
    id: number | null
    pincode: string | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type HighRtoMaxAggregateOutputType = {
    id: number | null
    pincode: string | null
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type HighRtoCountAggregateOutputType = {
    id: number
    pincode: number
    countryId: number
    stateId: number
    cityId: number
    status: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type HighRtoAvgAggregateInputType = {
    id?: true
    countryId?: true
    stateId?: true
    cityId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type HighRtoSumAggregateInputType = {
    id?: true
    countryId?: true
    stateId?: true
    cityId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type HighRtoMinAggregateInputType = {
    id?: true
    pincode?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type HighRtoMaxAggregateInputType = {
    id?: true
    pincode?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type HighRtoCountAggregateInputType = {
    id?: true
    pincode?: true
    countryId?: true
    stateId?: true
    cityId?: true
    status?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type HighRtoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which highRto to aggregate.
     */
    where?: highRtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highRtos to fetch.
     */
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: highRtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highRtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highRtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned highRtos
    **/
    _count?: true | HighRtoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HighRtoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HighRtoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HighRtoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HighRtoMaxAggregateInputType
  }

  export type GetHighRtoAggregateType<T extends HighRtoAggregateArgs> = {
        [P in keyof T & keyof AggregateHighRto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHighRto[P]>
      : GetScalarType<T[P], AggregateHighRto[P]>
  }




  export type highRtoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: highRtoWhereInput
    orderBy?: highRtoOrderByWithAggregationInput | highRtoOrderByWithAggregationInput[]
    by: HighRtoScalarFieldEnum[] | HighRtoScalarFieldEnum
    having?: highRtoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HighRtoCountAggregateInputType | true
    _avg?: HighRtoAvgAggregateInputType
    _sum?: HighRtoSumAggregateInputType
    _min?: HighRtoMinAggregateInputType
    _max?: HighRtoMaxAggregateInputType
  }

  export type HighRtoGroupByOutputType = {
    id: number
    pincode: string
    countryId: bigint | null
    stateId: bigint | null
    cityId: bigint | null
    status: boolean
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: HighRtoCountAggregateOutputType | null
    _avg: HighRtoAvgAggregateOutputType | null
    _sum: HighRtoSumAggregateOutputType | null
    _min: HighRtoMinAggregateOutputType | null
    _max: HighRtoMaxAggregateOutputType | null
  }

  type GetHighRtoGroupByPayload<T extends highRtoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HighRtoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HighRtoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HighRtoGroupByOutputType[P]>
            : GetScalarType<T[P], HighRtoGroupByOutputType[P]>
        }
      >
    >


  export type highRtoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pincode?: boolean
    countryId?: boolean
    stateId?: boolean
    cityId?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    country?: boolean | highRto$countryArgs<ExtArgs>
    state?: boolean | highRto$stateArgs<ExtArgs>
    city?: boolean | highRto$cityArgs<ExtArgs>
  }, ExtArgs["result"]["highRto"]>



  export type highRtoSelectScalar = {
    id?: boolean
    pincode?: boolean
    countryId?: boolean
    stateId?: boolean
    cityId?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type highRtoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pincode" | "countryId" | "stateId" | "cityId" | "status" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["highRto"]>
  export type highRtoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    country?: boolean | highRto$countryArgs<ExtArgs>
    state?: boolean | highRto$stateArgs<ExtArgs>
    city?: boolean | highRto$cityArgs<ExtArgs>
  }

  export type $highRtoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "highRto"
    objects: {
      country: Prisma.$countryPayload<ExtArgs> | null
      state: Prisma.$statePayload<ExtArgs> | null
      city: Prisma.$cityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pincode: string
      countryId: bigint | null
      stateId: bigint | null
      cityId: bigint | null
      status: boolean
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["highRto"]>
    composites: {}
  }

  type highRtoGetPayload<S extends boolean | null | undefined | highRtoDefaultArgs> = $Result.GetResult<Prisma.$highRtoPayload, S>

  type highRtoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<highRtoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HighRtoCountAggregateInputType | true
    }

  export interface highRtoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['highRto'], meta: { name: 'highRto' } }
    /**
     * Find zero or one HighRto that matches the filter.
     * @param {highRtoFindUniqueArgs} args - Arguments to find a HighRto
     * @example
     * // Get one HighRto
     * const highRto = await prisma.highRto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends highRtoFindUniqueArgs>(args: SelectSubset<T, highRtoFindUniqueArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HighRto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {highRtoFindUniqueOrThrowArgs} args - Arguments to find a HighRto
     * @example
     * // Get one HighRto
     * const highRto = await prisma.highRto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends highRtoFindUniqueOrThrowArgs>(args: SelectSubset<T, highRtoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HighRto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoFindFirstArgs} args - Arguments to find a HighRto
     * @example
     * // Get one HighRto
     * const highRto = await prisma.highRto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends highRtoFindFirstArgs>(args?: SelectSubset<T, highRtoFindFirstArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HighRto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoFindFirstOrThrowArgs} args - Arguments to find a HighRto
     * @example
     * // Get one HighRto
     * const highRto = await prisma.highRto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends highRtoFindFirstOrThrowArgs>(args?: SelectSubset<T, highRtoFindFirstOrThrowArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HighRtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HighRtos
     * const highRtos = await prisma.highRto.findMany()
     * 
     * // Get first 10 HighRtos
     * const highRtos = await prisma.highRto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const highRtoWithIdOnly = await prisma.highRto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends highRtoFindManyArgs>(args?: SelectSubset<T, highRtoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HighRto.
     * @param {highRtoCreateArgs} args - Arguments to create a HighRto.
     * @example
     * // Create one HighRto
     * const HighRto = await prisma.highRto.create({
     *   data: {
     *     // ... data to create a HighRto
     *   }
     * })
     * 
     */
    create<T extends highRtoCreateArgs>(args: SelectSubset<T, highRtoCreateArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HighRtos.
     * @param {highRtoCreateManyArgs} args - Arguments to create many HighRtos.
     * @example
     * // Create many HighRtos
     * const highRto = await prisma.highRto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends highRtoCreateManyArgs>(args?: SelectSubset<T, highRtoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HighRto.
     * @param {highRtoDeleteArgs} args - Arguments to delete one HighRto.
     * @example
     * // Delete one HighRto
     * const HighRto = await prisma.highRto.delete({
     *   where: {
     *     // ... filter to delete one HighRto
     *   }
     * })
     * 
     */
    delete<T extends highRtoDeleteArgs>(args: SelectSubset<T, highRtoDeleteArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HighRto.
     * @param {highRtoUpdateArgs} args - Arguments to update one HighRto.
     * @example
     * // Update one HighRto
     * const highRto = await prisma.highRto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends highRtoUpdateArgs>(args: SelectSubset<T, highRtoUpdateArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HighRtos.
     * @param {highRtoDeleteManyArgs} args - Arguments to filter HighRtos to delete.
     * @example
     * // Delete a few HighRtos
     * const { count } = await prisma.highRto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends highRtoDeleteManyArgs>(args?: SelectSubset<T, highRtoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HighRtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HighRtos
     * const highRto = await prisma.highRto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends highRtoUpdateManyArgs>(args: SelectSubset<T, highRtoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HighRto.
     * @param {highRtoUpsertArgs} args - Arguments to update or create a HighRto.
     * @example
     * // Update or create a HighRto
     * const highRto = await prisma.highRto.upsert({
     *   create: {
     *     // ... data to create a HighRto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HighRto we want to update
     *   }
     * })
     */
    upsert<T extends highRtoUpsertArgs>(args: SelectSubset<T, highRtoUpsertArgs<ExtArgs>>): Prisma__highRtoClient<$Result.GetResult<Prisma.$highRtoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HighRtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoCountArgs} args - Arguments to filter HighRtos to count.
     * @example
     * // Count the number of HighRtos
     * const count = await prisma.highRto.count({
     *   where: {
     *     // ... the filter for the HighRtos we want to count
     *   }
     * })
    **/
    count<T extends highRtoCountArgs>(
      args?: Subset<T, highRtoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HighRtoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HighRto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HighRtoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HighRtoAggregateArgs>(args: Subset<T, HighRtoAggregateArgs>): Prisma.PrismaPromise<GetHighRtoAggregateType<T>>

    /**
     * Group by HighRto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {highRtoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends highRtoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: highRtoGroupByArgs['orderBy'] }
        : { orderBy?: highRtoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, highRtoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHighRtoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the highRto model
   */
  readonly fields: highRtoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for highRto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__highRtoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    country<T extends highRto$countryArgs<ExtArgs> = {}>(args?: Subset<T, highRto$countryArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    state<T extends highRto$stateArgs<ExtArgs> = {}>(args?: Subset<T, highRto$stateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    city<T extends highRto$cityArgs<ExtArgs> = {}>(args?: Subset<T, highRto$cityArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the highRto model
   */
  interface highRtoFieldRefs {
    readonly id: FieldRef<"highRto", 'Int'>
    readonly pincode: FieldRef<"highRto", 'String'>
    readonly countryId: FieldRef<"highRto", 'BigInt'>
    readonly stateId: FieldRef<"highRto", 'BigInt'>
    readonly cityId: FieldRef<"highRto", 'BigInt'>
    readonly status: FieldRef<"highRto", 'Boolean'>
    readonly createdAt: FieldRef<"highRto", 'DateTime'>
    readonly createdBy: FieldRef<"highRto", 'Int'>
    readonly createdByRole: FieldRef<"highRto", 'String'>
    readonly updatedAt: FieldRef<"highRto", 'DateTime'>
    readonly updatedBy: FieldRef<"highRto", 'Int'>
    readonly updatedByRole: FieldRef<"highRto", 'String'>
    readonly deletedAt: FieldRef<"highRto", 'DateTime'>
    readonly deletedBy: FieldRef<"highRto", 'Int'>
    readonly deletedByRole: FieldRef<"highRto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * highRto findUnique
   */
  export type highRtoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter, which highRto to fetch.
     */
    where: highRtoWhereUniqueInput
  }

  /**
   * highRto findUniqueOrThrow
   */
  export type highRtoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter, which highRto to fetch.
     */
    where: highRtoWhereUniqueInput
  }

  /**
   * highRto findFirst
   */
  export type highRtoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter, which highRto to fetch.
     */
    where?: highRtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highRtos to fetch.
     */
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for highRtos.
     */
    cursor?: highRtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highRtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highRtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of highRtos.
     */
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * highRto findFirstOrThrow
   */
  export type highRtoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter, which highRto to fetch.
     */
    where?: highRtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highRtos to fetch.
     */
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for highRtos.
     */
    cursor?: highRtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highRtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highRtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of highRtos.
     */
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * highRto findMany
   */
  export type highRtoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter, which highRtos to fetch.
     */
    where?: highRtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of highRtos to fetch.
     */
    orderBy?: highRtoOrderByWithRelationInput | highRtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing highRtos.
     */
    cursor?: highRtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` highRtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` highRtos.
     */
    skip?: number
    distinct?: HighRtoScalarFieldEnum | HighRtoScalarFieldEnum[]
  }

  /**
   * highRto create
   */
  export type highRtoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * The data needed to create a highRto.
     */
    data: XOR<highRtoCreateInput, highRtoUncheckedCreateInput>
  }

  /**
   * highRto createMany
   */
  export type highRtoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many highRtos.
     */
    data: highRtoCreateManyInput | highRtoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * highRto update
   */
  export type highRtoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * The data needed to update a highRto.
     */
    data: XOR<highRtoUpdateInput, highRtoUncheckedUpdateInput>
    /**
     * Choose, which highRto to update.
     */
    where: highRtoWhereUniqueInput
  }

  /**
   * highRto updateMany
   */
  export type highRtoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update highRtos.
     */
    data: XOR<highRtoUpdateManyMutationInput, highRtoUncheckedUpdateManyInput>
    /**
     * Filter which highRtos to update
     */
    where?: highRtoWhereInput
    /**
     * Limit how many highRtos to update.
     */
    limit?: number
  }

  /**
   * highRto upsert
   */
  export type highRtoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * The filter to search for the highRto to update in case it exists.
     */
    where: highRtoWhereUniqueInput
    /**
     * In case the highRto found by the `where` argument doesn't exist, create a new highRto with this data.
     */
    create: XOR<highRtoCreateInput, highRtoUncheckedCreateInput>
    /**
     * In case the highRto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<highRtoUpdateInput, highRtoUncheckedUpdateInput>
  }

  /**
   * highRto delete
   */
  export type highRtoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
    /**
     * Filter which highRto to delete.
     */
    where: highRtoWhereUniqueInput
  }

  /**
   * highRto deleteMany
   */
  export type highRtoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which highRtos to delete
     */
    where?: highRtoWhereInput
    /**
     * Limit how many highRtos to delete.
     */
    limit?: number
  }

  /**
   * highRto.country
   */
  export type highRto$countryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    where?: countryWhereInput
  }

  /**
   * highRto.state
   */
  export type highRto$stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
  }

  /**
   * highRto.city
   */
  export type highRto$cityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
  }

  /**
   * highRto without action
   */
  export type highRtoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the highRto
     */
    select?: highRtoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the highRto
     */
    omit?: highRtoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: highRtoInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    id: number | null
    amount: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PaymentSumAggregateOutputType = {
    id: number | null
    amount: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: number | null
    transactionId: string | null
    cycle: string | null
    amount: number | null
    status: string | null
    date: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: number | null
    transactionId: string | null
    cycle: string | null
    amount: number | null
    status: string | null
    date: Date | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    transactionId: number
    cycle: number
    amount: number
    status: number
    date: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    id?: true
    amount?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PaymentSumAggregateInputType = {
    id?: true
    amount?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    transactionId?: true
    cycle?: true
    amount?: true
    status?: true
    date?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    transactionId?: true
    cycle?: true
    amount?: true
    status?: true
    date?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    transactionId?: true
    cycle?: true
    amount?: true
    status?: true
    date?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: number
    transactionId: string
    cycle: string | null
    amount: number | null
    status: string | null
    date: Date | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transactionId?: boolean
    cycle?: boolean
    amount?: boolean
    status?: boolean
    date?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    orders?: boolean | Payment$ordersArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>



  export type PaymentSelectScalar = {
    id?: boolean
    transactionId?: boolean
    cycle?: boolean
    amount?: boolean
    status?: boolean
    date?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transactionId" | "cycle" | "amount" | "status" | "date" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Payment$ordersArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      transactionId: string
      cycle: string | null
      amount: number | null
      status: string | null
      date: Date | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Payment$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Payment$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'Int'>
    readonly transactionId: FieldRef<"Payment", 'String'>
    readonly cycle: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Float'>
    readonly status: FieldRef<"Payment", 'String'>
    readonly date: FieldRef<"Payment", 'DateTime'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly createdBy: FieldRef<"Payment", 'Int'>
    readonly createdByRole: FieldRef<"Payment", 'String'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedBy: FieldRef<"Payment", 'Int'>
    readonly updatedByRole: FieldRef<"Payment", 'String'>
    readonly deletedAt: FieldRef<"Payment", 'DateTime'>
    readonly deletedBy: FieldRef<"Payment", 'Int'>
    readonly deletedByRole: FieldRef<"Payment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.orders
   */
  export type Payment$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    id: number | null
    subtotal: number | null
    tax: number | null
    discount: number | null
    totalAmount: number | null
    shippingCountryId: number | null
    shippingStateId: number | null
    shippingCityId: number | null
    billingCountryId: number | null
    billingStateId: number | null
    billingCityId: number | null
    paymentId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type OrderSumAggregateOutputType = {
    id: number | null
    subtotal: number | null
    tax: number | null
    discount: number | null
    totalAmount: number | null
    shippingCountryId: bigint | null
    shippingStateId: bigint | null
    shippingCityId: bigint | null
    billingCountryId: bigint | null
    billingStateId: bigint | null
    billingCityId: bigint | null
    paymentId: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: number | null
    orderNumber: string | null
    status: string | null
    orderNote: string | null
    subtotal: number | null
    tax: number | null
    discount: number | null
    totalAmount: number | null
    currency: string | null
    shippingName: string | null
    shippingPhone: string | null
    shippingEmail: string | null
    shippingAddress: string | null
    shippingZip: string | null
    shippingCountryId: bigint | null
    shippingStateId: bigint | null
    shippingCityId: bigint | null
    billingName: string | null
    billingPhone: string | null
    billingEmail: string | null
    billingAddress: string | null
    billingZip: string | null
    billingCountryId: bigint | null
    billingStateId: bigint | null
    billingCityId: bigint | null
    paymentId: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type OrderMaxAggregateOutputType = {
    id: number | null
    orderNumber: string | null
    status: string | null
    orderNote: string | null
    subtotal: number | null
    tax: number | null
    discount: number | null
    totalAmount: number | null
    currency: string | null
    shippingName: string | null
    shippingPhone: string | null
    shippingEmail: string | null
    shippingAddress: string | null
    shippingZip: string | null
    shippingCountryId: bigint | null
    shippingStateId: bigint | null
    shippingCityId: bigint | null
    billingName: string | null
    billingPhone: string | null
    billingEmail: string | null
    billingAddress: string | null
    billingZip: string | null
    billingCountryId: bigint | null
    billingStateId: bigint | null
    billingCityId: bigint | null
    paymentId: number | null
    createdAt: Date | null
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date | null
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    status: number
    orderNote: number
    subtotal: number
    tax: number
    discount: number
    totalAmount: number
    currency: number
    shippingName: number
    shippingPhone: number
    shippingEmail: number
    shippingAddress: number
    shippingZip: number
    shippingCountryId: number
    shippingStateId: number
    shippingCityId: number
    billingName: number
    billingPhone: number
    billingEmail: number
    billingAddress: number
    billingZip: number
    billingCountryId: number
    billingStateId: number
    billingCityId: number
    paymentId: number
    createdAt: number
    createdBy: number
    createdByRole: number
    updatedAt: number
    updatedBy: number
    updatedByRole: number
    deletedAt: number
    deletedBy: number
    deletedByRole: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    id?: true
    subtotal?: true
    tax?: true
    discount?: true
    totalAmount?: true
    shippingCountryId?: true
    shippingStateId?: true
    shippingCityId?: true
    billingCountryId?: true
    billingStateId?: true
    billingCityId?: true
    paymentId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type OrderSumAggregateInputType = {
    id?: true
    subtotal?: true
    tax?: true
    discount?: true
    totalAmount?: true
    shippingCountryId?: true
    shippingStateId?: true
    shippingCityId?: true
    billingCountryId?: true
    billingStateId?: true
    billingCityId?: true
    paymentId?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    status?: true
    orderNote?: true
    subtotal?: true
    tax?: true
    discount?: true
    totalAmount?: true
    currency?: true
    shippingName?: true
    shippingPhone?: true
    shippingEmail?: true
    shippingAddress?: true
    shippingZip?: true
    shippingCountryId?: true
    shippingStateId?: true
    shippingCityId?: true
    billingName?: true
    billingPhone?: true
    billingEmail?: true
    billingAddress?: true
    billingZip?: true
    billingCountryId?: true
    billingStateId?: true
    billingCityId?: true
    paymentId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    status?: true
    orderNote?: true
    subtotal?: true
    tax?: true
    discount?: true
    totalAmount?: true
    currency?: true
    shippingName?: true
    shippingPhone?: true
    shippingEmail?: true
    shippingAddress?: true
    shippingZip?: true
    shippingCountryId?: true
    shippingStateId?: true
    shippingCityId?: true
    billingName?: true
    billingPhone?: true
    billingEmail?: true
    billingAddress?: true
    billingZip?: true
    billingCountryId?: true
    billingStateId?: true
    billingCityId?: true
    paymentId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    status?: true
    orderNote?: true
    subtotal?: true
    tax?: true
    discount?: true
    totalAmount?: true
    currency?: true
    shippingName?: true
    shippingPhone?: true
    shippingEmail?: true
    shippingAddress?: true
    shippingZip?: true
    shippingCountryId?: true
    shippingStateId?: true
    shippingCityId?: true
    billingName?: true
    billingPhone?: true
    billingEmail?: true
    billingAddress?: true
    billingZip?: true
    billingCountryId?: true
    billingStateId?: true
    billingCityId?: true
    paymentId?: true
    createdAt?: true
    createdBy?: true
    createdByRole?: true
    updatedAt?: true
    updatedBy?: true
    updatedByRole?: true
    deletedAt?: true
    deletedBy?: true
    deletedByRole?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: number
    orderNumber: string
    status: string
    orderNote: string | null
    subtotal: number
    tax: number
    discount: number
    totalAmount: number
    currency: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId: bigint | null
    shippingStateId: bigint | null
    shippingCityId: bigint | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId: bigint | null
    billingStateId: bigint | null
    billingCityId: bigint | null
    paymentId: number | null
    createdAt: Date
    createdBy: number | null
    createdByRole: string | null
    updatedAt: Date
    updatedBy: number | null
    updatedByRole: string | null
    deletedAt: Date | null
    deletedBy: number | null
    deletedByRole: string | null
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    status?: boolean
    orderNote?: boolean
    subtotal?: boolean
    tax?: boolean
    discount?: boolean
    totalAmount?: boolean
    currency?: boolean
    shippingName?: boolean
    shippingPhone?: boolean
    shippingEmail?: boolean
    shippingAddress?: boolean
    shippingZip?: boolean
    shippingCountryId?: boolean
    shippingStateId?: boolean
    shippingCityId?: boolean
    billingName?: boolean
    billingPhone?: boolean
    billingEmail?: boolean
    billingAddress?: boolean
    billingZip?: boolean
    billingCountryId?: boolean
    billingStateId?: boolean
    billingCityId?: boolean
    paymentId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
    shippingCountry?: boolean | Order$shippingCountryArgs<ExtArgs>
    shippingState?: boolean | Order$shippingStateArgs<ExtArgs>
    shippingCity?: boolean | Order$shippingCityArgs<ExtArgs>
    billingCountry?: boolean | Order$billingCountryArgs<ExtArgs>
    billingState?: boolean | Order$billingStateArgs<ExtArgs>
    billingCity?: boolean | Order$billingCityArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>



  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    status?: boolean
    orderNote?: boolean
    subtotal?: boolean
    tax?: boolean
    discount?: boolean
    totalAmount?: boolean
    currency?: boolean
    shippingName?: boolean
    shippingPhone?: boolean
    shippingEmail?: boolean
    shippingAddress?: boolean
    shippingZip?: boolean
    shippingCountryId?: boolean
    shippingStateId?: boolean
    shippingCityId?: boolean
    billingName?: boolean
    billingPhone?: boolean
    billingEmail?: boolean
    billingAddress?: boolean
    billingZip?: boolean
    billingCountryId?: boolean
    billingStateId?: boolean
    billingCityId?: boolean
    paymentId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    createdByRole?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    updatedByRole?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    deletedByRole?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderNumber" | "status" | "orderNote" | "subtotal" | "tax" | "discount" | "totalAmount" | "currency" | "shippingName" | "shippingPhone" | "shippingEmail" | "shippingAddress" | "shippingZip" | "shippingCountryId" | "shippingStateId" | "shippingCityId" | "billingName" | "billingPhone" | "billingEmail" | "billingAddress" | "billingZip" | "billingCountryId" | "billingStateId" | "billingCityId" | "paymentId" | "createdAt" | "createdBy" | "createdByRole" | "updatedAt" | "updatedBy" | "updatedByRole" | "deletedAt" | "deletedBy" | "deletedByRole", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shippingCountry?: boolean | Order$shippingCountryArgs<ExtArgs>
    shippingState?: boolean | Order$shippingStateArgs<ExtArgs>
    shippingCity?: boolean | Order$shippingCityArgs<ExtArgs>
    billingCountry?: boolean | Order$billingCountryArgs<ExtArgs>
    billingState?: boolean | Order$billingStateArgs<ExtArgs>
    billingCity?: boolean | Order$billingCityArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      shippingCountry: Prisma.$countryPayload<ExtArgs> | null
      shippingState: Prisma.$statePayload<ExtArgs> | null
      shippingCity: Prisma.$cityPayload<ExtArgs> | null
      billingCountry: Prisma.$countryPayload<ExtArgs> | null
      billingState: Prisma.$statePayload<ExtArgs> | null
      billingCity: Prisma.$cityPayload<ExtArgs> | null
      payment: Prisma.$PaymentPayload<ExtArgs> | null
      items: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderNumber: string
      status: string
      orderNote: string | null
      subtotal: number
      tax: number
      discount: number
      totalAmount: number
      currency: string
      shippingName: string
      shippingPhone: string
      shippingEmail: string
      shippingAddress: string
      shippingZip: string
      shippingCountryId: bigint | null
      shippingStateId: bigint | null
      shippingCityId: bigint | null
      billingName: string
      billingPhone: string
      billingEmail: string
      billingAddress: string
      billingZip: string
      billingCountryId: bigint | null
      billingStateId: bigint | null
      billingCityId: bigint | null
      paymentId: number | null
      createdAt: Date
      createdBy: number | null
      createdByRole: string | null
      updatedAt: Date
      updatedBy: number | null
      updatedByRole: string | null
      deletedAt: Date | null
      deletedBy: number | null
      deletedByRole: string | null
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shippingCountry<T extends Order$shippingCountryArgs<ExtArgs> = {}>(args?: Subset<T, Order$shippingCountryArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    shippingState<T extends Order$shippingStateArgs<ExtArgs> = {}>(args?: Subset<T, Order$shippingStateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    shippingCity<T extends Order$shippingCityArgs<ExtArgs> = {}>(args?: Subset<T, Order$shippingCityArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    billingCountry<T extends Order$billingCountryArgs<ExtArgs> = {}>(args?: Subset<T, Order$billingCountryArgs<ExtArgs>>): Prisma__countryClient<$Result.GetResult<Prisma.$countryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    billingState<T extends Order$billingStateArgs<ExtArgs> = {}>(args?: Subset<T, Order$billingStateArgs<ExtArgs>>): Prisma__stateClient<$Result.GetResult<Prisma.$statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    billingCity<T extends Order$billingCityArgs<ExtArgs> = {}>(args?: Subset<T, Order$billingCityArgs<ExtArgs>>): Prisma__cityClient<$Result.GetResult<Prisma.$cityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    payment<T extends Order$paymentArgs<ExtArgs> = {}>(args?: Subset<T, Order$paymentArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends Order$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'Int'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'String'>
    readonly orderNote: FieldRef<"Order", 'String'>
    readonly subtotal: FieldRef<"Order", 'Float'>
    readonly tax: FieldRef<"Order", 'Float'>
    readonly discount: FieldRef<"Order", 'Float'>
    readonly totalAmount: FieldRef<"Order", 'Float'>
    readonly currency: FieldRef<"Order", 'String'>
    readonly shippingName: FieldRef<"Order", 'String'>
    readonly shippingPhone: FieldRef<"Order", 'String'>
    readonly shippingEmail: FieldRef<"Order", 'String'>
    readonly shippingAddress: FieldRef<"Order", 'String'>
    readonly shippingZip: FieldRef<"Order", 'String'>
    readonly shippingCountryId: FieldRef<"Order", 'BigInt'>
    readonly shippingStateId: FieldRef<"Order", 'BigInt'>
    readonly shippingCityId: FieldRef<"Order", 'BigInt'>
    readonly billingName: FieldRef<"Order", 'String'>
    readonly billingPhone: FieldRef<"Order", 'String'>
    readonly billingEmail: FieldRef<"Order", 'String'>
    readonly billingAddress: FieldRef<"Order", 'String'>
    readonly billingZip: FieldRef<"Order", 'String'>
    readonly billingCountryId: FieldRef<"Order", 'BigInt'>
    readonly billingStateId: FieldRef<"Order", 'BigInt'>
    readonly billingCityId: FieldRef<"Order", 'BigInt'>
    readonly paymentId: FieldRef<"Order", 'Int'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly createdBy: FieldRef<"Order", 'Int'>
    readonly createdByRole: FieldRef<"Order", 'String'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly updatedBy: FieldRef<"Order", 'Int'>
    readonly updatedByRole: FieldRef<"Order", 'String'>
    readonly deletedAt: FieldRef<"Order", 'DateTime'>
    readonly deletedBy: FieldRef<"Order", 'Int'>
    readonly deletedByRole: FieldRef<"Order", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.shippingCountry
   */
  export type Order$shippingCountryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    where?: countryWhereInput
  }

  /**
   * Order.shippingState
   */
  export type Order$shippingStateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
  }

  /**
   * Order.shippingCity
   */
  export type Order$shippingCityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
  }

  /**
   * Order.billingCountry
   */
  export type Order$billingCountryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the country
     */
    select?: countrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the country
     */
    omit?: countryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: countryInclude<ExtArgs> | null
    where?: countryWhereInput
  }

  /**
   * Order.billingState
   */
  export type Order$billingStateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the state
     */
    select?: stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the state
     */
    omit?: stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stateInclude<ExtArgs> | null
    where?: stateWhereInput
  }

  /**
   * Order.billingCity
   */
  export type Order$billingCityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the city
     */
    select?: citySelect<ExtArgs> | null
    /**
     * Omit specific fields from the city
     */
    omit?: cityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cityInclude<ExtArgs> | null
    where?: cityWhereInput
  }

  /**
   * Order.payment
   */
  export type Order$paymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
  }

  /**
   * Order.items
   */
  export type Order$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    productId: number | null
    variantId: number | null
    quantity: number | null
    price: number | null
    total: number | null
  }

  export type OrderItemSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    productId: number | null
    variantId: number | null
    quantity: number | null
    price: number | null
    total: number | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    productId: number | null
    variantId: number | null
    quantity: number | null
    price: number | null
    total: number | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    productId: number | null
    variantId: number | null
    quantity: number | null
    price: number | null
    total: number | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    variantId: number
    quantity: number
    price: number
    total: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    price?: true
    total?: true
  }

  export type OrderItemSumAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    price?: true
    total?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    price?: true
    total?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    price?: true
    total?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    price?: true
    total?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: number
    orderId: number
    productId: number | null
    variantId: number | null
    quantity: number
    price: number
    total: number
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    price?: boolean
    total?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | OrderItem$productArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>



  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    price?: boolean
    total?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productId" | "variantId" | "quantity" | "price" | "total", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | OrderItem$productArgs<ExtArgs>
    variant?: boolean | OrderItem$variantArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      product: Prisma.$productPayload<ExtArgs> | null
      variant: Prisma.$productVariantPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number
      productId: number | null
      variantId: number | null
      quantity: number
      price: number
      total: number
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends OrderItem$productArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$productArgs<ExtArgs>>): Prisma__productClient<$Result.GetResult<Prisma.$productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    variant<T extends OrderItem$variantArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$variantArgs<ExtArgs>>): Prisma__productVariantClient<$Result.GetResult<Prisma.$productVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'Int'>
    readonly orderId: FieldRef<"OrderItem", 'Int'>
    readonly productId: FieldRef<"OrderItem", 'Int'>
    readonly variantId: FieldRef<"OrderItem", 'Int'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly price: FieldRef<"OrderItem", 'Float'>
    readonly total: FieldRef<"OrderItem", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem.product
   */
  export type OrderItem$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product
     */
    select?: productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product
     */
    omit?: productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productInclude<ExtArgs> | null
    where?: productWhereInput
  }

  /**
   * OrderItem.variant
   */
  export type OrderItem$variantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productVariant
     */
    select?: productVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productVariant
     */
    omit?: productVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productVariantInclude<ExtArgs> | null
    where?: productVariantWhereInput
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EmailConfigScalarFieldEnum: {
    id: 'id',
    panel: 'panel',
    module: 'module',
    subject: 'subject',
    action: 'action',
    html_template: 'html_template',
    smtp_host: 'smtp_host',
    smtp_secure: 'smtp_secure',
    smtp_port: 'smtp_port',
    smtp_username: 'smtp_username',
    smtp_password: 'smtp_password',
    from_email: 'from_email',
    from_name: 'from_name',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole'
  };

  export type EmailConfigScalarFieldEnum = (typeof EmailConfigScalarFieldEnum)[keyof typeof EmailConfigScalarFieldEnum]


  export const AdminScalarFieldEnum: {
    id: 'id',
    profilePicture: 'profilePicture',
    name: 'name',
    username: 'username',
    website: 'website',
    email: 'email',
    referralCode: 'referralCode',
    password: 'password',
    role: 'role',
    type: 'type',
    status: 'status',
    dateOfBirth: 'dateOfBirth',
    phoneNumber: 'phoneNumber',
    currentAddress: 'currentAddress',
    permanentAddress: 'permanentAddress',
    permanentPostalCode: 'permanentPostalCode',
    permanentCityId: 'permanentCityId',
    permanentStateId: 'permanentStateId',
    permanentCountryId: 'permanentCountryId',
    pr_token: 'pr_token',
    pr_expires_at: 'pr_expires_at',
    pr_last_reset: 'pr_last_reset',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    panel: 'panel',
    module: 'module',
    action: 'action',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const AdminHasPermissionScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    permissionId: 'permissionId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type AdminHasPermissionScalarFieldEnum = (typeof AdminHasPermissionScalarFieldEnum)[keyof typeof AdminHasPermissionScalarFieldEnum]


  export const CompanyDetailScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    companyName: 'companyName',
    brandName: 'brandName',
    brandShortName: 'brandShortName',
    billingAddress: 'billingAddress',
    billingPincode: 'billingPincode',
    billingState: 'billingState',
    billingCity: 'billingCity',
    businessType: 'businessType',
    clientEntryType: 'clientEntryType',
    gstNumber: 'gstNumber',
    companyPanNumber: 'companyPanNumber',
    aadharNumber: 'aadharNumber',
    gstDocument: 'gstDocument',
    panCardHolderName: 'panCardHolderName',
    aadharCardHolderName: 'aadharCardHolderName',
    panCardImage: 'panCardImage',
    aadharCardImage: 'aadharCardImage',
    additionalDocumentUpload: 'additionalDocumentUpload',
    documentId: 'documentId',
    documentName: 'documentName',
    documentImage: 'documentImage',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type CompanyDetailScalarFieldEnum = (typeof CompanyDetailScalarFieldEnum)[keyof typeof CompanyDetailScalarFieldEnum]


  export const BankAccountScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    accountHolderName: 'accountHolderName',
    accountNumber: 'accountNumber',
    bankName: 'bankName',
    bankBranch: 'bankBranch',
    accountType: 'accountType',
    ifscCode: 'ifscCode',
    cancelledChequeImage: 'cancelledChequeImage',
    paymentMethod: 'paymentMethod',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type BankAccountScalarFieldEnum = (typeof BankAccountScalarFieldEnum)[keyof typeof BankAccountScalarFieldEnum]


  export const AdminStaffScalarFieldEnum: {
    id: 'id',
    admin_id: 'admin_id',
    name: 'name',
    email: 'email',
    password: 'password',
    role: 'role',
    status: 'status',
    pr_token: 'pr_token',
    pr_expires_at: 'pr_expires_at',
    pr_last_reset: 'pr_last_reset',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type AdminStaffScalarFieldEnum = (typeof AdminStaffScalarFieldEnum)[keyof typeof AdminStaffScalarFieldEnum]


  export const LoginLogScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    adminRole: 'adminRole',
    action: 'action',
    response: 'response',
    ipv4: 'ipv4',
    ipv6: 'ipv6',
    internetServiceProvider: 'internetServiceProvider',
    clientInformation: 'clientInformation',
    userAgent: 'userAgent',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type LoginLogScalarFieldEnum = (typeof LoginLogScalarFieldEnum)[keyof typeof LoginLogScalarFieldEnum]


  export const ActivityLogScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    adminRole: 'adminRole',
    module: 'module',
    action: 'action',
    endpoint: 'endpoint',
    method: 'method',
    payload: 'payload',
    response: 'response',
    result: 'result',
    data: 'data',
    ipv4: 'ipv4',
    ipv6: 'ipv6',
    internetServiceProvider: 'internetServiceProvider',
    clientInformation: 'clientInformation',
    userAgent: 'userAgent',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type ActivityLogScalarFieldEnum = (typeof ActivityLogScalarFieldEnum)[keyof typeof ActivityLogScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    iso3: 'iso3',
    iso2: 'iso2',
    phonecode: 'phonecode',
    currency: 'currency',
    currencyName: 'currencyName',
    currencySymbol: 'currencySymbol',
    nationality: 'nationality',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const StateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    countryId: 'countryId',
    iso2: 'iso2',
    type: 'type',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type StateScalarFieldEnum = (typeof StateScalarFieldEnum)[keyof typeof StateScalarFieldEnum]


  export const CityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    stateId: 'stateId',
    countryId: 'countryId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type CityScalarFieldEnum = (typeof CityScalarFieldEnum)[keyof typeof CityScalarFieldEnum]


  export const WarehouseScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    gst_number: 'gst_number',
    contact_name: 'contact_name',
    contact_number: 'contact_number',
    address_line_1: 'address_line_1',
    address_line_2: 'address_line_2',
    postal_code: 'postal_code',
    countryId: 'countryId',
    stateId: 'stateId',
    cityId: 'cityId',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type WarehouseScalarFieldEnum = (typeof WarehouseScalarFieldEnum)[keyof typeof WarehouseScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    image: 'image',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    image: 'image',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const ProductRequestScalarFieldEnum: {
    id: 'id',
    name: 'name',
    categoryId: 'categoryId',
    expectedPrice: 'expectedPrice',
    expectedDailyOrders: 'expectedDailyOrders',
    url: 'url',
    image: 'image',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type ProductRequestScalarFieldEnum = (typeof ProductRequestScalarFieldEnum)[keyof typeof ProductRequestScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    name: 'name',
    slug: 'slug',
    main_sku: 'main_sku',
    description: 'description',
    tags: 'tags',
    brandId: 'brandId',
    originCountryId: 'originCountryId',
    ean: 'ean',
    hsnCode: 'hsnCode',
    taxRate: 'taxRate',
    upc: 'upc',
    rtoAddress: 'rtoAddress',
    pickupAddress: 'pickupAddress',
    shippingCountryId: 'shippingCountryId',
    video_url: 'video_url',
    list_as: 'list_as',
    shipping_time: 'shipping_time',
    weight: 'weight',
    package_length: 'package_length',
    package_width: 'package_width',
    package_height: 'package_height',
    chargeable_weight: 'chargeable_weight',
    package_weight_image: 'package_weight_image',
    package_length_image: 'package_length_image',
    package_width_image: 'package_width_image',
    package_height_image: 'package_height_image',
    product_detail_video: 'product_detail_video',
    training_guidance_video: 'training_guidance_video',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductVariantScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    image: 'image',
    color: 'color',
    sku: 'sku',
    qty: 'qty',
    currency: 'currency',
    article_id: 'article_id',
    product_link: 'product_link',
    suggested_price: 'suggested_price',
    shipowl_price: 'shipowl_price',
    rto_suggested_price: 'rto_suggested_price',
    rto_price: 'rto_price',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type ProductVariantScalarFieldEnum = (typeof ProductVariantScalarFieldEnum)[keyof typeof ProductVariantScalarFieldEnum]


  export const CourierCompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    code: 'code',
    website: 'website',
    email: 'email',
    phoneNumber: 'phoneNumber',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type CourierCompanyScalarFieldEnum = (typeof CourierCompanyScalarFieldEnum)[keyof typeof CourierCompanyScalarFieldEnum]


  export const HighRtoScalarFieldEnum: {
    id: 'id',
    pincode: 'pincode',
    countryId: 'countryId',
    stateId: 'stateId',
    cityId: 'cityId',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type HighRtoScalarFieldEnum = (typeof HighRtoScalarFieldEnum)[keyof typeof HighRtoScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    transactionId: 'transactionId',
    cycle: 'cycle',
    amount: 'amount',
    status: 'status',
    date: 'date',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    status: 'status',
    orderNote: 'orderNote',
    subtotal: 'subtotal',
    tax: 'tax',
    discount: 'discount',
    totalAmount: 'totalAmount',
    currency: 'currency',
    shippingName: 'shippingName',
    shippingPhone: 'shippingPhone',
    shippingEmail: 'shippingEmail',
    shippingAddress: 'shippingAddress',
    shippingZip: 'shippingZip',
    shippingCountryId: 'shippingCountryId',
    shippingStateId: 'shippingStateId',
    shippingCityId: 'shippingCityId',
    billingName: 'billingName',
    billingPhone: 'billingPhone',
    billingEmail: 'billingEmail',
    billingAddress: 'billingAddress',
    billingZip: 'billingZip',
    billingCountryId: 'billingCountryId',
    billingStateId: 'billingStateId',
    billingCityId: 'billingCityId',
    paymentId: 'paymentId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    createdByRole: 'createdByRole',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    updatedByRole: 'updatedByRole',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    deletedByRole: 'deletedByRole'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    variantId: 'variantId',
    quantity: 'quantity',
    price: 'price',
    total: 'total'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const emailConfigOrderByRelevanceFieldEnum: {
    panel: 'panel',
    module: 'module',
    subject: 'subject',
    action: 'action',
    html_template: 'html_template',
    smtp_host: 'smtp_host',
    smtp_username: 'smtp_username',
    smtp_password: 'smtp_password',
    from_email: 'from_email',
    from_name: 'from_name',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole'
  };

  export type emailConfigOrderByRelevanceFieldEnum = (typeof emailConfigOrderByRelevanceFieldEnum)[keyof typeof emailConfigOrderByRelevanceFieldEnum]


  export const adminOrderByRelevanceFieldEnum: {
    profilePicture: 'profilePicture',
    name: 'name',
    username: 'username',
    website: 'website',
    email: 'email',
    referralCode: 'referralCode',
    password: 'password',
    role: 'role',
    type: 'type',
    status: 'status',
    phoneNumber: 'phoneNumber',
    currentAddress: 'currentAddress',
    permanentAddress: 'permanentAddress',
    permanentPostalCode: 'permanentPostalCode',
    pr_token: 'pr_token',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type adminOrderByRelevanceFieldEnum = (typeof adminOrderByRelevanceFieldEnum)[keyof typeof adminOrderByRelevanceFieldEnum]


  export const permissionOrderByRelevanceFieldEnum: {
    panel: 'panel',
    module: 'module',
    action: 'action',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type permissionOrderByRelevanceFieldEnum = (typeof permissionOrderByRelevanceFieldEnum)[keyof typeof permissionOrderByRelevanceFieldEnum]


  export const adminHasPermissionOrderByRelevanceFieldEnum: {
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type adminHasPermissionOrderByRelevanceFieldEnum = (typeof adminHasPermissionOrderByRelevanceFieldEnum)[keyof typeof adminHasPermissionOrderByRelevanceFieldEnum]


  export const companyDetailOrderByRelevanceFieldEnum: {
    companyName: 'companyName',
    brandName: 'brandName',
    brandShortName: 'brandShortName',
    billingAddress: 'billingAddress',
    billingPincode: 'billingPincode',
    billingState: 'billingState',
    billingCity: 'billingCity',
    businessType: 'businessType',
    clientEntryType: 'clientEntryType',
    gstNumber: 'gstNumber',
    companyPanNumber: 'companyPanNumber',
    aadharNumber: 'aadharNumber',
    gstDocument: 'gstDocument',
    panCardHolderName: 'panCardHolderName',
    aadharCardHolderName: 'aadharCardHolderName',
    panCardImage: 'panCardImage',
    aadharCardImage: 'aadharCardImage',
    additionalDocumentUpload: 'additionalDocumentUpload',
    documentId: 'documentId',
    documentName: 'documentName',
    documentImage: 'documentImage',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type companyDetailOrderByRelevanceFieldEnum = (typeof companyDetailOrderByRelevanceFieldEnum)[keyof typeof companyDetailOrderByRelevanceFieldEnum]


  export const bankAccountOrderByRelevanceFieldEnum: {
    accountHolderName: 'accountHolderName',
    accountNumber: 'accountNumber',
    bankName: 'bankName',
    bankBranch: 'bankBranch',
    accountType: 'accountType',
    ifscCode: 'ifscCode',
    cancelledChequeImage: 'cancelledChequeImage',
    paymentMethod: 'paymentMethod',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type bankAccountOrderByRelevanceFieldEnum = (typeof bankAccountOrderByRelevanceFieldEnum)[keyof typeof bankAccountOrderByRelevanceFieldEnum]


  export const adminStaffOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    password: 'password',
    role: 'role',
    status: 'status',
    pr_token: 'pr_token',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type adminStaffOrderByRelevanceFieldEnum = (typeof adminStaffOrderByRelevanceFieldEnum)[keyof typeof adminStaffOrderByRelevanceFieldEnum]


  export const loginLogOrderByRelevanceFieldEnum: {
    adminRole: 'adminRole',
    action: 'action',
    response: 'response',
    ipv4: 'ipv4',
    ipv6: 'ipv6',
    internetServiceProvider: 'internetServiceProvider',
    clientInformation: 'clientInformation',
    userAgent: 'userAgent',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type loginLogOrderByRelevanceFieldEnum = (typeof loginLogOrderByRelevanceFieldEnum)[keyof typeof loginLogOrderByRelevanceFieldEnum]


  export const activityLogOrderByRelevanceFieldEnum: {
    adminRole: 'adminRole',
    module: 'module',
    action: 'action',
    endpoint: 'endpoint',
    method: 'method',
    payload: 'payload',
    response: 'response',
    data: 'data',
    ipv4: 'ipv4',
    ipv6: 'ipv6',
    internetServiceProvider: 'internetServiceProvider',
    clientInformation: 'clientInformation',
    userAgent: 'userAgent',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type activityLogOrderByRelevanceFieldEnum = (typeof activityLogOrderByRelevanceFieldEnum)[keyof typeof activityLogOrderByRelevanceFieldEnum]


  export const countryOrderByRelevanceFieldEnum: {
    name: 'name',
    iso3: 'iso3',
    iso2: 'iso2',
    phonecode: 'phonecode',
    currency: 'currency',
    currencyName: 'currencyName',
    currencySymbol: 'currencySymbol',
    nationality: 'nationality',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type countryOrderByRelevanceFieldEnum = (typeof countryOrderByRelevanceFieldEnum)[keyof typeof countryOrderByRelevanceFieldEnum]


  export const stateOrderByRelevanceFieldEnum: {
    name: 'name',
    iso2: 'iso2',
    type: 'type',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type stateOrderByRelevanceFieldEnum = (typeof stateOrderByRelevanceFieldEnum)[keyof typeof stateOrderByRelevanceFieldEnum]


  export const cityOrderByRelevanceFieldEnum: {
    name: 'name',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type cityOrderByRelevanceFieldEnum = (typeof cityOrderByRelevanceFieldEnum)[keyof typeof cityOrderByRelevanceFieldEnum]


  export const warehouseOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug',
    gst_number: 'gst_number',
    contact_name: 'contact_name',
    contact_number: 'contact_number',
    address_line_1: 'address_line_1',
    address_line_2: 'address_line_2',
    postal_code: 'postal_code',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type warehouseOrderByRelevanceFieldEnum = (typeof warehouseOrderByRelevanceFieldEnum)[keyof typeof warehouseOrderByRelevanceFieldEnum]


  export const categoryOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug',
    description: 'description',
    image: 'image',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type categoryOrderByRelevanceFieldEnum = (typeof categoryOrderByRelevanceFieldEnum)[keyof typeof categoryOrderByRelevanceFieldEnum]


  export const brandOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug',
    description: 'description',
    image: 'image',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type brandOrderByRelevanceFieldEnum = (typeof brandOrderByRelevanceFieldEnum)[keyof typeof brandOrderByRelevanceFieldEnum]


  export const productRequestOrderByRelevanceFieldEnum: {
    name: 'name',
    expectedDailyOrders: 'expectedDailyOrders',
    url: 'url',
    image: 'image',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type productRequestOrderByRelevanceFieldEnum = (typeof productRequestOrderByRelevanceFieldEnum)[keyof typeof productRequestOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const productOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug',
    main_sku: 'main_sku',
    description: 'description',
    ean: 'ean',
    hsnCode: 'hsnCode',
    upc: 'upc',
    rtoAddress: 'rtoAddress',
    pickupAddress: 'pickupAddress',
    video_url: 'video_url',
    list_as: 'list_as',
    shipping_time: 'shipping_time',
    package_weight_image: 'package_weight_image',
    package_length_image: 'package_length_image',
    package_width_image: 'package_width_image',
    package_height_image: 'package_height_image',
    product_detail_video: 'product_detail_video',
    training_guidance_video: 'training_guidance_video',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type productOrderByRelevanceFieldEnum = (typeof productOrderByRelevanceFieldEnum)[keyof typeof productOrderByRelevanceFieldEnum]


  export const productVariantOrderByRelevanceFieldEnum: {
    image: 'image',
    color: 'color',
    sku: 'sku',
    currency: 'currency',
    article_id: 'article_id',
    product_link: 'product_link',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type productVariantOrderByRelevanceFieldEnum = (typeof productVariantOrderByRelevanceFieldEnum)[keyof typeof productVariantOrderByRelevanceFieldEnum]


  export const courierCompanyOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug',
    code: 'code',
    website: 'website',
    email: 'email',
    phoneNumber: 'phoneNumber',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type courierCompanyOrderByRelevanceFieldEnum = (typeof courierCompanyOrderByRelevanceFieldEnum)[keyof typeof courierCompanyOrderByRelevanceFieldEnum]


  export const highRtoOrderByRelevanceFieldEnum: {
    pincode: 'pincode',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type highRtoOrderByRelevanceFieldEnum = (typeof highRtoOrderByRelevanceFieldEnum)[keyof typeof highRtoOrderByRelevanceFieldEnum]


  export const PaymentOrderByRelevanceFieldEnum: {
    transactionId: 'transactionId',
    cycle: 'cycle',
    status: 'status',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type PaymentOrderByRelevanceFieldEnum = (typeof PaymentOrderByRelevanceFieldEnum)[keyof typeof PaymentOrderByRelevanceFieldEnum]


  export const OrderOrderByRelevanceFieldEnum: {
    orderNumber: 'orderNumber',
    status: 'status',
    orderNote: 'orderNote',
    currency: 'currency',
    shippingName: 'shippingName',
    shippingPhone: 'shippingPhone',
    shippingEmail: 'shippingEmail',
    shippingAddress: 'shippingAddress',
    shippingZip: 'shippingZip',
    billingName: 'billingName',
    billingPhone: 'billingPhone',
    billingEmail: 'billingEmail',
    billingAddress: 'billingAddress',
    billingZip: 'billingZip',
    createdByRole: 'createdByRole',
    updatedByRole: 'updatedByRole',
    deletedByRole: 'deletedByRole'
  };

  export type OrderOrderByRelevanceFieldEnum = (typeof OrderOrderByRelevanceFieldEnum)[keyof typeof OrderOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type emailConfigWhereInput = {
    AND?: emailConfigWhereInput | emailConfigWhereInput[]
    OR?: emailConfigWhereInput[]
    NOT?: emailConfigWhereInput | emailConfigWhereInput[]
    id?: BigIntFilter<"emailConfig"> | bigint | number
    panel?: StringFilter<"emailConfig"> | string
    module?: StringFilter<"emailConfig"> | string
    subject?: StringFilter<"emailConfig"> | string
    action?: StringFilter<"emailConfig"> | string
    html_template?: StringNullableFilter<"emailConfig"> | string | null
    smtp_host?: StringFilter<"emailConfig"> | string
    smtp_secure?: BoolFilter<"emailConfig"> | boolean
    smtp_port?: IntFilter<"emailConfig"> | number
    smtp_username?: StringFilter<"emailConfig"> | string
    smtp_password?: StringFilter<"emailConfig"> | string
    from_email?: StringFilter<"emailConfig"> | string
    from_name?: StringFilter<"emailConfig"> | string
    status?: BoolFilter<"emailConfig"> | boolean
    createdAt?: DateTimeFilter<"emailConfig"> | Date | string
    createdBy?: IntNullableFilter<"emailConfig"> | number | null
    createdByRole?: StringNullableFilter<"emailConfig"> | string | null
    updatedAt?: DateTimeFilter<"emailConfig"> | Date | string
    updatedBy?: IntNullableFilter<"emailConfig"> | number | null
    updatedByRole?: StringNullableFilter<"emailConfig"> | string | null
  }

  export type emailConfigOrderByWithRelationInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    subject?: SortOrder
    action?: SortOrder
    html_template?: SortOrderInput | SortOrder
    smtp_host?: SortOrder
    smtp_secure?: SortOrder
    smtp_port?: SortOrder
    smtp_username?: SortOrder
    smtp_password?: SortOrder
    from_email?: SortOrder
    from_name?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    _relevance?: emailConfigOrderByRelevanceInput
  }

  export type emailConfigWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: emailConfigWhereInput | emailConfigWhereInput[]
    OR?: emailConfigWhereInput[]
    NOT?: emailConfigWhereInput | emailConfigWhereInput[]
    panel?: StringFilter<"emailConfig"> | string
    module?: StringFilter<"emailConfig"> | string
    subject?: StringFilter<"emailConfig"> | string
    action?: StringFilter<"emailConfig"> | string
    html_template?: StringNullableFilter<"emailConfig"> | string | null
    smtp_host?: StringFilter<"emailConfig"> | string
    smtp_secure?: BoolFilter<"emailConfig"> | boolean
    smtp_port?: IntFilter<"emailConfig"> | number
    smtp_username?: StringFilter<"emailConfig"> | string
    smtp_password?: StringFilter<"emailConfig"> | string
    from_email?: StringFilter<"emailConfig"> | string
    from_name?: StringFilter<"emailConfig"> | string
    status?: BoolFilter<"emailConfig"> | boolean
    createdAt?: DateTimeFilter<"emailConfig"> | Date | string
    createdBy?: IntNullableFilter<"emailConfig"> | number | null
    createdByRole?: StringNullableFilter<"emailConfig"> | string | null
    updatedAt?: DateTimeFilter<"emailConfig"> | Date | string
    updatedBy?: IntNullableFilter<"emailConfig"> | number | null
    updatedByRole?: StringNullableFilter<"emailConfig"> | string | null
  }, "id">

  export type emailConfigOrderByWithAggregationInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    subject?: SortOrder
    action?: SortOrder
    html_template?: SortOrderInput | SortOrder
    smtp_host?: SortOrder
    smtp_secure?: SortOrder
    smtp_port?: SortOrder
    smtp_username?: SortOrder
    smtp_password?: SortOrder
    from_email?: SortOrder
    from_name?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    _count?: emailConfigCountOrderByAggregateInput
    _avg?: emailConfigAvgOrderByAggregateInput
    _max?: emailConfigMaxOrderByAggregateInput
    _min?: emailConfigMinOrderByAggregateInput
    _sum?: emailConfigSumOrderByAggregateInput
  }

  export type emailConfigScalarWhereWithAggregatesInput = {
    AND?: emailConfigScalarWhereWithAggregatesInput | emailConfigScalarWhereWithAggregatesInput[]
    OR?: emailConfigScalarWhereWithAggregatesInput[]
    NOT?: emailConfigScalarWhereWithAggregatesInput | emailConfigScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"emailConfig"> | bigint | number
    panel?: StringWithAggregatesFilter<"emailConfig"> | string
    module?: StringWithAggregatesFilter<"emailConfig"> | string
    subject?: StringWithAggregatesFilter<"emailConfig"> | string
    action?: StringWithAggregatesFilter<"emailConfig"> | string
    html_template?: StringNullableWithAggregatesFilter<"emailConfig"> | string | null
    smtp_host?: StringWithAggregatesFilter<"emailConfig"> | string
    smtp_secure?: BoolWithAggregatesFilter<"emailConfig"> | boolean
    smtp_port?: IntWithAggregatesFilter<"emailConfig"> | number
    smtp_username?: StringWithAggregatesFilter<"emailConfig"> | string
    smtp_password?: StringWithAggregatesFilter<"emailConfig"> | string
    from_email?: StringWithAggregatesFilter<"emailConfig"> | string
    from_name?: StringWithAggregatesFilter<"emailConfig"> | string
    status?: BoolWithAggregatesFilter<"emailConfig"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"emailConfig"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"emailConfig"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"emailConfig"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"emailConfig"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"emailConfig"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"emailConfig"> | string | null
  }

  export type adminWhereInput = {
    AND?: adminWhereInput | adminWhereInput[]
    OR?: adminWhereInput[]
    NOT?: adminWhereInput | adminWhereInput[]
    id?: IntFilter<"admin"> | number
    profilePicture?: StringNullableFilter<"admin"> | string | null
    name?: StringFilter<"admin"> | string
    username?: StringNullableFilter<"admin"> | string | null
    website?: StringNullableFilter<"admin"> | string | null
    email?: StringFilter<"admin"> | string
    referralCode?: StringNullableFilter<"admin"> | string | null
    password?: StringFilter<"admin"> | string
    role?: StringFilter<"admin"> | string
    type?: StringFilter<"admin"> | string
    status?: StringFilter<"admin"> | string
    dateOfBirth?: DateTimeNullableFilter<"admin"> | Date | string | null
    phoneNumber?: StringNullableFilter<"admin"> | string | null
    currentAddress?: StringNullableFilter<"admin"> | string | null
    permanentAddress?: StringNullableFilter<"admin"> | string | null
    permanentPostalCode?: StringNullableFilter<"admin"> | string | null
    permanentCityId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentStateId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentCountryId?: BigIntNullableFilter<"admin"> | bigint | number | null
    pr_token?: StringNullableFilter<"admin"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"admin"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"admin"> | Date | string | null
    createdAt?: DateTimeFilter<"admin"> | Date | string
    createdBy?: IntNullableFilter<"admin"> | number | null
    createdByRole?: StringNullableFilter<"admin"> | string | null
    updatedAt?: DateTimeFilter<"admin"> | Date | string
    updatedBy?: IntNullableFilter<"admin"> | number | null
    updatedByRole?: StringNullableFilter<"admin"> | string | null
    deletedAt?: DateTimeNullableFilter<"admin"> | Date | string | null
    deletedBy?: IntNullableFilter<"admin"> | number | null
    deletedByRole?: StringNullableFilter<"admin"> | string | null
    permanentCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    permanentState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    permanentCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    staff?: AdminStaffListRelationFilter
    companyDetail?: XOR<CompanyDetailNullableScalarRelationFilter, companyDetailWhereInput> | null
    bankAccounts?: BankAccountListRelationFilter
    permissions?: AdminHasPermissionListRelationFilter
  }

  export type adminOrderByWithRelationInput = {
    id?: SortOrder
    profilePicture?: SortOrderInput | SortOrder
    name?: SortOrder
    username?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrder
    referralCode?: SortOrderInput | SortOrder
    password?: SortOrder
    role?: SortOrder
    type?: SortOrder
    status?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    currentAddress?: SortOrderInput | SortOrder
    permanentAddress?: SortOrderInput | SortOrder
    permanentPostalCode?: SortOrderInput | SortOrder
    permanentCityId?: SortOrderInput | SortOrder
    permanentStateId?: SortOrderInput | SortOrder
    permanentCountryId?: SortOrderInput | SortOrder
    pr_token?: SortOrderInput | SortOrder
    pr_expires_at?: SortOrderInput | SortOrder
    pr_last_reset?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    permanentCity?: cityOrderByWithRelationInput
    permanentState?: stateOrderByWithRelationInput
    permanentCountry?: countryOrderByWithRelationInput
    staff?: adminStaffOrderByRelationAggregateInput
    companyDetail?: companyDetailOrderByWithRelationInput
    bankAccounts?: bankAccountOrderByRelationAggregateInput
    permissions?: adminHasPermissionOrderByRelationAggregateInput
    _relevance?: adminOrderByRelevanceInput
  }

  export type adminWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: adminWhereInput | adminWhereInput[]
    OR?: adminWhereInput[]
    NOT?: adminWhereInput | adminWhereInput[]
    profilePicture?: StringNullableFilter<"admin"> | string | null
    name?: StringFilter<"admin"> | string
    website?: StringNullableFilter<"admin"> | string | null
    email?: StringFilter<"admin"> | string
    referralCode?: StringNullableFilter<"admin"> | string | null
    password?: StringFilter<"admin"> | string
    role?: StringFilter<"admin"> | string
    type?: StringFilter<"admin"> | string
    status?: StringFilter<"admin"> | string
    dateOfBirth?: DateTimeNullableFilter<"admin"> | Date | string | null
    phoneNumber?: StringNullableFilter<"admin"> | string | null
    currentAddress?: StringNullableFilter<"admin"> | string | null
    permanentAddress?: StringNullableFilter<"admin"> | string | null
    permanentPostalCode?: StringNullableFilter<"admin"> | string | null
    permanentCityId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentStateId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentCountryId?: BigIntNullableFilter<"admin"> | bigint | number | null
    pr_token?: StringNullableFilter<"admin"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"admin"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"admin"> | Date | string | null
    createdAt?: DateTimeFilter<"admin"> | Date | string
    createdBy?: IntNullableFilter<"admin"> | number | null
    createdByRole?: StringNullableFilter<"admin"> | string | null
    updatedAt?: DateTimeFilter<"admin"> | Date | string
    updatedBy?: IntNullableFilter<"admin"> | number | null
    updatedByRole?: StringNullableFilter<"admin"> | string | null
    deletedAt?: DateTimeNullableFilter<"admin"> | Date | string | null
    deletedBy?: IntNullableFilter<"admin"> | number | null
    deletedByRole?: StringNullableFilter<"admin"> | string | null
    permanentCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    permanentState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    permanentCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    staff?: AdminStaffListRelationFilter
    companyDetail?: XOR<CompanyDetailNullableScalarRelationFilter, companyDetailWhereInput> | null
    bankAccounts?: BankAccountListRelationFilter
    permissions?: AdminHasPermissionListRelationFilter
  }, "id" | "username">

  export type adminOrderByWithAggregationInput = {
    id?: SortOrder
    profilePicture?: SortOrderInput | SortOrder
    name?: SortOrder
    username?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrder
    referralCode?: SortOrderInput | SortOrder
    password?: SortOrder
    role?: SortOrder
    type?: SortOrder
    status?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    currentAddress?: SortOrderInput | SortOrder
    permanentAddress?: SortOrderInput | SortOrder
    permanentPostalCode?: SortOrderInput | SortOrder
    permanentCityId?: SortOrderInput | SortOrder
    permanentStateId?: SortOrderInput | SortOrder
    permanentCountryId?: SortOrderInput | SortOrder
    pr_token?: SortOrderInput | SortOrder
    pr_expires_at?: SortOrderInput | SortOrder
    pr_last_reset?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: adminCountOrderByAggregateInput
    _avg?: adminAvgOrderByAggregateInput
    _max?: adminMaxOrderByAggregateInput
    _min?: adminMinOrderByAggregateInput
    _sum?: adminSumOrderByAggregateInput
  }

  export type adminScalarWhereWithAggregatesInput = {
    AND?: adminScalarWhereWithAggregatesInput | adminScalarWhereWithAggregatesInput[]
    OR?: adminScalarWhereWithAggregatesInput[]
    NOT?: adminScalarWhereWithAggregatesInput | adminScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"admin"> | number
    profilePicture?: StringNullableWithAggregatesFilter<"admin"> | string | null
    name?: StringWithAggregatesFilter<"admin"> | string
    username?: StringNullableWithAggregatesFilter<"admin"> | string | null
    website?: StringNullableWithAggregatesFilter<"admin"> | string | null
    email?: StringWithAggregatesFilter<"admin"> | string
    referralCode?: StringNullableWithAggregatesFilter<"admin"> | string | null
    password?: StringWithAggregatesFilter<"admin"> | string
    role?: StringWithAggregatesFilter<"admin"> | string
    type?: StringWithAggregatesFilter<"admin"> | string
    status?: StringWithAggregatesFilter<"admin"> | string
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"admin"> | Date | string | null
    phoneNumber?: StringNullableWithAggregatesFilter<"admin"> | string | null
    currentAddress?: StringNullableWithAggregatesFilter<"admin"> | string | null
    permanentAddress?: StringNullableWithAggregatesFilter<"admin"> | string | null
    permanentPostalCode?: StringNullableWithAggregatesFilter<"admin"> | string | null
    permanentCityId?: BigIntNullableWithAggregatesFilter<"admin"> | bigint | number | null
    permanentStateId?: BigIntNullableWithAggregatesFilter<"admin"> | bigint | number | null
    permanentCountryId?: BigIntNullableWithAggregatesFilter<"admin"> | bigint | number | null
    pr_token?: StringNullableWithAggregatesFilter<"admin"> | string | null
    pr_expires_at?: DateTimeNullableWithAggregatesFilter<"admin"> | Date | string | null
    pr_last_reset?: DateTimeNullableWithAggregatesFilter<"admin"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"admin"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"admin"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"admin"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"admin"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"admin"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"admin"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"admin"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"admin"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"admin"> | string | null
  }

  export type permissionWhereInput = {
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    id?: IntFilter<"permission"> | number
    panel?: StringFilter<"permission"> | string
    module?: StringFilter<"permission"> | string
    action?: StringFilter<"permission"> | string
    status?: BoolFilter<"permission"> | boolean
    createdAt?: DateTimeFilter<"permission"> | Date | string
    createdBy?: IntNullableFilter<"permission"> | number | null
    createdByRole?: StringNullableFilter<"permission"> | string | null
    updatedAt?: DateTimeFilter<"permission"> | Date | string
    updatedBy?: IntNullableFilter<"permission"> | number | null
    updatedByRole?: StringNullableFilter<"permission"> | string | null
    deletedAt?: DateTimeNullableFilter<"permission"> | Date | string | null
    deletedBy?: IntNullableFilter<"permission"> | number | null
    deletedByRole?: StringNullableFilter<"permission"> | string | null
    adminPermissions?: AdminHasPermissionListRelationFilter
  }

  export type permissionOrderByWithRelationInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    action?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    adminPermissions?: adminHasPermissionOrderByRelationAggregateInput
    _relevance?: permissionOrderByRelevanceInput
  }

  export type permissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: permissionWhereInput | permissionWhereInput[]
    OR?: permissionWhereInput[]
    NOT?: permissionWhereInput | permissionWhereInput[]
    panel?: StringFilter<"permission"> | string
    module?: StringFilter<"permission"> | string
    action?: StringFilter<"permission"> | string
    status?: BoolFilter<"permission"> | boolean
    createdAt?: DateTimeFilter<"permission"> | Date | string
    createdBy?: IntNullableFilter<"permission"> | number | null
    createdByRole?: StringNullableFilter<"permission"> | string | null
    updatedAt?: DateTimeFilter<"permission"> | Date | string
    updatedBy?: IntNullableFilter<"permission"> | number | null
    updatedByRole?: StringNullableFilter<"permission"> | string | null
    deletedAt?: DateTimeNullableFilter<"permission"> | Date | string | null
    deletedBy?: IntNullableFilter<"permission"> | number | null
    deletedByRole?: StringNullableFilter<"permission"> | string | null
    adminPermissions?: AdminHasPermissionListRelationFilter
  }, "id">

  export type permissionOrderByWithAggregationInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    action?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: permissionCountOrderByAggregateInput
    _avg?: permissionAvgOrderByAggregateInput
    _max?: permissionMaxOrderByAggregateInput
    _min?: permissionMinOrderByAggregateInput
    _sum?: permissionSumOrderByAggregateInput
  }

  export type permissionScalarWhereWithAggregatesInput = {
    AND?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    OR?: permissionScalarWhereWithAggregatesInput[]
    NOT?: permissionScalarWhereWithAggregatesInput | permissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permission"> | number
    panel?: StringWithAggregatesFilter<"permission"> | string
    module?: StringWithAggregatesFilter<"permission"> | string
    action?: StringWithAggregatesFilter<"permission"> | string
    status?: BoolWithAggregatesFilter<"permission"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"permission"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"permission"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"permission"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"permission"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"permission"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"permission"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"permission"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"permission"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"permission"> | string | null
  }

  export type adminHasPermissionWhereInput = {
    AND?: adminHasPermissionWhereInput | adminHasPermissionWhereInput[]
    OR?: adminHasPermissionWhereInput[]
    NOT?: adminHasPermissionWhereInput | adminHasPermissionWhereInput[]
    id?: IntFilter<"adminHasPermission"> | number
    adminId?: IntFilter<"adminHasPermission"> | number
    permissionId?: IntFilter<"adminHasPermission"> | number
    createdAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    createdBy?: IntNullableFilter<"adminHasPermission"> | number | null
    createdByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    updatedAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    updatedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    updatedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminHasPermission"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    deletedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
  }

  export type adminHasPermissionOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    admin?: adminOrderByWithRelationInput
    permission?: permissionOrderByWithRelationInput
    _relevance?: adminHasPermissionOrderByRelevanceInput
  }

  export type adminHasPermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: adminHasPermissionWhereInput | adminHasPermissionWhereInput[]
    OR?: adminHasPermissionWhereInput[]
    NOT?: adminHasPermissionWhereInput | adminHasPermissionWhereInput[]
    adminId?: IntFilter<"adminHasPermission"> | number
    permissionId?: IntFilter<"adminHasPermission"> | number
    createdAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    createdBy?: IntNullableFilter<"adminHasPermission"> | number | null
    createdByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    updatedAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    updatedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    updatedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminHasPermission"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    deletedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, permissionWhereInput>
  }, "id">

  export type adminHasPermissionOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: adminHasPermissionCountOrderByAggregateInput
    _avg?: adminHasPermissionAvgOrderByAggregateInput
    _max?: adminHasPermissionMaxOrderByAggregateInput
    _min?: adminHasPermissionMinOrderByAggregateInput
    _sum?: adminHasPermissionSumOrderByAggregateInput
  }

  export type adminHasPermissionScalarWhereWithAggregatesInput = {
    AND?: adminHasPermissionScalarWhereWithAggregatesInput | adminHasPermissionScalarWhereWithAggregatesInput[]
    OR?: adminHasPermissionScalarWhereWithAggregatesInput[]
    NOT?: adminHasPermissionScalarWhereWithAggregatesInput | adminHasPermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"adminHasPermission"> | number
    adminId?: IntWithAggregatesFilter<"adminHasPermission"> | number
    permissionId?: IntWithAggregatesFilter<"adminHasPermission"> | number
    createdAt?: DateTimeWithAggregatesFilter<"adminHasPermission"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"adminHasPermission"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"adminHasPermission"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"adminHasPermission"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"adminHasPermission"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"adminHasPermission"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"adminHasPermission"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"adminHasPermission"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"adminHasPermission"> | string | null
  }

  export type companyDetailWhereInput = {
    AND?: companyDetailWhereInput | companyDetailWhereInput[]
    OR?: companyDetailWhereInput[]
    NOT?: companyDetailWhereInput | companyDetailWhereInput[]
    id?: IntFilter<"companyDetail"> | number
    adminId?: IntFilter<"companyDetail"> | number
    companyName?: StringNullableFilter<"companyDetail"> | string | null
    brandName?: StringNullableFilter<"companyDetail"> | string | null
    brandShortName?: StringNullableFilter<"companyDetail"> | string | null
    billingAddress?: StringNullableFilter<"companyDetail"> | string | null
    billingPincode?: StringNullableFilter<"companyDetail"> | string | null
    billingState?: StringNullableFilter<"companyDetail"> | string | null
    billingCity?: StringNullableFilter<"companyDetail"> | string | null
    businessType?: StringNullableFilter<"companyDetail"> | string | null
    clientEntryType?: StringNullableFilter<"companyDetail"> | string | null
    gstNumber?: StringNullableFilter<"companyDetail"> | string | null
    companyPanNumber?: StringNullableFilter<"companyDetail"> | string | null
    aadharNumber?: StringNullableFilter<"companyDetail"> | string | null
    gstDocument?: StringNullableFilter<"companyDetail"> | string | null
    panCardHolderName?: StringNullableFilter<"companyDetail"> | string | null
    aadharCardHolderName?: StringNullableFilter<"companyDetail"> | string | null
    panCardImage?: StringNullableFilter<"companyDetail"> | string | null
    aadharCardImage?: StringNullableFilter<"companyDetail"> | string | null
    additionalDocumentUpload?: StringNullableFilter<"companyDetail"> | string | null
    documentId?: StringNullableFilter<"companyDetail"> | string | null
    documentName?: StringNullableFilter<"companyDetail"> | string | null
    documentImage?: StringNullableFilter<"companyDetail"> | string | null
    createdAt?: DateTimeFilter<"companyDetail"> | Date | string
    createdBy?: IntNullableFilter<"companyDetail"> | number | null
    createdByRole?: StringNullableFilter<"companyDetail"> | string | null
    updatedAt?: DateTimeFilter<"companyDetail"> | Date | string
    updatedBy?: IntNullableFilter<"companyDetail"> | number | null
    updatedByRole?: StringNullableFilter<"companyDetail"> | string | null
    deletedAt?: DateTimeNullableFilter<"companyDetail"> | Date | string | null
    deletedBy?: IntNullableFilter<"companyDetail"> | number | null
    deletedByRole?: StringNullableFilter<"companyDetail"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }

  export type companyDetailOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    companyName?: SortOrderInput | SortOrder
    brandName?: SortOrderInput | SortOrder
    brandShortName?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    billingPincode?: SortOrderInput | SortOrder
    billingState?: SortOrderInput | SortOrder
    billingCity?: SortOrderInput | SortOrder
    businessType?: SortOrderInput | SortOrder
    clientEntryType?: SortOrderInput | SortOrder
    gstNumber?: SortOrderInput | SortOrder
    companyPanNumber?: SortOrderInput | SortOrder
    aadharNumber?: SortOrderInput | SortOrder
    gstDocument?: SortOrderInput | SortOrder
    panCardHolderName?: SortOrderInput | SortOrder
    aadharCardHolderName?: SortOrderInput | SortOrder
    panCardImage?: SortOrderInput | SortOrder
    aadharCardImage?: SortOrderInput | SortOrder
    additionalDocumentUpload?: SortOrderInput | SortOrder
    documentId?: SortOrderInput | SortOrder
    documentName?: SortOrderInput | SortOrder
    documentImage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    admin?: adminOrderByWithRelationInput
    _relevance?: companyDetailOrderByRelevanceInput
  }

  export type companyDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    adminId?: number
    AND?: companyDetailWhereInput | companyDetailWhereInput[]
    OR?: companyDetailWhereInput[]
    NOT?: companyDetailWhereInput | companyDetailWhereInput[]
    companyName?: StringNullableFilter<"companyDetail"> | string | null
    brandName?: StringNullableFilter<"companyDetail"> | string | null
    brandShortName?: StringNullableFilter<"companyDetail"> | string | null
    billingAddress?: StringNullableFilter<"companyDetail"> | string | null
    billingPincode?: StringNullableFilter<"companyDetail"> | string | null
    billingState?: StringNullableFilter<"companyDetail"> | string | null
    billingCity?: StringNullableFilter<"companyDetail"> | string | null
    businessType?: StringNullableFilter<"companyDetail"> | string | null
    clientEntryType?: StringNullableFilter<"companyDetail"> | string | null
    gstNumber?: StringNullableFilter<"companyDetail"> | string | null
    companyPanNumber?: StringNullableFilter<"companyDetail"> | string | null
    aadharNumber?: StringNullableFilter<"companyDetail"> | string | null
    gstDocument?: StringNullableFilter<"companyDetail"> | string | null
    panCardHolderName?: StringNullableFilter<"companyDetail"> | string | null
    aadharCardHolderName?: StringNullableFilter<"companyDetail"> | string | null
    panCardImage?: StringNullableFilter<"companyDetail"> | string | null
    aadharCardImage?: StringNullableFilter<"companyDetail"> | string | null
    additionalDocumentUpload?: StringNullableFilter<"companyDetail"> | string | null
    documentId?: StringNullableFilter<"companyDetail"> | string | null
    documentName?: StringNullableFilter<"companyDetail"> | string | null
    documentImage?: StringNullableFilter<"companyDetail"> | string | null
    createdAt?: DateTimeFilter<"companyDetail"> | Date | string
    createdBy?: IntNullableFilter<"companyDetail"> | number | null
    createdByRole?: StringNullableFilter<"companyDetail"> | string | null
    updatedAt?: DateTimeFilter<"companyDetail"> | Date | string
    updatedBy?: IntNullableFilter<"companyDetail"> | number | null
    updatedByRole?: StringNullableFilter<"companyDetail"> | string | null
    deletedAt?: DateTimeNullableFilter<"companyDetail"> | Date | string | null
    deletedBy?: IntNullableFilter<"companyDetail"> | number | null
    deletedByRole?: StringNullableFilter<"companyDetail"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }, "id" | "adminId">

  export type companyDetailOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    companyName?: SortOrderInput | SortOrder
    brandName?: SortOrderInput | SortOrder
    brandShortName?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    billingPincode?: SortOrderInput | SortOrder
    billingState?: SortOrderInput | SortOrder
    billingCity?: SortOrderInput | SortOrder
    businessType?: SortOrderInput | SortOrder
    clientEntryType?: SortOrderInput | SortOrder
    gstNumber?: SortOrderInput | SortOrder
    companyPanNumber?: SortOrderInput | SortOrder
    aadharNumber?: SortOrderInput | SortOrder
    gstDocument?: SortOrderInput | SortOrder
    panCardHolderName?: SortOrderInput | SortOrder
    aadharCardHolderName?: SortOrderInput | SortOrder
    panCardImage?: SortOrderInput | SortOrder
    aadharCardImage?: SortOrderInput | SortOrder
    additionalDocumentUpload?: SortOrderInput | SortOrder
    documentId?: SortOrderInput | SortOrder
    documentName?: SortOrderInput | SortOrder
    documentImage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: companyDetailCountOrderByAggregateInput
    _avg?: companyDetailAvgOrderByAggregateInput
    _max?: companyDetailMaxOrderByAggregateInput
    _min?: companyDetailMinOrderByAggregateInput
    _sum?: companyDetailSumOrderByAggregateInput
  }

  export type companyDetailScalarWhereWithAggregatesInput = {
    AND?: companyDetailScalarWhereWithAggregatesInput | companyDetailScalarWhereWithAggregatesInput[]
    OR?: companyDetailScalarWhereWithAggregatesInput[]
    NOT?: companyDetailScalarWhereWithAggregatesInput | companyDetailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"companyDetail"> | number
    adminId?: IntWithAggregatesFilter<"companyDetail"> | number
    companyName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    brandName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    brandShortName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    billingAddress?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    billingPincode?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    billingState?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    billingCity?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    businessType?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    clientEntryType?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    gstNumber?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    companyPanNumber?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    aadharNumber?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    gstDocument?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    panCardHolderName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    aadharCardHolderName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    panCardImage?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    aadharCardImage?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    additionalDocumentUpload?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    documentId?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    documentName?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    documentImage?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"companyDetail"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"companyDetail"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"companyDetail"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"companyDetail"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"companyDetail"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"companyDetail"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"companyDetail"> | string | null
  }

  export type bankAccountWhereInput = {
    AND?: bankAccountWhereInput | bankAccountWhereInput[]
    OR?: bankAccountWhereInput[]
    NOT?: bankAccountWhereInput | bankAccountWhereInput[]
    id?: IntFilter<"bankAccount"> | number
    adminId?: IntFilter<"bankAccount"> | number
    accountHolderName?: StringFilter<"bankAccount"> | string
    accountNumber?: StringFilter<"bankAccount"> | string
    bankName?: StringFilter<"bankAccount"> | string
    bankBranch?: StringFilter<"bankAccount"> | string
    accountType?: StringFilter<"bankAccount"> | string
    ifscCode?: StringFilter<"bankAccount"> | string
    cancelledChequeImage?: StringNullableFilter<"bankAccount"> | string | null
    paymentMethod?: StringNullableFilter<"bankAccount"> | string | null
    createdAt?: DateTimeFilter<"bankAccount"> | Date | string
    createdBy?: IntNullableFilter<"bankAccount"> | number | null
    createdByRole?: StringNullableFilter<"bankAccount"> | string | null
    updatedAt?: DateTimeFilter<"bankAccount"> | Date | string
    updatedBy?: IntNullableFilter<"bankAccount"> | number | null
    updatedByRole?: StringNullableFilter<"bankAccount"> | string | null
    deletedAt?: DateTimeNullableFilter<"bankAccount"> | Date | string | null
    deletedBy?: IntNullableFilter<"bankAccount"> | number | null
    deletedByRole?: StringNullableFilter<"bankAccount"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }

  export type bankAccountOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    accountHolderName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankBranch?: SortOrder
    accountType?: SortOrder
    ifscCode?: SortOrder
    cancelledChequeImage?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    admin?: adminOrderByWithRelationInput
    _relevance?: bankAccountOrderByRelevanceInput
  }

  export type bankAccountWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: bankAccountWhereInput | bankAccountWhereInput[]
    OR?: bankAccountWhereInput[]
    NOT?: bankAccountWhereInput | bankAccountWhereInput[]
    adminId?: IntFilter<"bankAccount"> | number
    accountHolderName?: StringFilter<"bankAccount"> | string
    accountNumber?: StringFilter<"bankAccount"> | string
    bankName?: StringFilter<"bankAccount"> | string
    bankBranch?: StringFilter<"bankAccount"> | string
    accountType?: StringFilter<"bankAccount"> | string
    ifscCode?: StringFilter<"bankAccount"> | string
    cancelledChequeImage?: StringNullableFilter<"bankAccount"> | string | null
    paymentMethod?: StringNullableFilter<"bankAccount"> | string | null
    createdAt?: DateTimeFilter<"bankAccount"> | Date | string
    createdBy?: IntNullableFilter<"bankAccount"> | number | null
    createdByRole?: StringNullableFilter<"bankAccount"> | string | null
    updatedAt?: DateTimeFilter<"bankAccount"> | Date | string
    updatedBy?: IntNullableFilter<"bankAccount"> | number | null
    updatedByRole?: StringNullableFilter<"bankAccount"> | string | null
    deletedAt?: DateTimeNullableFilter<"bankAccount"> | Date | string | null
    deletedBy?: IntNullableFilter<"bankAccount"> | number | null
    deletedByRole?: StringNullableFilter<"bankAccount"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }, "id">

  export type bankAccountOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    accountHolderName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankBranch?: SortOrder
    accountType?: SortOrder
    ifscCode?: SortOrder
    cancelledChequeImage?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: bankAccountCountOrderByAggregateInput
    _avg?: bankAccountAvgOrderByAggregateInput
    _max?: bankAccountMaxOrderByAggregateInput
    _min?: bankAccountMinOrderByAggregateInput
    _sum?: bankAccountSumOrderByAggregateInput
  }

  export type bankAccountScalarWhereWithAggregatesInput = {
    AND?: bankAccountScalarWhereWithAggregatesInput | bankAccountScalarWhereWithAggregatesInput[]
    OR?: bankAccountScalarWhereWithAggregatesInput[]
    NOT?: bankAccountScalarWhereWithAggregatesInput | bankAccountScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"bankAccount"> | number
    adminId?: IntWithAggregatesFilter<"bankAccount"> | number
    accountHolderName?: StringWithAggregatesFilter<"bankAccount"> | string
    accountNumber?: StringWithAggregatesFilter<"bankAccount"> | string
    bankName?: StringWithAggregatesFilter<"bankAccount"> | string
    bankBranch?: StringWithAggregatesFilter<"bankAccount"> | string
    accountType?: StringWithAggregatesFilter<"bankAccount"> | string
    ifscCode?: StringWithAggregatesFilter<"bankAccount"> | string
    cancelledChequeImage?: StringNullableWithAggregatesFilter<"bankAccount"> | string | null
    paymentMethod?: StringNullableWithAggregatesFilter<"bankAccount"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"bankAccount"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"bankAccount"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"bankAccount"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"bankAccount"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"bankAccount"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"bankAccount"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"bankAccount"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"bankAccount"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"bankAccount"> | string | null
  }

  export type adminStaffWhereInput = {
    AND?: adminStaffWhereInput | adminStaffWhereInput[]
    OR?: adminStaffWhereInput[]
    NOT?: adminStaffWhereInput | adminStaffWhereInput[]
    id?: IntFilter<"adminStaff"> | number
    admin_id?: IntFilter<"adminStaff"> | number
    name?: StringFilter<"adminStaff"> | string
    email?: StringFilter<"adminStaff"> | string
    password?: StringFilter<"adminStaff"> | string
    role?: StringFilter<"adminStaff"> | string
    status?: StringFilter<"adminStaff"> | string
    pr_token?: StringNullableFilter<"adminStaff"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"adminStaff"> | Date | string
    createdBy?: IntNullableFilter<"adminStaff"> | number | null
    createdByRole?: StringNullableFilter<"adminStaff"> | string | null
    updatedAt?: DateTimeFilter<"adminStaff"> | Date | string
    updatedBy?: IntNullableFilter<"adminStaff"> | number | null
    updatedByRole?: StringNullableFilter<"adminStaff"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminStaff"> | number | null
    deletedByRole?: StringNullableFilter<"adminStaff"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }

  export type adminStaffOrderByWithRelationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    status?: SortOrder
    pr_token?: SortOrderInput | SortOrder
    pr_expires_at?: SortOrderInput | SortOrder
    pr_last_reset?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    admin?: adminOrderByWithRelationInput
    _relevance?: adminStaffOrderByRelevanceInput
  }

  export type adminStaffWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    admin_id?: number
    email?: string
    AND?: adminStaffWhereInput | adminStaffWhereInput[]
    OR?: adminStaffWhereInput[]
    NOT?: adminStaffWhereInput | adminStaffWhereInput[]
    name?: StringFilter<"adminStaff"> | string
    password?: StringFilter<"adminStaff"> | string
    role?: StringFilter<"adminStaff"> | string
    status?: StringFilter<"adminStaff"> | string
    pr_token?: StringNullableFilter<"adminStaff"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"adminStaff"> | Date | string
    createdBy?: IntNullableFilter<"adminStaff"> | number | null
    createdByRole?: StringNullableFilter<"adminStaff"> | string | null
    updatedAt?: DateTimeFilter<"adminStaff"> | Date | string
    updatedBy?: IntNullableFilter<"adminStaff"> | number | null
    updatedByRole?: StringNullableFilter<"adminStaff"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminStaff"> | number | null
    deletedByRole?: StringNullableFilter<"adminStaff"> | string | null
    admin?: XOR<AdminScalarRelationFilter, adminWhereInput>
  }, "id" | "admin_id" | "email">

  export type adminStaffOrderByWithAggregationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    status?: SortOrder
    pr_token?: SortOrderInput | SortOrder
    pr_expires_at?: SortOrderInput | SortOrder
    pr_last_reset?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: adminStaffCountOrderByAggregateInput
    _avg?: adminStaffAvgOrderByAggregateInput
    _max?: adminStaffMaxOrderByAggregateInput
    _min?: adminStaffMinOrderByAggregateInput
    _sum?: adminStaffSumOrderByAggregateInput
  }

  export type adminStaffScalarWhereWithAggregatesInput = {
    AND?: adminStaffScalarWhereWithAggregatesInput | adminStaffScalarWhereWithAggregatesInput[]
    OR?: adminStaffScalarWhereWithAggregatesInput[]
    NOT?: adminStaffScalarWhereWithAggregatesInput | adminStaffScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"adminStaff"> | number
    admin_id?: IntWithAggregatesFilter<"adminStaff"> | number
    name?: StringWithAggregatesFilter<"adminStaff"> | string
    email?: StringWithAggregatesFilter<"adminStaff"> | string
    password?: StringWithAggregatesFilter<"adminStaff"> | string
    role?: StringWithAggregatesFilter<"adminStaff"> | string
    status?: StringWithAggregatesFilter<"adminStaff"> | string
    pr_token?: StringNullableWithAggregatesFilter<"adminStaff"> | string | null
    pr_expires_at?: DateTimeNullableWithAggregatesFilter<"adminStaff"> | Date | string | null
    pr_last_reset?: DateTimeNullableWithAggregatesFilter<"adminStaff"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"adminStaff"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"adminStaff"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"adminStaff"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"adminStaff"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"adminStaff"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"adminStaff"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"adminStaff"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"adminStaff"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"adminStaff"> | string | null
  }

  export type loginLogWhereInput = {
    AND?: loginLogWhereInput | loginLogWhereInput[]
    OR?: loginLogWhereInput[]
    NOT?: loginLogWhereInput | loginLogWhereInput[]
    id?: IntFilter<"loginLog"> | number
    adminId?: IntFilter<"loginLog"> | number
    adminRole?: StringFilter<"loginLog"> | string
    action?: StringFilter<"loginLog"> | string
    response?: StringNullableFilter<"loginLog"> | string | null
    ipv4?: StringNullableFilter<"loginLog"> | string | null
    ipv6?: StringNullableFilter<"loginLog"> | string | null
    internetServiceProvider?: StringNullableFilter<"loginLog"> | string | null
    clientInformation?: StringNullableFilter<"loginLog"> | string | null
    userAgent?: StringNullableFilter<"loginLog"> | string | null
    createdAt?: DateTimeFilter<"loginLog"> | Date | string
    createdBy?: IntNullableFilter<"loginLog"> | number | null
    createdByRole?: StringNullableFilter<"loginLog"> | string | null
    updatedAt?: DateTimeFilter<"loginLog"> | Date | string
    updatedBy?: IntNullableFilter<"loginLog"> | number | null
    updatedByRole?: StringNullableFilter<"loginLog"> | string | null
    deletedAt?: DateTimeNullableFilter<"loginLog"> | Date | string | null
    deletedBy?: IntNullableFilter<"loginLog"> | number | null
    deletedByRole?: StringNullableFilter<"loginLog"> | string | null
  }

  export type loginLogOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    action?: SortOrder
    response?: SortOrderInput | SortOrder
    ipv4?: SortOrderInput | SortOrder
    ipv6?: SortOrderInput | SortOrder
    internetServiceProvider?: SortOrderInput | SortOrder
    clientInformation?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _relevance?: loginLogOrderByRelevanceInput
  }

  export type loginLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: loginLogWhereInput | loginLogWhereInput[]
    OR?: loginLogWhereInput[]
    NOT?: loginLogWhereInput | loginLogWhereInput[]
    adminId?: IntFilter<"loginLog"> | number
    adminRole?: StringFilter<"loginLog"> | string
    action?: StringFilter<"loginLog"> | string
    response?: StringNullableFilter<"loginLog"> | string | null
    ipv4?: StringNullableFilter<"loginLog"> | string | null
    ipv6?: StringNullableFilter<"loginLog"> | string | null
    internetServiceProvider?: StringNullableFilter<"loginLog"> | string | null
    clientInformation?: StringNullableFilter<"loginLog"> | string | null
    userAgent?: StringNullableFilter<"loginLog"> | string | null
    createdAt?: DateTimeFilter<"loginLog"> | Date | string
    createdBy?: IntNullableFilter<"loginLog"> | number | null
    createdByRole?: StringNullableFilter<"loginLog"> | string | null
    updatedAt?: DateTimeFilter<"loginLog"> | Date | string
    updatedBy?: IntNullableFilter<"loginLog"> | number | null
    updatedByRole?: StringNullableFilter<"loginLog"> | string | null
    deletedAt?: DateTimeNullableFilter<"loginLog"> | Date | string | null
    deletedBy?: IntNullableFilter<"loginLog"> | number | null
    deletedByRole?: StringNullableFilter<"loginLog"> | string | null
  }, "id">

  export type loginLogOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    action?: SortOrder
    response?: SortOrderInput | SortOrder
    ipv4?: SortOrderInput | SortOrder
    ipv6?: SortOrderInput | SortOrder
    internetServiceProvider?: SortOrderInput | SortOrder
    clientInformation?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: loginLogCountOrderByAggregateInput
    _avg?: loginLogAvgOrderByAggregateInput
    _max?: loginLogMaxOrderByAggregateInput
    _min?: loginLogMinOrderByAggregateInput
    _sum?: loginLogSumOrderByAggregateInput
  }

  export type loginLogScalarWhereWithAggregatesInput = {
    AND?: loginLogScalarWhereWithAggregatesInput | loginLogScalarWhereWithAggregatesInput[]
    OR?: loginLogScalarWhereWithAggregatesInput[]
    NOT?: loginLogScalarWhereWithAggregatesInput | loginLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"loginLog"> | number
    adminId?: IntWithAggregatesFilter<"loginLog"> | number
    adminRole?: StringWithAggregatesFilter<"loginLog"> | string
    action?: StringWithAggregatesFilter<"loginLog"> | string
    response?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    ipv4?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    ipv6?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    internetServiceProvider?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    clientInformation?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"loginLog"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"loginLog"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"loginLog"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"loginLog"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"loginLog"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"loginLog"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"loginLog"> | string | null
  }

  export type activityLogWhereInput = {
    AND?: activityLogWhereInput | activityLogWhereInput[]
    OR?: activityLogWhereInput[]
    NOT?: activityLogWhereInput | activityLogWhereInput[]
    id?: IntFilter<"activityLog"> | number
    adminId?: IntFilter<"activityLog"> | number
    adminRole?: StringFilter<"activityLog"> | string
    module?: StringFilter<"activityLog"> | string
    action?: StringFilter<"activityLog"> | string
    endpoint?: StringFilter<"activityLog"> | string
    method?: StringFilter<"activityLog"> | string
    payload?: StringNullableFilter<"activityLog"> | string | null
    response?: StringNullableFilter<"activityLog"> | string | null
    result?: BoolFilter<"activityLog"> | boolean
    data?: StringNullableFilter<"activityLog"> | string | null
    ipv4?: StringNullableFilter<"activityLog"> | string | null
    ipv6?: StringNullableFilter<"activityLog"> | string | null
    internetServiceProvider?: StringNullableFilter<"activityLog"> | string | null
    clientInformation?: StringNullableFilter<"activityLog"> | string | null
    userAgent?: StringNullableFilter<"activityLog"> | string | null
    createdAt?: DateTimeFilter<"activityLog"> | Date | string
    createdBy?: IntNullableFilter<"activityLog"> | number | null
    createdByRole?: StringNullableFilter<"activityLog"> | string | null
    updatedAt?: DateTimeFilter<"activityLog"> | Date | string
    updatedBy?: IntNullableFilter<"activityLog"> | number | null
    updatedByRole?: StringNullableFilter<"activityLog"> | string | null
    deletedAt?: DateTimeNullableFilter<"activityLog"> | Date | string | null
    deletedBy?: IntNullableFilter<"activityLog"> | number | null
    deletedByRole?: StringNullableFilter<"activityLog"> | string | null
  }

  export type activityLogOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    module?: SortOrder
    action?: SortOrder
    endpoint?: SortOrder
    method?: SortOrder
    payload?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    result?: SortOrder
    data?: SortOrderInput | SortOrder
    ipv4?: SortOrderInput | SortOrder
    ipv6?: SortOrderInput | SortOrder
    internetServiceProvider?: SortOrderInput | SortOrder
    clientInformation?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _relevance?: activityLogOrderByRelevanceInput
  }

  export type activityLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: activityLogWhereInput | activityLogWhereInput[]
    OR?: activityLogWhereInput[]
    NOT?: activityLogWhereInput | activityLogWhereInput[]
    adminId?: IntFilter<"activityLog"> | number
    adminRole?: StringFilter<"activityLog"> | string
    module?: StringFilter<"activityLog"> | string
    action?: StringFilter<"activityLog"> | string
    endpoint?: StringFilter<"activityLog"> | string
    method?: StringFilter<"activityLog"> | string
    payload?: StringNullableFilter<"activityLog"> | string | null
    response?: StringNullableFilter<"activityLog"> | string | null
    result?: BoolFilter<"activityLog"> | boolean
    data?: StringNullableFilter<"activityLog"> | string | null
    ipv4?: StringNullableFilter<"activityLog"> | string | null
    ipv6?: StringNullableFilter<"activityLog"> | string | null
    internetServiceProvider?: StringNullableFilter<"activityLog"> | string | null
    clientInformation?: StringNullableFilter<"activityLog"> | string | null
    userAgent?: StringNullableFilter<"activityLog"> | string | null
    createdAt?: DateTimeFilter<"activityLog"> | Date | string
    createdBy?: IntNullableFilter<"activityLog"> | number | null
    createdByRole?: StringNullableFilter<"activityLog"> | string | null
    updatedAt?: DateTimeFilter<"activityLog"> | Date | string
    updatedBy?: IntNullableFilter<"activityLog"> | number | null
    updatedByRole?: StringNullableFilter<"activityLog"> | string | null
    deletedAt?: DateTimeNullableFilter<"activityLog"> | Date | string | null
    deletedBy?: IntNullableFilter<"activityLog"> | number | null
    deletedByRole?: StringNullableFilter<"activityLog"> | string | null
  }, "id">

  export type activityLogOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    module?: SortOrder
    action?: SortOrder
    endpoint?: SortOrder
    method?: SortOrder
    payload?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    result?: SortOrder
    data?: SortOrderInput | SortOrder
    ipv4?: SortOrderInput | SortOrder
    ipv6?: SortOrderInput | SortOrder
    internetServiceProvider?: SortOrderInput | SortOrder
    clientInformation?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: activityLogCountOrderByAggregateInput
    _avg?: activityLogAvgOrderByAggregateInput
    _max?: activityLogMaxOrderByAggregateInput
    _min?: activityLogMinOrderByAggregateInput
    _sum?: activityLogSumOrderByAggregateInput
  }

  export type activityLogScalarWhereWithAggregatesInput = {
    AND?: activityLogScalarWhereWithAggregatesInput | activityLogScalarWhereWithAggregatesInput[]
    OR?: activityLogScalarWhereWithAggregatesInput[]
    NOT?: activityLogScalarWhereWithAggregatesInput | activityLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"activityLog"> | number
    adminId?: IntWithAggregatesFilter<"activityLog"> | number
    adminRole?: StringWithAggregatesFilter<"activityLog"> | string
    module?: StringWithAggregatesFilter<"activityLog"> | string
    action?: StringWithAggregatesFilter<"activityLog"> | string
    endpoint?: StringWithAggregatesFilter<"activityLog"> | string
    method?: StringWithAggregatesFilter<"activityLog"> | string
    payload?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    response?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    result?: BoolWithAggregatesFilter<"activityLog"> | boolean
    data?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    ipv4?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    ipv6?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    internetServiceProvider?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    clientInformation?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"activityLog"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"activityLog"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"activityLog"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"activityLog"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"activityLog"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"activityLog"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"activityLog"> | string | null
  }

  export type countryWhereInput = {
    AND?: countryWhereInput | countryWhereInput[]
    OR?: countryWhereInput[]
    NOT?: countryWhereInput | countryWhereInput[]
    id?: BigIntFilter<"country"> | bigint | number
    name?: StringFilter<"country"> | string
    iso3?: StringNullableFilter<"country"> | string | null
    iso2?: StringNullableFilter<"country"> | string | null
    phonecode?: StringNullableFilter<"country"> | string | null
    currency?: StringNullableFilter<"country"> | string | null
    currencyName?: StringNullableFilter<"country"> | string | null
    currencySymbol?: StringNullableFilter<"country"> | string | null
    nationality?: StringNullableFilter<"country"> | string | null
    createdAt?: DateTimeFilter<"country"> | Date | string
    createdBy?: IntNullableFilter<"country"> | number | null
    createdByRole?: StringNullableFilter<"country"> | string | null
    updatedAt?: DateTimeFilter<"country"> | Date | string
    updatedBy?: IntNullableFilter<"country"> | number | null
    updatedByRole?: StringNullableFilter<"country"> | string | null
    deletedAt?: DateTimeNullableFilter<"country"> | Date | string | null
    deletedBy?: IntNullableFilter<"country"> | number | null
    deletedByRole?: StringNullableFilter<"country"> | string | null
    states?: StateListRelationFilter
    cities?: CityListRelationFilter
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    originProducts?: ProductListRelationFilter
    shippingProducts?: ProductListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }

  export type countryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    iso3?: SortOrderInput | SortOrder
    iso2?: SortOrderInput | SortOrder
    phonecode?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    currencyName?: SortOrderInput | SortOrder
    currencySymbol?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    states?: stateOrderByRelationAggregateInput
    cities?: cityOrderByRelationAggregateInput
    warehouses?: warehouseOrderByRelationAggregateInput
    highRtos?: highRtoOrderByRelationAggregateInput
    admins?: adminOrderByRelationAggregateInput
    originProducts?: productOrderByRelationAggregateInput
    shippingProducts?: productOrderByRelationAggregateInput
    shippingOrders?: OrderOrderByRelationAggregateInput
    billingOrders?: OrderOrderByRelationAggregateInput
    _relevance?: countryOrderByRelevanceInput
  }

  export type countryWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: countryWhereInput | countryWhereInput[]
    OR?: countryWhereInput[]
    NOT?: countryWhereInput | countryWhereInput[]
    name?: StringFilter<"country"> | string
    iso3?: StringNullableFilter<"country"> | string | null
    iso2?: StringNullableFilter<"country"> | string | null
    phonecode?: StringNullableFilter<"country"> | string | null
    currency?: StringNullableFilter<"country"> | string | null
    currencyName?: StringNullableFilter<"country"> | string | null
    currencySymbol?: StringNullableFilter<"country"> | string | null
    nationality?: StringNullableFilter<"country"> | string | null
    createdAt?: DateTimeFilter<"country"> | Date | string
    createdBy?: IntNullableFilter<"country"> | number | null
    createdByRole?: StringNullableFilter<"country"> | string | null
    updatedAt?: DateTimeFilter<"country"> | Date | string
    updatedBy?: IntNullableFilter<"country"> | number | null
    updatedByRole?: StringNullableFilter<"country"> | string | null
    deletedAt?: DateTimeNullableFilter<"country"> | Date | string | null
    deletedBy?: IntNullableFilter<"country"> | number | null
    deletedByRole?: StringNullableFilter<"country"> | string | null
    states?: StateListRelationFilter
    cities?: CityListRelationFilter
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    originProducts?: ProductListRelationFilter
    shippingProducts?: ProductListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }, "id">

  export type countryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    iso3?: SortOrderInput | SortOrder
    iso2?: SortOrderInput | SortOrder
    phonecode?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    currencyName?: SortOrderInput | SortOrder
    currencySymbol?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: countryCountOrderByAggregateInput
    _avg?: countryAvgOrderByAggregateInput
    _max?: countryMaxOrderByAggregateInput
    _min?: countryMinOrderByAggregateInput
    _sum?: countrySumOrderByAggregateInput
  }

  export type countryScalarWhereWithAggregatesInput = {
    AND?: countryScalarWhereWithAggregatesInput | countryScalarWhereWithAggregatesInput[]
    OR?: countryScalarWhereWithAggregatesInput[]
    NOT?: countryScalarWhereWithAggregatesInput | countryScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"country"> | bigint | number
    name?: StringWithAggregatesFilter<"country"> | string
    iso3?: StringNullableWithAggregatesFilter<"country"> | string | null
    iso2?: StringNullableWithAggregatesFilter<"country"> | string | null
    phonecode?: StringNullableWithAggregatesFilter<"country"> | string | null
    currency?: StringNullableWithAggregatesFilter<"country"> | string | null
    currencyName?: StringNullableWithAggregatesFilter<"country"> | string | null
    currencySymbol?: StringNullableWithAggregatesFilter<"country"> | string | null
    nationality?: StringNullableWithAggregatesFilter<"country"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"country"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"country"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"country"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"country"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"country"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"country"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"country"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"country"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"country"> | string | null
  }

  export type stateWhereInput = {
    AND?: stateWhereInput | stateWhereInput[]
    OR?: stateWhereInput[]
    NOT?: stateWhereInput | stateWhereInput[]
    id?: BigIntFilter<"state"> | bigint | number
    name?: StringFilter<"state"> | string
    countryId?: BigIntFilter<"state"> | bigint | number
    iso2?: StringNullableFilter<"state"> | string | null
    type?: StringNullableFilter<"state"> | string | null
    createdAt?: DateTimeFilter<"state"> | Date | string
    createdBy?: IntNullableFilter<"state"> | number | null
    createdByRole?: StringNullableFilter<"state"> | string | null
    updatedAt?: DateTimeFilter<"state"> | Date | string
    updatedBy?: IntNullableFilter<"state"> | number | null
    updatedByRole?: StringNullableFilter<"state"> | string | null
    deletedAt?: DateTimeNullableFilter<"state"> | Date | string | null
    deletedBy?: IntNullableFilter<"state"> | number | null
    deletedByRole?: StringNullableFilter<"state"> | string | null
    country?: XOR<CountryScalarRelationFilter, countryWhereInput>
    cities?: CityListRelationFilter
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }

  export type stateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    iso2?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    country?: countryOrderByWithRelationInput
    cities?: cityOrderByRelationAggregateInput
    warehouses?: warehouseOrderByRelationAggregateInput
    highRtos?: highRtoOrderByRelationAggregateInput
    admins?: adminOrderByRelationAggregateInput
    shippingOrders?: OrderOrderByRelationAggregateInput
    billingOrders?: OrderOrderByRelationAggregateInput
    _relevance?: stateOrderByRelevanceInput
  }

  export type stateWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: stateWhereInput | stateWhereInput[]
    OR?: stateWhereInput[]
    NOT?: stateWhereInput | stateWhereInput[]
    name?: StringFilter<"state"> | string
    countryId?: BigIntFilter<"state"> | bigint | number
    iso2?: StringNullableFilter<"state"> | string | null
    type?: StringNullableFilter<"state"> | string | null
    createdAt?: DateTimeFilter<"state"> | Date | string
    createdBy?: IntNullableFilter<"state"> | number | null
    createdByRole?: StringNullableFilter<"state"> | string | null
    updatedAt?: DateTimeFilter<"state"> | Date | string
    updatedBy?: IntNullableFilter<"state"> | number | null
    updatedByRole?: StringNullableFilter<"state"> | string | null
    deletedAt?: DateTimeNullableFilter<"state"> | Date | string | null
    deletedBy?: IntNullableFilter<"state"> | number | null
    deletedByRole?: StringNullableFilter<"state"> | string | null
    country?: XOR<CountryScalarRelationFilter, countryWhereInput>
    cities?: CityListRelationFilter
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }, "id">

  export type stateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    iso2?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: stateCountOrderByAggregateInput
    _avg?: stateAvgOrderByAggregateInput
    _max?: stateMaxOrderByAggregateInput
    _min?: stateMinOrderByAggregateInput
    _sum?: stateSumOrderByAggregateInput
  }

  export type stateScalarWhereWithAggregatesInput = {
    AND?: stateScalarWhereWithAggregatesInput | stateScalarWhereWithAggregatesInput[]
    OR?: stateScalarWhereWithAggregatesInput[]
    NOT?: stateScalarWhereWithAggregatesInput | stateScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"state"> | bigint | number
    name?: StringWithAggregatesFilter<"state"> | string
    countryId?: BigIntWithAggregatesFilter<"state"> | bigint | number
    iso2?: StringNullableWithAggregatesFilter<"state"> | string | null
    type?: StringNullableWithAggregatesFilter<"state"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"state"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"state"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"state"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"state"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"state"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"state"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"state"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"state"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"state"> | string | null
  }

  export type cityWhereInput = {
    AND?: cityWhereInput | cityWhereInput[]
    OR?: cityWhereInput[]
    NOT?: cityWhereInput | cityWhereInput[]
    id?: BigIntFilter<"city"> | bigint | number
    name?: StringFilter<"city"> | string
    stateId?: BigIntFilter<"city"> | bigint | number
    countryId?: BigIntFilter<"city"> | bigint | number
    createdAt?: DateTimeFilter<"city"> | Date | string
    createdBy?: IntNullableFilter<"city"> | number | null
    createdByRole?: StringNullableFilter<"city"> | string | null
    updatedAt?: DateTimeFilter<"city"> | Date | string
    updatedBy?: IntNullableFilter<"city"> | number | null
    updatedByRole?: StringNullableFilter<"city"> | string | null
    deletedAt?: DateTimeNullableFilter<"city"> | Date | string | null
    deletedBy?: IntNullableFilter<"city"> | number | null
    deletedByRole?: StringNullableFilter<"city"> | string | null
    state?: XOR<StateScalarRelationFilter, stateWhereInput>
    country?: XOR<CountryScalarRelationFilter, countryWhereInput>
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }

  export type cityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    state?: stateOrderByWithRelationInput
    country?: countryOrderByWithRelationInput
    warehouses?: warehouseOrderByRelationAggregateInput
    highRtos?: highRtoOrderByRelationAggregateInput
    admins?: adminOrderByRelationAggregateInput
    shippingOrders?: OrderOrderByRelationAggregateInput
    billingOrders?: OrderOrderByRelationAggregateInput
    _relevance?: cityOrderByRelevanceInput
  }

  export type cityWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: cityWhereInput | cityWhereInput[]
    OR?: cityWhereInput[]
    NOT?: cityWhereInput | cityWhereInput[]
    name?: StringFilter<"city"> | string
    stateId?: BigIntFilter<"city"> | bigint | number
    countryId?: BigIntFilter<"city"> | bigint | number
    createdAt?: DateTimeFilter<"city"> | Date | string
    createdBy?: IntNullableFilter<"city"> | number | null
    createdByRole?: StringNullableFilter<"city"> | string | null
    updatedAt?: DateTimeFilter<"city"> | Date | string
    updatedBy?: IntNullableFilter<"city"> | number | null
    updatedByRole?: StringNullableFilter<"city"> | string | null
    deletedAt?: DateTimeNullableFilter<"city"> | Date | string | null
    deletedBy?: IntNullableFilter<"city"> | number | null
    deletedByRole?: StringNullableFilter<"city"> | string | null
    state?: XOR<StateScalarRelationFilter, stateWhereInput>
    country?: XOR<CountryScalarRelationFilter, countryWhereInput>
    warehouses?: WarehouseListRelationFilter
    highRtos?: HighRtoListRelationFilter
    admins?: AdminListRelationFilter
    shippingOrders?: OrderListRelationFilter
    billingOrders?: OrderListRelationFilter
  }, "id">

  export type cityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: cityCountOrderByAggregateInput
    _avg?: cityAvgOrderByAggregateInput
    _max?: cityMaxOrderByAggregateInput
    _min?: cityMinOrderByAggregateInput
    _sum?: citySumOrderByAggregateInput
  }

  export type cityScalarWhereWithAggregatesInput = {
    AND?: cityScalarWhereWithAggregatesInput | cityScalarWhereWithAggregatesInput[]
    OR?: cityScalarWhereWithAggregatesInput[]
    NOT?: cityScalarWhereWithAggregatesInput | cityScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"city"> | bigint | number
    name?: StringWithAggregatesFilter<"city"> | string
    stateId?: BigIntWithAggregatesFilter<"city"> | bigint | number
    countryId?: BigIntWithAggregatesFilter<"city"> | bigint | number
    createdAt?: DateTimeWithAggregatesFilter<"city"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"city"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"city"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"city"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"city"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"city"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"city"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"city"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"city"> | string | null
  }

  export type warehouseWhereInput = {
    AND?: warehouseWhereInput | warehouseWhereInput[]
    OR?: warehouseWhereInput[]
    NOT?: warehouseWhereInput | warehouseWhereInput[]
    id?: IntFilter<"warehouse"> | number
    name?: StringFilter<"warehouse"> | string
    slug?: StringFilter<"warehouse"> | string
    gst_number?: StringFilter<"warehouse"> | string
    contact_name?: StringFilter<"warehouse"> | string
    contact_number?: StringFilter<"warehouse"> | string
    address_line_1?: StringFilter<"warehouse"> | string
    address_line_2?: StringNullableFilter<"warehouse"> | string | null
    postal_code?: StringFilter<"warehouse"> | string
    countryId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    stateId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    cityId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    status?: BoolFilter<"warehouse"> | boolean
    createdAt?: DateTimeFilter<"warehouse"> | Date | string
    createdBy?: IntNullableFilter<"warehouse"> | number | null
    createdByRole?: StringNullableFilter<"warehouse"> | string | null
    updatedAt?: DateTimeFilter<"warehouse"> | Date | string
    updatedBy?: IntNullableFilter<"warehouse"> | number | null
    updatedByRole?: StringNullableFilter<"warehouse"> | string | null
    deletedAt?: DateTimeNullableFilter<"warehouse"> | Date | string | null
    deletedBy?: IntNullableFilter<"warehouse"> | number | null
    deletedByRole?: StringNullableFilter<"warehouse"> | string | null
    country?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    state?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    city?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
  }

  export type warehouseOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    gst_number?: SortOrder
    contact_name?: SortOrder
    contact_number?: SortOrder
    address_line_1?: SortOrder
    address_line_2?: SortOrderInput | SortOrder
    postal_code?: SortOrder
    countryId?: SortOrderInput | SortOrder
    stateId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    country?: countryOrderByWithRelationInput
    state?: stateOrderByWithRelationInput
    city?: cityOrderByWithRelationInput
    _relevance?: warehouseOrderByRelevanceInput
  }

  export type warehouseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    AND?: warehouseWhereInput | warehouseWhereInput[]
    OR?: warehouseWhereInput[]
    NOT?: warehouseWhereInput | warehouseWhereInput[]
    name?: StringFilter<"warehouse"> | string
    gst_number?: StringFilter<"warehouse"> | string
    contact_name?: StringFilter<"warehouse"> | string
    contact_number?: StringFilter<"warehouse"> | string
    address_line_1?: StringFilter<"warehouse"> | string
    address_line_2?: StringNullableFilter<"warehouse"> | string | null
    postal_code?: StringFilter<"warehouse"> | string
    countryId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    stateId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    cityId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    status?: BoolFilter<"warehouse"> | boolean
    createdAt?: DateTimeFilter<"warehouse"> | Date | string
    createdBy?: IntNullableFilter<"warehouse"> | number | null
    createdByRole?: StringNullableFilter<"warehouse"> | string | null
    updatedAt?: DateTimeFilter<"warehouse"> | Date | string
    updatedBy?: IntNullableFilter<"warehouse"> | number | null
    updatedByRole?: StringNullableFilter<"warehouse"> | string | null
    deletedAt?: DateTimeNullableFilter<"warehouse"> | Date | string | null
    deletedBy?: IntNullableFilter<"warehouse"> | number | null
    deletedByRole?: StringNullableFilter<"warehouse"> | string | null
    country?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    state?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    city?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
  }, "id" | "slug">

  export type warehouseOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    gst_number?: SortOrder
    contact_name?: SortOrder
    contact_number?: SortOrder
    address_line_1?: SortOrder
    address_line_2?: SortOrderInput | SortOrder
    postal_code?: SortOrder
    countryId?: SortOrderInput | SortOrder
    stateId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: warehouseCountOrderByAggregateInput
    _avg?: warehouseAvgOrderByAggregateInput
    _max?: warehouseMaxOrderByAggregateInput
    _min?: warehouseMinOrderByAggregateInput
    _sum?: warehouseSumOrderByAggregateInput
  }

  export type warehouseScalarWhereWithAggregatesInput = {
    AND?: warehouseScalarWhereWithAggregatesInput | warehouseScalarWhereWithAggregatesInput[]
    OR?: warehouseScalarWhereWithAggregatesInput[]
    NOT?: warehouseScalarWhereWithAggregatesInput | warehouseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"warehouse"> | number
    name?: StringWithAggregatesFilter<"warehouse"> | string
    slug?: StringWithAggregatesFilter<"warehouse"> | string
    gst_number?: StringWithAggregatesFilter<"warehouse"> | string
    contact_name?: StringWithAggregatesFilter<"warehouse"> | string
    contact_number?: StringWithAggregatesFilter<"warehouse"> | string
    address_line_1?: StringWithAggregatesFilter<"warehouse"> | string
    address_line_2?: StringNullableWithAggregatesFilter<"warehouse"> | string | null
    postal_code?: StringWithAggregatesFilter<"warehouse"> | string
    countryId?: BigIntNullableWithAggregatesFilter<"warehouse"> | bigint | number | null
    stateId?: BigIntNullableWithAggregatesFilter<"warehouse"> | bigint | number | null
    cityId?: BigIntNullableWithAggregatesFilter<"warehouse"> | bigint | number | null
    status?: BoolWithAggregatesFilter<"warehouse"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"warehouse"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"warehouse"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"warehouse"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"warehouse"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"warehouse"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"warehouse"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"warehouse"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"warehouse"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"warehouse"> | string | null
  }

  export type categoryWhereInput = {
    AND?: categoryWhereInput | categoryWhereInput[]
    OR?: categoryWhereInput[]
    NOT?: categoryWhereInput | categoryWhereInput[]
    id?: IntFilter<"category"> | number
    name?: StringFilter<"category"> | string
    slug?: StringFilter<"category"> | string
    description?: StringNullableFilter<"category"> | string | null
    image?: StringNullableFilter<"category"> | string | null
    status?: BoolFilter<"category"> | boolean
    createdAt?: DateTimeFilter<"category"> | Date | string
    createdBy?: IntNullableFilter<"category"> | number | null
    createdByRole?: StringNullableFilter<"category"> | string | null
    updatedAt?: DateTimeFilter<"category"> | Date | string
    updatedBy?: IntNullableFilter<"category"> | number | null
    updatedByRole?: StringNullableFilter<"category"> | string | null
    deletedAt?: DateTimeNullableFilter<"category"> | Date | string | null
    deletedBy?: IntNullableFilter<"category"> | number | null
    deletedByRole?: StringNullableFilter<"category"> | string | null
    products?: ProductListRelationFilter
    productRequests?: ProductRequestListRelationFilter
  }

  export type categoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    products?: productOrderByRelationAggregateInput
    productRequests?: productRequestOrderByRelationAggregateInput
    _relevance?: categoryOrderByRelevanceInput
  }

  export type categoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    AND?: categoryWhereInput | categoryWhereInput[]
    OR?: categoryWhereInput[]
    NOT?: categoryWhereInput | categoryWhereInput[]
    name?: StringFilter<"category"> | string
    description?: StringNullableFilter<"category"> | string | null
    image?: StringNullableFilter<"category"> | string | null
    status?: BoolFilter<"category"> | boolean
    createdAt?: DateTimeFilter<"category"> | Date | string
    createdBy?: IntNullableFilter<"category"> | number | null
    createdByRole?: StringNullableFilter<"category"> | string | null
    updatedAt?: DateTimeFilter<"category"> | Date | string
    updatedBy?: IntNullableFilter<"category"> | number | null
    updatedByRole?: StringNullableFilter<"category"> | string | null
    deletedAt?: DateTimeNullableFilter<"category"> | Date | string | null
    deletedBy?: IntNullableFilter<"category"> | number | null
    deletedByRole?: StringNullableFilter<"category"> | string | null
    products?: ProductListRelationFilter
    productRequests?: ProductRequestListRelationFilter
  }, "id" | "slug">

  export type categoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: categoryCountOrderByAggregateInput
    _avg?: categoryAvgOrderByAggregateInput
    _max?: categoryMaxOrderByAggregateInput
    _min?: categoryMinOrderByAggregateInput
    _sum?: categorySumOrderByAggregateInput
  }

  export type categoryScalarWhereWithAggregatesInput = {
    AND?: categoryScalarWhereWithAggregatesInput | categoryScalarWhereWithAggregatesInput[]
    OR?: categoryScalarWhereWithAggregatesInput[]
    NOT?: categoryScalarWhereWithAggregatesInput | categoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"category"> | number
    name?: StringWithAggregatesFilter<"category"> | string
    slug?: StringWithAggregatesFilter<"category"> | string
    description?: StringNullableWithAggregatesFilter<"category"> | string | null
    image?: StringNullableWithAggregatesFilter<"category"> | string | null
    status?: BoolWithAggregatesFilter<"category"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"category"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"category"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"category"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"category"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"category"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"category"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"category"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"category"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"category"> | string | null
  }

  export type brandWhereInput = {
    AND?: brandWhereInput | brandWhereInput[]
    OR?: brandWhereInput[]
    NOT?: brandWhereInput | brandWhereInput[]
    id?: IntFilter<"brand"> | number
    name?: StringFilter<"brand"> | string
    slug?: StringFilter<"brand"> | string
    description?: StringNullableFilter<"brand"> | string | null
    image?: StringNullableFilter<"brand"> | string | null
    status?: BoolFilter<"brand"> | boolean
    createdAt?: DateTimeFilter<"brand"> | Date | string
    createdBy?: IntNullableFilter<"brand"> | number | null
    createdByRole?: StringNullableFilter<"brand"> | string | null
    updatedAt?: DateTimeFilter<"brand"> | Date | string
    updatedBy?: IntNullableFilter<"brand"> | number | null
    updatedByRole?: StringNullableFilter<"brand"> | string | null
    deletedAt?: DateTimeNullableFilter<"brand"> | Date | string | null
    deletedBy?: IntNullableFilter<"brand"> | number | null
    deletedByRole?: StringNullableFilter<"brand"> | string | null
    products?: ProductListRelationFilter
  }

  export type brandOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    products?: productOrderByRelationAggregateInput
    _relevance?: brandOrderByRelevanceInput
  }

  export type brandWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    AND?: brandWhereInput | brandWhereInput[]
    OR?: brandWhereInput[]
    NOT?: brandWhereInput | brandWhereInput[]
    name?: StringFilter<"brand"> | string
    description?: StringNullableFilter<"brand"> | string | null
    image?: StringNullableFilter<"brand"> | string | null
    status?: BoolFilter<"brand"> | boolean
    createdAt?: DateTimeFilter<"brand"> | Date | string
    createdBy?: IntNullableFilter<"brand"> | number | null
    createdByRole?: StringNullableFilter<"brand"> | string | null
    updatedAt?: DateTimeFilter<"brand"> | Date | string
    updatedBy?: IntNullableFilter<"brand"> | number | null
    updatedByRole?: StringNullableFilter<"brand"> | string | null
    deletedAt?: DateTimeNullableFilter<"brand"> | Date | string | null
    deletedBy?: IntNullableFilter<"brand"> | number | null
    deletedByRole?: StringNullableFilter<"brand"> | string | null
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type brandOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: brandCountOrderByAggregateInput
    _avg?: brandAvgOrderByAggregateInput
    _max?: brandMaxOrderByAggregateInput
    _min?: brandMinOrderByAggregateInput
    _sum?: brandSumOrderByAggregateInput
  }

  export type brandScalarWhereWithAggregatesInput = {
    AND?: brandScalarWhereWithAggregatesInput | brandScalarWhereWithAggregatesInput[]
    OR?: brandScalarWhereWithAggregatesInput[]
    NOT?: brandScalarWhereWithAggregatesInput | brandScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"brand"> | number
    name?: StringWithAggregatesFilter<"brand"> | string
    slug?: StringWithAggregatesFilter<"brand"> | string
    description?: StringNullableWithAggregatesFilter<"brand"> | string | null
    image?: StringNullableWithAggregatesFilter<"brand"> | string | null
    status?: BoolWithAggregatesFilter<"brand"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"brand"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"brand"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"brand"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"brand"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"brand"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"brand"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"brand"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"brand"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"brand"> | string | null
  }

  export type productRequestWhereInput = {
    AND?: productRequestWhereInput | productRequestWhereInput[]
    OR?: productRequestWhereInput[]
    NOT?: productRequestWhereInput | productRequestWhereInput[]
    id?: IntFilter<"productRequest"> | number
    name?: StringFilter<"productRequest"> | string
    categoryId?: IntFilter<"productRequest"> | number
    expectedPrice?: IntNullableFilter<"productRequest"> | number | null
    expectedDailyOrders?: StringNullableFilter<"productRequest"> | string | null
    url?: StringNullableFilter<"productRequest"> | string | null
    image?: StringNullableFilter<"productRequest"> | string | null
    status?: BoolFilter<"productRequest"> | boolean
    createdAt?: DateTimeFilter<"productRequest"> | Date | string
    createdBy?: IntNullableFilter<"productRequest"> | number | null
    createdByRole?: StringNullableFilter<"productRequest"> | string | null
    updatedAt?: DateTimeFilter<"productRequest"> | Date | string
    updatedBy?: IntNullableFilter<"productRequest"> | number | null
    updatedByRole?: StringNullableFilter<"productRequest"> | string | null
    deletedAt?: DateTimeNullableFilter<"productRequest"> | Date | string | null
    deletedBy?: IntNullableFilter<"productRequest"> | number | null
    deletedByRole?: StringNullableFilter<"productRequest"> | string | null
    category?: XOR<CategoryScalarRelationFilter, categoryWhereInput>
  }

  export type productRequestOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrderInput | SortOrder
    expectedDailyOrders?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    category?: categoryOrderByWithRelationInput
    _relevance?: productRequestOrderByRelevanceInput
  }

  export type productRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productRequestWhereInput | productRequestWhereInput[]
    OR?: productRequestWhereInput[]
    NOT?: productRequestWhereInput | productRequestWhereInput[]
    name?: StringFilter<"productRequest"> | string
    categoryId?: IntFilter<"productRequest"> | number
    expectedPrice?: IntNullableFilter<"productRequest"> | number | null
    expectedDailyOrders?: StringNullableFilter<"productRequest"> | string | null
    url?: StringNullableFilter<"productRequest"> | string | null
    image?: StringNullableFilter<"productRequest"> | string | null
    status?: BoolFilter<"productRequest"> | boolean
    createdAt?: DateTimeFilter<"productRequest"> | Date | string
    createdBy?: IntNullableFilter<"productRequest"> | number | null
    createdByRole?: StringNullableFilter<"productRequest"> | string | null
    updatedAt?: DateTimeFilter<"productRequest"> | Date | string
    updatedBy?: IntNullableFilter<"productRequest"> | number | null
    updatedByRole?: StringNullableFilter<"productRequest"> | string | null
    deletedAt?: DateTimeNullableFilter<"productRequest"> | Date | string | null
    deletedBy?: IntNullableFilter<"productRequest"> | number | null
    deletedByRole?: StringNullableFilter<"productRequest"> | string | null
    category?: XOR<CategoryScalarRelationFilter, categoryWhereInput>
  }, "id">

  export type productRequestOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrderInput | SortOrder
    expectedDailyOrders?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: productRequestCountOrderByAggregateInput
    _avg?: productRequestAvgOrderByAggregateInput
    _max?: productRequestMaxOrderByAggregateInput
    _min?: productRequestMinOrderByAggregateInput
    _sum?: productRequestSumOrderByAggregateInput
  }

  export type productRequestScalarWhereWithAggregatesInput = {
    AND?: productRequestScalarWhereWithAggregatesInput | productRequestScalarWhereWithAggregatesInput[]
    OR?: productRequestScalarWhereWithAggregatesInput[]
    NOT?: productRequestScalarWhereWithAggregatesInput | productRequestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"productRequest"> | number
    name?: StringWithAggregatesFilter<"productRequest"> | string
    categoryId?: IntWithAggregatesFilter<"productRequest"> | number
    expectedPrice?: IntNullableWithAggregatesFilter<"productRequest"> | number | null
    expectedDailyOrders?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
    url?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
    image?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
    status?: BoolWithAggregatesFilter<"productRequest"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"productRequest"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"productRequest"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"productRequest"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"productRequest"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"productRequest"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"productRequest"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"productRequest"> | string | null
  }

  export type productWhereInput = {
    AND?: productWhereInput | productWhereInput[]
    OR?: productWhereInput[]
    NOT?: productWhereInput | productWhereInput[]
    id?: IntFilter<"product"> | number
    categoryId?: IntFilter<"product"> | number
    name?: StringFilter<"product"> | string
    slug?: StringFilter<"product"> | string
    main_sku?: StringFilter<"product"> | string
    description?: StringNullableFilter<"product"> | string | null
    tags?: JsonNullableFilter<"product">
    brandId?: IntFilter<"product"> | number
    originCountryId?: BigIntFilter<"product"> | bigint | number
    ean?: StringNullableFilter<"product"> | string | null
    hsnCode?: StringNullableFilter<"product"> | string | null
    taxRate?: FloatNullableFilter<"product"> | number | null
    upc?: StringNullableFilter<"product"> | string | null
    rtoAddress?: StringNullableFilter<"product"> | string | null
    pickupAddress?: StringNullableFilter<"product"> | string | null
    shippingCountryId?: BigIntFilter<"product"> | bigint | number
    video_url?: StringNullableFilter<"product"> | string | null
    list_as?: StringNullableFilter<"product"> | string | null
    shipping_time?: StringNullableFilter<"product"> | string | null
    weight?: FloatNullableFilter<"product"> | number | null
    package_length?: FloatNullableFilter<"product"> | number | null
    package_width?: FloatNullableFilter<"product"> | number | null
    package_height?: FloatNullableFilter<"product"> | number | null
    chargeable_weight?: FloatNullableFilter<"product"> | number | null
    package_weight_image?: StringNullableFilter<"product"> | string | null
    package_length_image?: StringNullableFilter<"product"> | string | null
    package_width_image?: StringNullableFilter<"product"> | string | null
    package_height_image?: StringNullableFilter<"product"> | string | null
    product_detail_video?: StringNullableFilter<"product"> | string | null
    training_guidance_video?: StringNullableFilter<"product"> | string | null
    status?: BoolFilter<"product"> | boolean
    createdAt?: DateTimeFilter<"product"> | Date | string
    createdBy?: IntNullableFilter<"product"> | number | null
    createdByRole?: StringNullableFilter<"product"> | string | null
    updatedAt?: DateTimeFilter<"product"> | Date | string
    updatedBy?: IntNullableFilter<"product"> | number | null
    updatedByRole?: StringNullableFilter<"product"> | string | null
    deletedAt?: DateTimeNullableFilter<"product"> | Date | string | null
    deletedBy?: IntNullableFilter<"product"> | number | null
    deletedByRole?: StringNullableFilter<"product"> | string | null
    category?: XOR<CategoryScalarRelationFilter, categoryWhereInput>
    brand?: XOR<BrandScalarRelationFilter, brandWhereInput>
    originCountry?: XOR<CountryScalarRelationFilter, countryWhereInput>
    shippingCountry?: XOR<CountryScalarRelationFilter, countryWhereInput>
    variants?: ProductVariantListRelationFilter
    orderItems?: OrderItemListRelationFilter
  }

  export type productOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    main_sku?: SortOrder
    description?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    ean?: SortOrderInput | SortOrder
    hsnCode?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    upc?: SortOrderInput | SortOrder
    rtoAddress?: SortOrderInput | SortOrder
    pickupAddress?: SortOrderInput | SortOrder
    shippingCountryId?: SortOrder
    video_url?: SortOrderInput | SortOrder
    list_as?: SortOrderInput | SortOrder
    shipping_time?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    package_length?: SortOrderInput | SortOrder
    package_width?: SortOrderInput | SortOrder
    package_height?: SortOrderInput | SortOrder
    chargeable_weight?: SortOrderInput | SortOrder
    package_weight_image?: SortOrderInput | SortOrder
    package_length_image?: SortOrderInput | SortOrder
    package_width_image?: SortOrderInput | SortOrder
    package_height_image?: SortOrderInput | SortOrder
    product_detail_video?: SortOrderInput | SortOrder
    training_guidance_video?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    category?: categoryOrderByWithRelationInput
    brand?: brandOrderByWithRelationInput
    originCountry?: countryOrderByWithRelationInput
    shippingCountry?: countryOrderByWithRelationInput
    variants?: productVariantOrderByRelationAggregateInput
    orderItems?: OrderItemOrderByRelationAggregateInput
    _relevance?: productOrderByRelevanceInput
  }

  export type productWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    main_sku?: string
    AND?: productWhereInput | productWhereInput[]
    OR?: productWhereInput[]
    NOT?: productWhereInput | productWhereInput[]
    categoryId?: IntFilter<"product"> | number
    name?: StringFilter<"product"> | string
    description?: StringNullableFilter<"product"> | string | null
    tags?: JsonNullableFilter<"product">
    brandId?: IntFilter<"product"> | number
    originCountryId?: BigIntFilter<"product"> | bigint | number
    ean?: StringNullableFilter<"product"> | string | null
    hsnCode?: StringNullableFilter<"product"> | string | null
    taxRate?: FloatNullableFilter<"product"> | number | null
    upc?: StringNullableFilter<"product"> | string | null
    rtoAddress?: StringNullableFilter<"product"> | string | null
    pickupAddress?: StringNullableFilter<"product"> | string | null
    shippingCountryId?: BigIntFilter<"product"> | bigint | number
    video_url?: StringNullableFilter<"product"> | string | null
    list_as?: StringNullableFilter<"product"> | string | null
    shipping_time?: StringNullableFilter<"product"> | string | null
    weight?: FloatNullableFilter<"product"> | number | null
    package_length?: FloatNullableFilter<"product"> | number | null
    package_width?: FloatNullableFilter<"product"> | number | null
    package_height?: FloatNullableFilter<"product"> | number | null
    chargeable_weight?: FloatNullableFilter<"product"> | number | null
    package_weight_image?: StringNullableFilter<"product"> | string | null
    package_length_image?: StringNullableFilter<"product"> | string | null
    package_width_image?: StringNullableFilter<"product"> | string | null
    package_height_image?: StringNullableFilter<"product"> | string | null
    product_detail_video?: StringNullableFilter<"product"> | string | null
    training_guidance_video?: StringNullableFilter<"product"> | string | null
    status?: BoolFilter<"product"> | boolean
    createdAt?: DateTimeFilter<"product"> | Date | string
    createdBy?: IntNullableFilter<"product"> | number | null
    createdByRole?: StringNullableFilter<"product"> | string | null
    updatedAt?: DateTimeFilter<"product"> | Date | string
    updatedBy?: IntNullableFilter<"product"> | number | null
    updatedByRole?: StringNullableFilter<"product"> | string | null
    deletedAt?: DateTimeNullableFilter<"product"> | Date | string | null
    deletedBy?: IntNullableFilter<"product"> | number | null
    deletedByRole?: StringNullableFilter<"product"> | string | null
    category?: XOR<CategoryScalarRelationFilter, categoryWhereInput>
    brand?: XOR<BrandScalarRelationFilter, brandWhereInput>
    originCountry?: XOR<CountryScalarRelationFilter, countryWhereInput>
    shippingCountry?: XOR<CountryScalarRelationFilter, countryWhereInput>
    variants?: ProductVariantListRelationFilter
    orderItems?: OrderItemListRelationFilter
  }, "id" | "slug" | "main_sku">

  export type productOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    main_sku?: SortOrder
    description?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    ean?: SortOrderInput | SortOrder
    hsnCode?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    upc?: SortOrderInput | SortOrder
    rtoAddress?: SortOrderInput | SortOrder
    pickupAddress?: SortOrderInput | SortOrder
    shippingCountryId?: SortOrder
    video_url?: SortOrderInput | SortOrder
    list_as?: SortOrderInput | SortOrder
    shipping_time?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    package_length?: SortOrderInput | SortOrder
    package_width?: SortOrderInput | SortOrder
    package_height?: SortOrderInput | SortOrder
    chargeable_weight?: SortOrderInput | SortOrder
    package_weight_image?: SortOrderInput | SortOrder
    package_length_image?: SortOrderInput | SortOrder
    package_width_image?: SortOrderInput | SortOrder
    package_height_image?: SortOrderInput | SortOrder
    product_detail_video?: SortOrderInput | SortOrder
    training_guidance_video?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: productCountOrderByAggregateInput
    _avg?: productAvgOrderByAggregateInput
    _max?: productMaxOrderByAggregateInput
    _min?: productMinOrderByAggregateInput
    _sum?: productSumOrderByAggregateInput
  }

  export type productScalarWhereWithAggregatesInput = {
    AND?: productScalarWhereWithAggregatesInput | productScalarWhereWithAggregatesInput[]
    OR?: productScalarWhereWithAggregatesInput[]
    NOT?: productScalarWhereWithAggregatesInput | productScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product"> | number
    categoryId?: IntWithAggregatesFilter<"product"> | number
    name?: StringWithAggregatesFilter<"product"> | string
    slug?: StringWithAggregatesFilter<"product"> | string
    main_sku?: StringWithAggregatesFilter<"product"> | string
    description?: StringNullableWithAggregatesFilter<"product"> | string | null
    tags?: JsonNullableWithAggregatesFilter<"product">
    brandId?: IntWithAggregatesFilter<"product"> | number
    originCountryId?: BigIntWithAggregatesFilter<"product"> | bigint | number
    ean?: StringNullableWithAggregatesFilter<"product"> | string | null
    hsnCode?: StringNullableWithAggregatesFilter<"product"> | string | null
    taxRate?: FloatNullableWithAggregatesFilter<"product"> | number | null
    upc?: StringNullableWithAggregatesFilter<"product"> | string | null
    rtoAddress?: StringNullableWithAggregatesFilter<"product"> | string | null
    pickupAddress?: StringNullableWithAggregatesFilter<"product"> | string | null
    shippingCountryId?: BigIntWithAggregatesFilter<"product"> | bigint | number
    video_url?: StringNullableWithAggregatesFilter<"product"> | string | null
    list_as?: StringNullableWithAggregatesFilter<"product"> | string | null
    shipping_time?: StringNullableWithAggregatesFilter<"product"> | string | null
    weight?: FloatNullableWithAggregatesFilter<"product"> | number | null
    package_length?: FloatNullableWithAggregatesFilter<"product"> | number | null
    package_width?: FloatNullableWithAggregatesFilter<"product"> | number | null
    package_height?: FloatNullableWithAggregatesFilter<"product"> | number | null
    chargeable_weight?: FloatNullableWithAggregatesFilter<"product"> | number | null
    package_weight_image?: StringNullableWithAggregatesFilter<"product"> | string | null
    package_length_image?: StringNullableWithAggregatesFilter<"product"> | string | null
    package_width_image?: StringNullableWithAggregatesFilter<"product"> | string | null
    package_height_image?: StringNullableWithAggregatesFilter<"product"> | string | null
    product_detail_video?: StringNullableWithAggregatesFilter<"product"> | string | null
    training_guidance_video?: StringNullableWithAggregatesFilter<"product"> | string | null
    status?: BoolWithAggregatesFilter<"product"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"product"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"product"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"product"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"product"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"product"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"product"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"product"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"product"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"product"> | string | null
  }

  export type productVariantWhereInput = {
    AND?: productVariantWhereInput | productVariantWhereInput[]
    OR?: productVariantWhereInput[]
    NOT?: productVariantWhereInput | productVariantWhereInput[]
    id?: IntFilter<"productVariant"> | number
    productId?: IntFilter<"productVariant"> | number
    image?: StringFilter<"productVariant"> | string
    color?: StringFilter<"productVariant"> | string
    sku?: StringFilter<"productVariant"> | string
    qty?: IntFilter<"productVariant"> | number
    currency?: StringFilter<"productVariant"> | string
    article_id?: StringNullableFilter<"productVariant"> | string | null
    product_link?: StringNullableFilter<"productVariant"> | string | null
    suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    shipowl_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_price?: FloatNullableFilter<"productVariant"> | number | null
    createdAt?: DateTimeFilter<"productVariant"> | Date | string
    createdBy?: IntNullableFilter<"productVariant"> | number | null
    createdByRole?: StringNullableFilter<"productVariant"> | string | null
    updatedAt?: DateTimeFilter<"productVariant"> | Date | string
    updatedBy?: IntNullableFilter<"productVariant"> | number | null
    updatedByRole?: StringNullableFilter<"productVariant"> | string | null
    deletedAt?: DateTimeNullableFilter<"productVariant"> | Date | string | null
    deletedBy?: IntNullableFilter<"productVariant"> | number | null
    deletedByRole?: StringNullableFilter<"productVariant"> | string | null
    product?: XOR<ProductScalarRelationFilter, productWhereInput>
    orderItems?: OrderItemListRelationFilter
  }

  export type productVariantOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    image?: SortOrder
    color?: SortOrder
    sku?: SortOrder
    qty?: SortOrder
    currency?: SortOrder
    article_id?: SortOrderInput | SortOrder
    product_link?: SortOrderInput | SortOrder
    suggested_price?: SortOrderInput | SortOrder
    shipowl_price?: SortOrderInput | SortOrder
    rto_suggested_price?: SortOrderInput | SortOrder
    rto_price?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    product?: productOrderByWithRelationInput
    orderItems?: OrderItemOrderByRelationAggregateInput
    _relevance?: productVariantOrderByRelevanceInput
  }

  export type productVariantWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sku?: string
    AND?: productVariantWhereInput | productVariantWhereInput[]
    OR?: productVariantWhereInput[]
    NOT?: productVariantWhereInput | productVariantWhereInput[]
    productId?: IntFilter<"productVariant"> | number
    image?: StringFilter<"productVariant"> | string
    color?: StringFilter<"productVariant"> | string
    qty?: IntFilter<"productVariant"> | number
    currency?: StringFilter<"productVariant"> | string
    article_id?: StringNullableFilter<"productVariant"> | string | null
    product_link?: StringNullableFilter<"productVariant"> | string | null
    suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    shipowl_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_price?: FloatNullableFilter<"productVariant"> | number | null
    createdAt?: DateTimeFilter<"productVariant"> | Date | string
    createdBy?: IntNullableFilter<"productVariant"> | number | null
    createdByRole?: StringNullableFilter<"productVariant"> | string | null
    updatedAt?: DateTimeFilter<"productVariant"> | Date | string
    updatedBy?: IntNullableFilter<"productVariant"> | number | null
    updatedByRole?: StringNullableFilter<"productVariant"> | string | null
    deletedAt?: DateTimeNullableFilter<"productVariant"> | Date | string | null
    deletedBy?: IntNullableFilter<"productVariant"> | number | null
    deletedByRole?: StringNullableFilter<"productVariant"> | string | null
    product?: XOR<ProductScalarRelationFilter, productWhereInput>
    orderItems?: OrderItemListRelationFilter
  }, "id" | "sku">

  export type productVariantOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    image?: SortOrder
    color?: SortOrder
    sku?: SortOrder
    qty?: SortOrder
    currency?: SortOrder
    article_id?: SortOrderInput | SortOrder
    product_link?: SortOrderInput | SortOrder
    suggested_price?: SortOrderInput | SortOrder
    shipowl_price?: SortOrderInput | SortOrder
    rto_suggested_price?: SortOrderInput | SortOrder
    rto_price?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: productVariantCountOrderByAggregateInput
    _avg?: productVariantAvgOrderByAggregateInput
    _max?: productVariantMaxOrderByAggregateInput
    _min?: productVariantMinOrderByAggregateInput
    _sum?: productVariantSumOrderByAggregateInput
  }

  export type productVariantScalarWhereWithAggregatesInput = {
    AND?: productVariantScalarWhereWithAggregatesInput | productVariantScalarWhereWithAggregatesInput[]
    OR?: productVariantScalarWhereWithAggregatesInput[]
    NOT?: productVariantScalarWhereWithAggregatesInput | productVariantScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"productVariant"> | number
    productId?: IntWithAggregatesFilter<"productVariant"> | number
    image?: StringWithAggregatesFilter<"productVariant"> | string
    color?: StringWithAggregatesFilter<"productVariant"> | string
    sku?: StringWithAggregatesFilter<"productVariant"> | string
    qty?: IntWithAggregatesFilter<"productVariant"> | number
    currency?: StringWithAggregatesFilter<"productVariant"> | string
    article_id?: StringNullableWithAggregatesFilter<"productVariant"> | string | null
    product_link?: StringNullableWithAggregatesFilter<"productVariant"> | string | null
    suggested_price?: FloatNullableWithAggregatesFilter<"productVariant"> | number | null
    shipowl_price?: FloatNullableWithAggregatesFilter<"productVariant"> | number | null
    rto_suggested_price?: FloatNullableWithAggregatesFilter<"productVariant"> | number | null
    rto_price?: FloatNullableWithAggregatesFilter<"productVariant"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"productVariant"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"productVariant"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"productVariant"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"productVariant"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"productVariant"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"productVariant"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"productVariant"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"productVariant"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"productVariant"> | string | null
  }

  export type courierCompanyWhereInput = {
    AND?: courierCompanyWhereInput | courierCompanyWhereInput[]
    OR?: courierCompanyWhereInput[]
    NOT?: courierCompanyWhereInput | courierCompanyWhereInput[]
    id?: IntFilter<"courierCompany"> | number
    name?: StringFilter<"courierCompany"> | string
    slug?: StringFilter<"courierCompany"> | string
    code?: StringNullableFilter<"courierCompany"> | string | null
    website?: StringNullableFilter<"courierCompany"> | string | null
    email?: StringFilter<"courierCompany"> | string
    phoneNumber?: StringNullableFilter<"courierCompany"> | string | null
    status?: BoolFilter<"courierCompany"> | boolean
    createdAt?: DateTimeFilter<"courierCompany"> | Date | string
    createdBy?: IntNullableFilter<"courierCompany"> | number | null
    createdByRole?: StringNullableFilter<"courierCompany"> | string | null
    updatedAt?: DateTimeFilter<"courierCompany"> | Date | string
    updatedBy?: IntNullableFilter<"courierCompany"> | number | null
    updatedByRole?: StringNullableFilter<"courierCompany"> | string | null
    deletedAt?: DateTimeNullableFilter<"courierCompany"> | Date | string | null
    deletedBy?: IntNullableFilter<"courierCompany"> | number | null
    deletedByRole?: StringNullableFilter<"courierCompany"> | string | null
  }

  export type courierCompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    code?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _relevance?: courierCompanyOrderByRelevanceInput
  }

  export type courierCompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    code?: string
    AND?: courierCompanyWhereInput | courierCompanyWhereInput[]
    OR?: courierCompanyWhereInput[]
    NOT?: courierCompanyWhereInput | courierCompanyWhereInput[]
    name?: StringFilter<"courierCompany"> | string
    website?: StringNullableFilter<"courierCompany"> | string | null
    email?: StringFilter<"courierCompany"> | string
    phoneNumber?: StringNullableFilter<"courierCompany"> | string | null
    status?: BoolFilter<"courierCompany"> | boolean
    createdAt?: DateTimeFilter<"courierCompany"> | Date | string
    createdBy?: IntNullableFilter<"courierCompany"> | number | null
    createdByRole?: StringNullableFilter<"courierCompany"> | string | null
    updatedAt?: DateTimeFilter<"courierCompany"> | Date | string
    updatedBy?: IntNullableFilter<"courierCompany"> | number | null
    updatedByRole?: StringNullableFilter<"courierCompany"> | string | null
    deletedAt?: DateTimeNullableFilter<"courierCompany"> | Date | string | null
    deletedBy?: IntNullableFilter<"courierCompany"> | number | null
    deletedByRole?: StringNullableFilter<"courierCompany"> | string | null
  }, "id" | "slug" | "code">

  export type courierCompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    code?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    email?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: courierCompanyCountOrderByAggregateInput
    _avg?: courierCompanyAvgOrderByAggregateInput
    _max?: courierCompanyMaxOrderByAggregateInput
    _min?: courierCompanyMinOrderByAggregateInput
    _sum?: courierCompanySumOrderByAggregateInput
  }

  export type courierCompanyScalarWhereWithAggregatesInput = {
    AND?: courierCompanyScalarWhereWithAggregatesInput | courierCompanyScalarWhereWithAggregatesInput[]
    OR?: courierCompanyScalarWhereWithAggregatesInput[]
    NOT?: courierCompanyScalarWhereWithAggregatesInput | courierCompanyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"courierCompany"> | number
    name?: StringWithAggregatesFilter<"courierCompany"> | string
    slug?: StringWithAggregatesFilter<"courierCompany"> | string
    code?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
    website?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
    email?: StringWithAggregatesFilter<"courierCompany"> | string
    phoneNumber?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
    status?: BoolWithAggregatesFilter<"courierCompany"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"courierCompany"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"courierCompany"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"courierCompany"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"courierCompany"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"courierCompany"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"courierCompany"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"courierCompany"> | string | null
  }

  export type highRtoWhereInput = {
    AND?: highRtoWhereInput | highRtoWhereInput[]
    OR?: highRtoWhereInput[]
    NOT?: highRtoWhereInput | highRtoWhereInput[]
    id?: IntFilter<"highRto"> | number
    pincode?: StringFilter<"highRto"> | string
    countryId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    stateId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    cityId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    status?: BoolFilter<"highRto"> | boolean
    createdAt?: DateTimeFilter<"highRto"> | Date | string
    createdBy?: IntNullableFilter<"highRto"> | number | null
    createdByRole?: StringNullableFilter<"highRto"> | string | null
    updatedAt?: DateTimeFilter<"highRto"> | Date | string
    updatedBy?: IntNullableFilter<"highRto"> | number | null
    updatedByRole?: StringNullableFilter<"highRto"> | string | null
    deletedAt?: DateTimeNullableFilter<"highRto"> | Date | string | null
    deletedBy?: IntNullableFilter<"highRto"> | number | null
    deletedByRole?: StringNullableFilter<"highRto"> | string | null
    country?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    state?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    city?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
  }

  export type highRtoOrderByWithRelationInput = {
    id?: SortOrder
    pincode?: SortOrder
    countryId?: SortOrderInput | SortOrder
    stateId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    country?: countryOrderByWithRelationInput
    state?: stateOrderByWithRelationInput
    city?: cityOrderByWithRelationInput
    _relevance?: highRtoOrderByRelevanceInput
  }

  export type highRtoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: highRtoWhereInput | highRtoWhereInput[]
    OR?: highRtoWhereInput[]
    NOT?: highRtoWhereInput | highRtoWhereInput[]
    pincode?: StringFilter<"highRto"> | string
    countryId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    stateId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    cityId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    status?: BoolFilter<"highRto"> | boolean
    createdAt?: DateTimeFilter<"highRto"> | Date | string
    createdBy?: IntNullableFilter<"highRto"> | number | null
    createdByRole?: StringNullableFilter<"highRto"> | string | null
    updatedAt?: DateTimeFilter<"highRto"> | Date | string
    updatedBy?: IntNullableFilter<"highRto"> | number | null
    updatedByRole?: StringNullableFilter<"highRto"> | string | null
    deletedAt?: DateTimeNullableFilter<"highRto"> | Date | string | null
    deletedBy?: IntNullableFilter<"highRto"> | number | null
    deletedByRole?: StringNullableFilter<"highRto"> | string | null
    country?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    state?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    city?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
  }, "id">

  export type highRtoOrderByWithAggregationInput = {
    id?: SortOrder
    pincode?: SortOrder
    countryId?: SortOrderInput | SortOrder
    stateId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: highRtoCountOrderByAggregateInput
    _avg?: highRtoAvgOrderByAggregateInput
    _max?: highRtoMaxOrderByAggregateInput
    _min?: highRtoMinOrderByAggregateInput
    _sum?: highRtoSumOrderByAggregateInput
  }

  export type highRtoScalarWhereWithAggregatesInput = {
    AND?: highRtoScalarWhereWithAggregatesInput | highRtoScalarWhereWithAggregatesInput[]
    OR?: highRtoScalarWhereWithAggregatesInput[]
    NOT?: highRtoScalarWhereWithAggregatesInput | highRtoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"highRto"> | number
    pincode?: StringWithAggregatesFilter<"highRto"> | string
    countryId?: BigIntNullableWithAggregatesFilter<"highRto"> | bigint | number | null
    stateId?: BigIntNullableWithAggregatesFilter<"highRto"> | bigint | number | null
    cityId?: BigIntNullableWithAggregatesFilter<"highRto"> | bigint | number | null
    status?: BoolWithAggregatesFilter<"highRto"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"highRto"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"highRto"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"highRto"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"highRto"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"highRto"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"highRto"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"highRto"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"highRto"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"highRto"> | string | null
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: IntFilter<"Payment"> | number
    transactionId?: StringFilter<"Payment"> | string
    cycle?: StringNullableFilter<"Payment"> | string | null
    amount?: FloatNullableFilter<"Payment"> | number | null
    status?: StringNullableFilter<"Payment"> | string | null
    date?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    createdBy?: IntNullableFilter<"Payment"> | number | null
    createdByRole?: StringNullableFilter<"Payment"> | string | null
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    updatedBy?: IntNullableFilter<"Payment"> | number | null
    updatedByRole?: StringNullableFilter<"Payment"> | string | null
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    deletedBy?: IntNullableFilter<"Payment"> | number | null
    deletedByRole?: StringNullableFilter<"Payment"> | string | null
    orders?: OrderListRelationFilter
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    transactionId?: SortOrder
    cycle?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    orders?: OrderOrderByRelationAggregateInput
    _relevance?: PaymentOrderByRelevanceInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    transactionId?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    cycle?: StringNullableFilter<"Payment"> | string | null
    amount?: FloatNullableFilter<"Payment"> | number | null
    status?: StringNullableFilter<"Payment"> | string | null
    date?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    createdBy?: IntNullableFilter<"Payment"> | number | null
    createdByRole?: StringNullableFilter<"Payment"> | string | null
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    updatedBy?: IntNullableFilter<"Payment"> | number | null
    updatedByRole?: StringNullableFilter<"Payment"> | string | null
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    deletedBy?: IntNullableFilter<"Payment"> | number | null
    deletedByRole?: StringNullableFilter<"Payment"> | string | null
    orders?: OrderListRelationFilter
  }, "id" | "transactionId">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    transactionId?: SortOrder
    cycle?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Payment"> | number
    transactionId?: StringWithAggregatesFilter<"Payment"> | string
    cycle?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    amount?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    status?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"Payment"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"Payment"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"Payment"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"Payment"> | string | null
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: IntFilter<"Order"> | number
    orderNumber?: StringFilter<"Order"> | string
    status?: StringFilter<"Order"> | string
    orderNote?: StringNullableFilter<"Order"> | string | null
    subtotal?: FloatFilter<"Order"> | number
    tax?: FloatFilter<"Order"> | number
    discount?: FloatFilter<"Order"> | number
    totalAmount?: FloatFilter<"Order"> | number
    currency?: StringFilter<"Order"> | string
    shippingName?: StringFilter<"Order"> | string
    shippingPhone?: StringFilter<"Order"> | string
    shippingEmail?: StringFilter<"Order"> | string
    shippingAddress?: StringFilter<"Order"> | string
    shippingZip?: StringFilter<"Order"> | string
    shippingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingName?: StringFilter<"Order"> | string
    billingPhone?: StringFilter<"Order"> | string
    billingEmail?: StringFilter<"Order"> | string
    billingAddress?: StringFilter<"Order"> | string
    billingZip?: StringFilter<"Order"> | string
    billingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    paymentId?: IntNullableFilter<"Order"> | number | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: IntNullableFilter<"Order"> | number | null
    createdByRole?: StringNullableFilter<"Order"> | string | null
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: IntNullableFilter<"Order"> | number | null
    updatedByRole?: StringNullableFilter<"Order"> | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: IntNullableFilter<"Order"> | number | null
    deletedByRole?: StringNullableFilter<"Order"> | string | null
    shippingCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    shippingState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    shippingCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    billingCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    billingState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    billingCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    items?: OrderItemListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    orderNote?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    shippingName?: SortOrder
    shippingPhone?: SortOrder
    shippingEmail?: SortOrder
    shippingAddress?: SortOrder
    shippingZip?: SortOrder
    shippingCountryId?: SortOrderInput | SortOrder
    shippingStateId?: SortOrderInput | SortOrder
    shippingCityId?: SortOrderInput | SortOrder
    billingName?: SortOrder
    billingPhone?: SortOrder
    billingEmail?: SortOrder
    billingAddress?: SortOrder
    billingZip?: SortOrder
    billingCountryId?: SortOrderInput | SortOrder
    billingStateId?: SortOrderInput | SortOrder
    billingCityId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    shippingCountry?: countryOrderByWithRelationInput
    shippingState?: stateOrderByWithRelationInput
    shippingCity?: cityOrderByWithRelationInput
    billingCountry?: countryOrderByWithRelationInput
    billingState?: stateOrderByWithRelationInput
    billingCity?: cityOrderByWithRelationInput
    payment?: PaymentOrderByWithRelationInput
    items?: OrderItemOrderByRelationAggregateInput
    _relevance?: OrderOrderByRelevanceInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    status?: StringFilter<"Order"> | string
    orderNote?: StringNullableFilter<"Order"> | string | null
    subtotal?: FloatFilter<"Order"> | number
    tax?: FloatFilter<"Order"> | number
    discount?: FloatFilter<"Order"> | number
    totalAmount?: FloatFilter<"Order"> | number
    currency?: StringFilter<"Order"> | string
    shippingName?: StringFilter<"Order"> | string
    shippingPhone?: StringFilter<"Order"> | string
    shippingEmail?: StringFilter<"Order"> | string
    shippingAddress?: StringFilter<"Order"> | string
    shippingZip?: StringFilter<"Order"> | string
    shippingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingName?: StringFilter<"Order"> | string
    billingPhone?: StringFilter<"Order"> | string
    billingEmail?: StringFilter<"Order"> | string
    billingAddress?: StringFilter<"Order"> | string
    billingZip?: StringFilter<"Order"> | string
    billingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    paymentId?: IntNullableFilter<"Order"> | number | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: IntNullableFilter<"Order"> | number | null
    createdByRole?: StringNullableFilter<"Order"> | string | null
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: IntNullableFilter<"Order"> | number | null
    updatedByRole?: StringNullableFilter<"Order"> | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: IntNullableFilter<"Order"> | number | null
    deletedByRole?: StringNullableFilter<"Order"> | string | null
    shippingCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    shippingState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    shippingCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    billingCountry?: XOR<CountryNullableScalarRelationFilter, countryWhereInput> | null
    billingState?: XOR<StateNullableScalarRelationFilter, stateWhereInput> | null
    billingCity?: XOR<CityNullableScalarRelationFilter, cityWhereInput> | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    items?: OrderItemListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    orderNote?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    shippingName?: SortOrder
    shippingPhone?: SortOrder
    shippingEmail?: SortOrder
    shippingAddress?: SortOrder
    shippingZip?: SortOrder
    shippingCountryId?: SortOrderInput | SortOrder
    shippingStateId?: SortOrderInput | SortOrder
    shippingCityId?: SortOrderInput | SortOrder
    billingName?: SortOrder
    billingPhone?: SortOrder
    billingEmail?: SortOrder
    billingAddress?: SortOrder
    billingZip?: SortOrder
    billingCountryId?: SortOrderInput | SortOrder
    billingStateId?: SortOrderInput | SortOrder
    billingCityId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdByRole?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedByRole?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    deletedByRole?: SortOrderInput | SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Order"> | number
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    status?: StringWithAggregatesFilter<"Order"> | string
    orderNote?: StringNullableWithAggregatesFilter<"Order"> | string | null
    subtotal?: FloatWithAggregatesFilter<"Order"> | number
    tax?: FloatWithAggregatesFilter<"Order"> | number
    discount?: FloatWithAggregatesFilter<"Order"> | number
    totalAmount?: FloatWithAggregatesFilter<"Order"> | number
    currency?: StringWithAggregatesFilter<"Order"> | string
    shippingName?: StringWithAggregatesFilter<"Order"> | string
    shippingPhone?: StringWithAggregatesFilter<"Order"> | string
    shippingEmail?: StringWithAggregatesFilter<"Order"> | string
    shippingAddress?: StringWithAggregatesFilter<"Order"> | string
    shippingZip?: StringWithAggregatesFilter<"Order"> | string
    shippingCountryId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    shippingStateId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    shippingCityId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    billingName?: StringWithAggregatesFilter<"Order"> | string
    billingPhone?: StringWithAggregatesFilter<"Order"> | string
    billingEmail?: StringWithAggregatesFilter<"Order"> | string
    billingAddress?: StringWithAggregatesFilter<"Order"> | string
    billingZip?: StringWithAggregatesFilter<"Order"> | string
    billingCountryId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    billingStateId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    billingCityId?: BigIntNullableWithAggregatesFilter<"Order"> | bigint | number | null
    paymentId?: IntNullableWithAggregatesFilter<"Order"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    createdBy?: IntNullableWithAggregatesFilter<"Order"> | number | null
    createdByRole?: StringNullableWithAggregatesFilter<"Order"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"Order"> | number | null
    updatedByRole?: StringNullableWithAggregatesFilter<"Order"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deletedBy?: IntNullableWithAggregatesFilter<"Order"> | number | null
    deletedByRole?: StringNullableWithAggregatesFilter<"Order"> | string | null
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: IntFilter<"OrderItem"> | number
    orderId?: IntFilter<"OrderItem"> | number
    productId?: IntNullableFilter<"OrderItem"> | number | null
    variantId?: IntNullableFilter<"OrderItem"> | number | null
    quantity?: IntFilter<"OrderItem"> | number
    price?: FloatFilter<"OrderItem"> | number
    total?: FloatFilter<"OrderItem"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    product?: XOR<ProductNullableScalarRelationFilter, productWhereInput> | null
    variant?: XOR<ProductVariantNullableScalarRelationFilter, productVariantWhereInput> | null
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrderInput | SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
    order?: OrderOrderByWithRelationInput
    product?: productOrderByWithRelationInput
    variant?: productVariantOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: IntFilter<"OrderItem"> | number
    productId?: IntNullableFilter<"OrderItem"> | number | null
    variantId?: IntNullableFilter<"OrderItem"> | number | null
    quantity?: IntFilter<"OrderItem"> | number
    price?: FloatFilter<"OrderItem"> | number
    total?: FloatFilter<"OrderItem"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    product?: XOR<ProductNullableScalarRelationFilter, productWhereInput> | null
    variant?: XOR<ProductVariantNullableScalarRelationFilter, productVariantWhereInput> | null
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrderInput | SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderItem"> | number
    orderId?: IntWithAggregatesFilter<"OrderItem"> | number
    productId?: IntNullableWithAggregatesFilter<"OrderItem"> | number | null
    variantId?: IntNullableWithAggregatesFilter<"OrderItem"> | number | null
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    price?: FloatWithAggregatesFilter<"OrderItem"> | number
    total?: FloatWithAggregatesFilter<"OrderItem"> | number
  }

  export type emailConfigCreateInput = {
    id?: bigint | number
    panel: string
    module: string
    subject: string
    action: string
    html_template?: string | null
    smtp_host: string
    smtp_secure: boolean
    smtp_port: number
    smtp_username: string
    smtp_password: string
    from_email: string
    from_name: string
    status: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
  }

  export type emailConfigUncheckedCreateInput = {
    id?: bigint | number
    panel: string
    module: string
    subject: string
    action: string
    html_template?: string | null
    smtp_host: string
    smtp_secure: boolean
    smtp_port: number
    smtp_username: string
    smtp_password: string
    from_email: string
    from_name: string
    status: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
  }

  export type emailConfigUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    html_template?: NullableStringFieldUpdateOperationsInput | string | null
    smtp_host?: StringFieldUpdateOperationsInput | string
    smtp_secure?: BoolFieldUpdateOperationsInput | boolean
    smtp_port?: IntFieldUpdateOperationsInput | number
    smtp_username?: StringFieldUpdateOperationsInput | string
    smtp_password?: StringFieldUpdateOperationsInput | string
    from_email?: StringFieldUpdateOperationsInput | string
    from_name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type emailConfigUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    html_template?: NullableStringFieldUpdateOperationsInput | string | null
    smtp_host?: StringFieldUpdateOperationsInput | string
    smtp_secure?: BoolFieldUpdateOperationsInput | boolean
    smtp_port?: IntFieldUpdateOperationsInput | number
    smtp_username?: StringFieldUpdateOperationsInput | string
    smtp_password?: StringFieldUpdateOperationsInput | string
    from_email?: StringFieldUpdateOperationsInput | string
    from_name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type emailConfigCreateManyInput = {
    id?: bigint | number
    panel: string
    module: string
    subject: string
    action: string
    html_template?: string | null
    smtp_host: string
    smtp_secure: boolean
    smtp_port: number
    smtp_username: string
    smtp_password: string
    from_email: string
    from_name: string
    status: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
  }

  export type emailConfigUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    html_template?: NullableStringFieldUpdateOperationsInput | string | null
    smtp_host?: StringFieldUpdateOperationsInput | string
    smtp_secure?: BoolFieldUpdateOperationsInput | boolean
    smtp_port?: IntFieldUpdateOperationsInput | number
    smtp_username?: StringFieldUpdateOperationsInput | string
    smtp_password?: StringFieldUpdateOperationsInput | string
    from_email?: StringFieldUpdateOperationsInput | string
    from_name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type emailConfigUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    html_template?: NullableStringFieldUpdateOperationsInput | string | null
    smtp_host?: StringFieldUpdateOperationsInput | string
    smtp_secure?: BoolFieldUpdateOperationsInput | boolean
    smtp_port?: IntFieldUpdateOperationsInput | number
    smtp_username?: StringFieldUpdateOperationsInput | string
    smtp_password?: StringFieldUpdateOperationsInput | string
    from_email?: StringFieldUpdateOperationsInput | string
    from_name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminCreateInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminUpdateInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminCreateManyInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminUpdateManyMutationInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionCreateInput = {
    panel: string
    module: string
    action: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    adminPermissions?: adminHasPermissionCreateNestedManyWithoutPermissionInput
  }

  export type permissionUncheckedCreateInput = {
    id?: number
    panel: string
    module: string
    action: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    adminPermissions?: adminHasPermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type permissionUpdateInput = {
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    adminPermissions?: adminHasPermissionUpdateManyWithoutPermissionNestedInput
  }

  export type permissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    adminPermissions?: adminHasPermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type permissionCreateManyInput = {
    id?: number
    panel: string
    module: string
    action: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type permissionUpdateManyMutationInput = {
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionCreateInput = {
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    admin: adminCreateNestedOneWithoutPermissionsInput
    permission: permissionCreateNestedOneWithoutAdminPermissionsInput
  }

  export type adminHasPermissionUncheckedCreateInput = {
    id?: number
    adminId: number
    permissionId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: adminUpdateOneRequiredWithoutPermissionsNestedInput
    permission?: permissionUpdateOneRequiredWithoutAdminPermissionsNestedInput
  }

  export type adminHasPermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionCreateManyInput = {
    id?: number
    adminId: number
    permissionId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyDetailCreateInput = {
    companyName?: string | null
    brandName?: string | null
    brandShortName?: string | null
    billingAddress?: string | null
    billingPincode?: string | null
    billingState?: string | null
    billingCity?: string | null
    businessType?: string | null
    clientEntryType?: string | null
    gstNumber?: string | null
    companyPanNumber?: string | null
    aadharNumber?: string | null
    gstDocument?: string | null
    panCardHolderName?: string | null
    aadharCardHolderName?: string | null
    panCardImage?: string | null
    aadharCardImage?: string | null
    additionalDocumentUpload?: string | null
    documentId?: string | null
    documentName?: string | null
    documentImage?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    admin: adminCreateNestedOneWithoutCompanyDetailInput
  }

  export type companyDetailUncheckedCreateInput = {
    id?: number
    adminId: number
    companyName?: string | null
    brandName?: string | null
    brandShortName?: string | null
    billingAddress?: string | null
    billingPincode?: string | null
    billingState?: string | null
    billingCity?: string | null
    businessType?: string | null
    clientEntryType?: string | null
    gstNumber?: string | null
    companyPanNumber?: string | null
    aadharNumber?: string | null
    gstDocument?: string | null
    panCardHolderName?: string | null
    aadharCardHolderName?: string | null
    panCardImage?: string | null
    aadharCardImage?: string | null
    additionalDocumentUpload?: string | null
    documentId?: string | null
    documentName?: string | null
    documentImage?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type companyDetailUpdateInput = {
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: adminUpdateOneRequiredWithoutCompanyDetailNestedInput
  }

  export type companyDetailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyDetailCreateManyInput = {
    id?: number
    adminId: number
    companyName?: string | null
    brandName?: string | null
    brandShortName?: string | null
    billingAddress?: string | null
    billingPincode?: string | null
    billingState?: string | null
    billingCity?: string | null
    businessType?: string | null
    clientEntryType?: string | null
    gstNumber?: string | null
    companyPanNumber?: string | null
    aadharNumber?: string | null
    gstDocument?: string | null
    panCardHolderName?: string | null
    aadharCardHolderName?: string | null
    panCardImage?: string | null
    aadharCardImage?: string | null
    additionalDocumentUpload?: string | null
    documentId?: string | null
    documentName?: string | null
    documentImage?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type companyDetailUpdateManyMutationInput = {
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyDetailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountCreateInput = {
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    admin: adminCreateNestedOneWithoutBankAccountsInput
  }

  export type bankAccountUncheckedCreateInput = {
    id?: number
    adminId: number
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type bankAccountUpdateInput = {
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: adminUpdateOneRequiredWithoutBankAccountsNestedInput
  }

  export type bankAccountUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountCreateManyInput = {
    id?: number
    adminId: number
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type bankAccountUpdateManyMutationInput = {
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffCreateInput = {
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    admin: adminCreateNestedOneWithoutStaffInput
  }

  export type adminStaffUncheckedCreateInput = {
    id?: number
    admin_id: number
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminStaffUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: adminUpdateOneRequiredWithoutStaffNestedInput
  }

  export type adminStaffUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffCreateManyInput = {
    id?: number
    admin_id: number
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminStaffUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type loginLogCreateInput = {
    adminId: number
    adminRole: string
    action: string
    response?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type loginLogUncheckedCreateInput = {
    id?: number
    adminId: number
    adminRole: string
    action: string
    response?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type loginLogUpdateInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type loginLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type loginLogCreateManyInput = {
    id?: number
    adminId: number
    adminRole: string
    action: string
    response?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type loginLogUpdateManyMutationInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type loginLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityLogCreateInput = {
    adminId: number
    adminRole: string
    module: string
    action: string
    endpoint: string
    method: string
    payload?: string | null
    response?: string | null
    result: boolean
    data?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type activityLogUncheckedCreateInput = {
    id?: number
    adminId: number
    adminRole: string
    module: string
    action: string
    endpoint: string
    method: string
    payload?: string | null
    response?: string | null
    result: boolean
    data?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type activityLogUpdateInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    endpoint?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    payload?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    result?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    endpoint?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    payload?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    result?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityLogCreateManyInput = {
    id?: number
    adminId: number
    adminRole: string
    module: string
    action: string
    endpoint: string
    method: string
    payload?: string | null
    response?: string | null
    result: boolean
    data?: string | null
    ipv4?: string | null
    ipv6?: string | null
    internetServiceProvider?: string | null
    clientInformation?: string | null
    userAgent?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type activityLogUpdateManyMutationInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    endpoint?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    payload?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    result?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    adminRole?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    endpoint?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    payload?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    result?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableStringFieldUpdateOperationsInput | string | null
    ipv4?: NullableStringFieldUpdateOperationsInput | string | null
    ipv6?: NullableStringFieldUpdateOperationsInput | string | null
    internetServiceProvider?: NullableStringFieldUpdateOperationsInput | string | null
    clientInformation?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryCreateInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryCreateManyInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type countryUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stateCreateInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type stateCreateManyInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type stateUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stateUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cityCreateInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type cityCreateManyInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type cityUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cityUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseCreateInput = {
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutWarehousesInput
    state?: stateCreateNestedOneWithoutWarehousesInput
    city?: cityCreateNestedOneWithoutWarehousesInput
  }

  export type warehouseUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutWarehousesNestedInput
    state?: stateUpdateOneWithoutWarehousesNestedInput
    city?: cityUpdateOneWithoutWarehousesNestedInput
  }

  export type warehouseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseCreateManyInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoryCreateInput = {
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productCreateNestedManyWithoutCategoryInput
    productRequests?: productRequestCreateNestedManyWithoutCategoryInput
  }

  export type categoryUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productUncheckedCreateNestedManyWithoutCategoryInput
    productRequests?: productRequestUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUpdateManyWithoutCategoryNestedInput
    productRequests?: productRequestUpdateManyWithoutCategoryNestedInput
  }

  export type categoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUncheckedUpdateManyWithoutCategoryNestedInput
    productRequests?: productRequestUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type categoryCreateManyInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type categoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type brandCreateInput = {
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productCreateNestedManyWithoutBrandInput
  }

  export type brandUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productUncheckedCreateNestedManyWithoutBrandInput
  }

  export type brandUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUpdateManyWithoutBrandNestedInput
  }

  export type brandUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type brandCreateManyInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type brandUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type brandUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestCreateInput = {
    name: string
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductRequestsInput
  }

  export type productRequestUncheckedCreateInput = {
    id?: number
    name: string
    categoryId: number
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productRequestUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductRequestsNestedInput
  }

  export type productRequestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestCreateManyInput = {
    id?: number
    name: string
    categoryId: number
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productRequestUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productCreateInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    brand: brandCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productCreateManyInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productVariantCreateInput = {
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    product: productCreateNestedOneWithoutVariantsInput
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
  }

  export type productVariantUncheckedCreateInput = {
    id?: number
    productId: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type productVariantUpdateInput = {
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    product?: productUpdateOneRequiredWithoutVariantsNestedInput
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
  }

  export type productVariantUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type productVariantCreateManyInput = {
    id?: number
    productId: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productVariantUpdateManyMutationInput = {
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productVariantUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type courierCompanyCreateInput = {
    name: string
    slug: string
    code?: string | null
    website?: string | null
    email: string
    phoneNumber?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type courierCompanyUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
    code?: string | null
    website?: string | null
    email: string
    phoneNumber?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type courierCompanyUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type courierCompanyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type courierCompanyCreateManyInput = {
    id?: number
    name: string
    slug: string
    code?: string | null
    website?: string | null
    email: string
    phoneNumber?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type courierCompanyUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type courierCompanyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    code?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoCreateInput = {
    pincode: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutHighRtosInput
    state?: stateCreateNestedOneWithoutHighRtosInput
    city?: cityCreateNestedOneWithoutHighRtosInput
  }

  export type highRtoUncheckedCreateInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoUpdateInput = {
    pincode?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutHighRtosNestedInput
    state?: stateUpdateOneWithoutHighRtosNestedInput
    city?: cityUpdateOneWithoutHighRtosNestedInput
  }

  export type highRtoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoCreateManyInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoUpdateManyMutationInput = {
    pincode?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentCreateInput = {
    transactionId: string
    cycle?: string | null
    amount?: number | null
    status?: string | null
    date?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orders?: OrderCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: number
    transactionId: string
    cycle?: string | null
    amount?: number | null
    status?: string | null
    date?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUpdateInput = {
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentCreateManyInput = {
    id?: number
    transactionId: string
    cycle?: string | null
    amount?: number | null
    status?: string | null
    date?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type PaymentUpdateManyMutationInput = {
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderCreateInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderUpdateManyMutationInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateInput = {
    quantity: number
    price: number
    total: number
    order: OrderCreateNestedOneWithoutItemsInput
    product?: productCreateNestedOneWithoutOrderItemsInput
    variant?: productVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: number
    orderId: number
    productId?: number | null
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    product?: productUpdateOneWithoutOrderItemsNestedInput
    variant?: productVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemCreateManyInput = {
    id?: number
    orderId: number
    productId?: number | null
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type emailConfigOrderByRelevanceInput = {
    fields: emailConfigOrderByRelevanceFieldEnum | emailConfigOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type emailConfigCountOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    subject?: SortOrder
    action?: SortOrder
    html_template?: SortOrder
    smtp_host?: SortOrder
    smtp_secure?: SortOrder
    smtp_port?: SortOrder
    smtp_username?: SortOrder
    smtp_password?: SortOrder
    from_email?: SortOrder
    from_name?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
  }

  export type emailConfigAvgOrderByAggregateInput = {
    id?: SortOrder
    smtp_port?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type emailConfigMaxOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    subject?: SortOrder
    action?: SortOrder
    html_template?: SortOrder
    smtp_host?: SortOrder
    smtp_secure?: SortOrder
    smtp_port?: SortOrder
    smtp_username?: SortOrder
    smtp_password?: SortOrder
    from_email?: SortOrder
    from_name?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
  }

  export type emailConfigMinOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    subject?: SortOrder
    action?: SortOrder
    html_template?: SortOrder
    smtp_host?: SortOrder
    smtp_secure?: SortOrder
    smtp_port?: SortOrder
    smtp_username?: SortOrder
    smtp_password?: SortOrder
    from_email?: SortOrder
    from_name?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
  }

  export type emailConfigSumOrderByAggregateInput = {
    id?: SortOrder
    smtp_port?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type CityNullableScalarRelationFilter = {
    is?: cityWhereInput | null
    isNot?: cityWhereInput | null
  }

  export type StateNullableScalarRelationFilter = {
    is?: stateWhereInput | null
    isNot?: stateWhereInput | null
  }

  export type CountryNullableScalarRelationFilter = {
    is?: countryWhereInput | null
    isNot?: countryWhereInput | null
  }

  export type AdminStaffListRelationFilter = {
    every?: adminStaffWhereInput
    some?: adminStaffWhereInput
    none?: adminStaffWhereInput
  }

  export type CompanyDetailNullableScalarRelationFilter = {
    is?: companyDetailWhereInput | null
    isNot?: companyDetailWhereInput | null
  }

  export type BankAccountListRelationFilter = {
    every?: bankAccountWhereInput
    some?: bankAccountWhereInput
    none?: bankAccountWhereInput
  }

  export type AdminHasPermissionListRelationFilter = {
    every?: adminHasPermissionWhereInput
    some?: adminHasPermissionWhereInput
    none?: adminHasPermissionWhereInput
  }

  export type adminStaffOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bankAccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type adminHasPermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type adminOrderByRelevanceInput = {
    fields: adminOrderByRelevanceFieldEnum | adminOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type adminCountOrderByAggregateInput = {
    id?: SortOrder
    profilePicture?: SortOrder
    name?: SortOrder
    username?: SortOrder
    website?: SortOrder
    email?: SortOrder
    referralCode?: SortOrder
    password?: SortOrder
    role?: SortOrder
    type?: SortOrder
    status?: SortOrder
    dateOfBirth?: SortOrder
    phoneNumber?: SortOrder
    currentAddress?: SortOrder
    permanentAddress?: SortOrder
    permanentPostalCode?: SortOrder
    permanentCityId?: SortOrder
    permanentStateId?: SortOrder
    permanentCountryId?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminAvgOrderByAggregateInput = {
    id?: SortOrder
    permanentCityId?: SortOrder
    permanentStateId?: SortOrder
    permanentCountryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type adminMaxOrderByAggregateInput = {
    id?: SortOrder
    profilePicture?: SortOrder
    name?: SortOrder
    username?: SortOrder
    website?: SortOrder
    email?: SortOrder
    referralCode?: SortOrder
    password?: SortOrder
    role?: SortOrder
    type?: SortOrder
    status?: SortOrder
    dateOfBirth?: SortOrder
    phoneNumber?: SortOrder
    currentAddress?: SortOrder
    permanentAddress?: SortOrder
    permanentPostalCode?: SortOrder
    permanentCityId?: SortOrder
    permanentStateId?: SortOrder
    permanentCountryId?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminMinOrderByAggregateInput = {
    id?: SortOrder
    profilePicture?: SortOrder
    name?: SortOrder
    username?: SortOrder
    website?: SortOrder
    email?: SortOrder
    referralCode?: SortOrder
    password?: SortOrder
    role?: SortOrder
    type?: SortOrder
    status?: SortOrder
    dateOfBirth?: SortOrder
    phoneNumber?: SortOrder
    currentAddress?: SortOrder
    permanentAddress?: SortOrder
    permanentPostalCode?: SortOrder
    permanentCityId?: SortOrder
    permanentStateId?: SortOrder
    permanentCountryId?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminSumOrderByAggregateInput = {
    id?: SortOrder
    permanentCityId?: SortOrder
    permanentStateId?: SortOrder
    permanentCountryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type permissionOrderByRelevanceInput = {
    fields: permissionOrderByRelevanceFieldEnum | permissionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type permissionCountOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    action?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type permissionAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type permissionMaxOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    action?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type permissionMinOrderByAggregateInput = {
    id?: SortOrder
    panel?: SortOrder
    module?: SortOrder
    action?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type permissionSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type AdminScalarRelationFilter = {
    is?: adminWhereInput
    isNot?: adminWhereInput
  }

  export type PermissionScalarRelationFilter = {
    is?: permissionWhereInput
    isNot?: permissionWhereInput
  }

  export type adminHasPermissionOrderByRelevanceInput = {
    fields: adminHasPermissionOrderByRelevanceFieldEnum | adminHasPermissionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type adminHasPermissionCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminHasPermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type adminHasPermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminHasPermissionMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminHasPermissionSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    permissionId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type companyDetailOrderByRelevanceInput = {
    fields: companyDetailOrderByRelevanceFieldEnum | companyDetailOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type companyDetailCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    companyName?: SortOrder
    brandName?: SortOrder
    brandShortName?: SortOrder
    billingAddress?: SortOrder
    billingPincode?: SortOrder
    billingState?: SortOrder
    billingCity?: SortOrder
    businessType?: SortOrder
    clientEntryType?: SortOrder
    gstNumber?: SortOrder
    companyPanNumber?: SortOrder
    aadharNumber?: SortOrder
    gstDocument?: SortOrder
    panCardHolderName?: SortOrder
    aadharCardHolderName?: SortOrder
    panCardImage?: SortOrder
    aadharCardImage?: SortOrder
    additionalDocumentUpload?: SortOrder
    documentId?: SortOrder
    documentName?: SortOrder
    documentImage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type companyDetailAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type companyDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    companyName?: SortOrder
    brandName?: SortOrder
    brandShortName?: SortOrder
    billingAddress?: SortOrder
    billingPincode?: SortOrder
    billingState?: SortOrder
    billingCity?: SortOrder
    businessType?: SortOrder
    clientEntryType?: SortOrder
    gstNumber?: SortOrder
    companyPanNumber?: SortOrder
    aadharNumber?: SortOrder
    gstDocument?: SortOrder
    panCardHolderName?: SortOrder
    aadharCardHolderName?: SortOrder
    panCardImage?: SortOrder
    aadharCardImage?: SortOrder
    additionalDocumentUpload?: SortOrder
    documentId?: SortOrder
    documentName?: SortOrder
    documentImage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type companyDetailMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    companyName?: SortOrder
    brandName?: SortOrder
    brandShortName?: SortOrder
    billingAddress?: SortOrder
    billingPincode?: SortOrder
    billingState?: SortOrder
    billingCity?: SortOrder
    businessType?: SortOrder
    clientEntryType?: SortOrder
    gstNumber?: SortOrder
    companyPanNumber?: SortOrder
    aadharNumber?: SortOrder
    gstDocument?: SortOrder
    panCardHolderName?: SortOrder
    aadharCardHolderName?: SortOrder
    panCardImage?: SortOrder
    aadharCardImage?: SortOrder
    additionalDocumentUpload?: SortOrder
    documentId?: SortOrder
    documentName?: SortOrder
    documentImage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type companyDetailSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type bankAccountOrderByRelevanceInput = {
    fields: bankAccountOrderByRelevanceFieldEnum | bankAccountOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type bankAccountCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    accountHolderName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankBranch?: SortOrder
    accountType?: SortOrder
    ifscCode?: SortOrder
    cancelledChequeImage?: SortOrder
    paymentMethod?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type bankAccountAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type bankAccountMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    accountHolderName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankBranch?: SortOrder
    accountType?: SortOrder
    ifscCode?: SortOrder
    cancelledChequeImage?: SortOrder
    paymentMethod?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type bankAccountMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    accountHolderName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    bankBranch?: SortOrder
    accountType?: SortOrder
    ifscCode?: SortOrder
    cancelledChequeImage?: SortOrder
    paymentMethod?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type bankAccountSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type adminStaffOrderByRelevanceInput = {
    fields: adminStaffOrderByRelevanceFieldEnum | adminStaffOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type adminStaffCountOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    status?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminStaffAvgOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type adminStaffMaxOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    status?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminStaffMinOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    status?: SortOrder
    pr_token?: SortOrder
    pr_expires_at?: SortOrder
    pr_last_reset?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type adminStaffSumOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type loginLogOrderByRelevanceInput = {
    fields: loginLogOrderByRelevanceFieldEnum | loginLogOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type loginLogCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    action?: SortOrder
    response?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type loginLogAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type loginLogMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    action?: SortOrder
    response?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type loginLogMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    action?: SortOrder
    response?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type loginLogSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type activityLogOrderByRelevanceInput = {
    fields: activityLogOrderByRelevanceFieldEnum | activityLogOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type activityLogCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    module?: SortOrder
    action?: SortOrder
    endpoint?: SortOrder
    method?: SortOrder
    payload?: SortOrder
    response?: SortOrder
    result?: SortOrder
    data?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type activityLogAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type activityLogMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    module?: SortOrder
    action?: SortOrder
    endpoint?: SortOrder
    method?: SortOrder
    payload?: SortOrder
    response?: SortOrder
    result?: SortOrder
    data?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type activityLogMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    adminRole?: SortOrder
    module?: SortOrder
    action?: SortOrder
    endpoint?: SortOrder
    method?: SortOrder
    payload?: SortOrder
    response?: SortOrder
    result?: SortOrder
    data?: SortOrder
    ipv4?: SortOrder
    ipv6?: SortOrder
    internetServiceProvider?: SortOrder
    clientInformation?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type activityLogSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type StateListRelationFilter = {
    every?: stateWhereInput
    some?: stateWhereInput
    none?: stateWhereInput
  }

  export type CityListRelationFilter = {
    every?: cityWhereInput
    some?: cityWhereInput
    none?: cityWhereInput
  }

  export type WarehouseListRelationFilter = {
    every?: warehouseWhereInput
    some?: warehouseWhereInput
    none?: warehouseWhereInput
  }

  export type HighRtoListRelationFilter = {
    every?: highRtoWhereInput
    some?: highRtoWhereInput
    none?: highRtoWhereInput
  }

  export type AdminListRelationFilter = {
    every?: adminWhereInput
    some?: adminWhereInput
    none?: adminWhereInput
  }

  export type ProductListRelationFilter = {
    every?: productWhereInput
    some?: productWhereInput
    none?: productWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type stateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type warehouseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type highRtoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type adminOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type countryOrderByRelevanceInput = {
    fields: countryOrderByRelevanceFieldEnum | countryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type countryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    iso3?: SortOrder
    iso2?: SortOrder
    phonecode?: SortOrder
    currency?: SortOrder
    currencyName?: SortOrder
    currencySymbol?: SortOrder
    nationality?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type countryAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type countryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    iso3?: SortOrder
    iso2?: SortOrder
    phonecode?: SortOrder
    currency?: SortOrder
    currencyName?: SortOrder
    currencySymbol?: SortOrder
    nationality?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type countryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    iso3?: SortOrder
    iso2?: SortOrder
    phonecode?: SortOrder
    currency?: SortOrder
    currencyName?: SortOrder
    currencySymbol?: SortOrder
    nationality?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type countrySumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type CountryScalarRelationFilter = {
    is?: countryWhereInput
    isNot?: countryWhereInput
  }

  export type stateOrderByRelevanceInput = {
    fields: stateOrderByRelevanceFieldEnum | stateOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type stateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    iso2?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type stateAvgOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type stateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    iso2?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type stateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    countryId?: SortOrder
    iso2?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type stateSumOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type StateScalarRelationFilter = {
    is?: stateWhereInput
    isNot?: stateWhereInput
  }

  export type cityOrderByRelevanceInput = {
    fields: cityOrderByRelevanceFieldEnum | cityOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type cityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type cityAvgOrderByAggregateInput = {
    id?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type cityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type cityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type citySumOrderByAggregateInput = {
    id?: SortOrder
    stateId?: SortOrder
    countryId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type warehouseOrderByRelevanceInput = {
    fields: warehouseOrderByRelevanceFieldEnum | warehouseOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type warehouseCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    gst_number?: SortOrder
    contact_name?: SortOrder
    contact_number?: SortOrder
    address_line_1?: SortOrder
    address_line_2?: SortOrder
    postal_code?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type warehouseAvgOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type warehouseMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    gst_number?: SortOrder
    contact_name?: SortOrder
    contact_number?: SortOrder
    address_line_1?: SortOrder
    address_line_2?: SortOrder
    postal_code?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type warehouseMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    gst_number?: SortOrder
    contact_name?: SortOrder
    contact_number?: SortOrder
    address_line_1?: SortOrder
    address_line_2?: SortOrder
    postal_code?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type warehouseSumOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type ProductRequestListRelationFilter = {
    every?: productRequestWhereInput
    some?: productRequestWhereInput
    none?: productRequestWhereInput
  }

  export type productRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoryOrderByRelevanceInput = {
    fields: categoryOrderByRelevanceFieldEnum | categoryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type categoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type categoryAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type categoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type categoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type categorySumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type brandOrderByRelevanceInput = {
    fields: brandOrderByRelevanceFieldEnum | brandOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type brandCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type brandAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type brandMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type brandMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type brandSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type CategoryScalarRelationFilter = {
    is?: categoryWhereInput
    isNot?: categoryWhereInput
  }

  export type productRequestOrderByRelevanceInput = {
    fields: productRequestOrderByRelevanceFieldEnum | productRequestOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productRequestCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrder
    expectedDailyOrders?: SortOrder
    url?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productRequestAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type productRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrder
    expectedDailyOrders?: SortOrder
    url?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productRequestMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrder
    expectedDailyOrders?: SortOrder
    url?: SortOrder
    image?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productRequestSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    expectedPrice?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type BrandScalarRelationFilter = {
    is?: brandWhereInput
    isNot?: brandWhereInput
  }

  export type ProductVariantListRelationFilter = {
    every?: productVariantWhereInput
    some?: productVariantWhereInput
    none?: productVariantWhereInput
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type productVariantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productOrderByRelevanceInput = {
    fields: productOrderByRelevanceFieldEnum | productOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    main_sku?: SortOrder
    description?: SortOrder
    tags?: SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    ean?: SortOrder
    hsnCode?: SortOrder
    taxRate?: SortOrder
    upc?: SortOrder
    rtoAddress?: SortOrder
    pickupAddress?: SortOrder
    shippingCountryId?: SortOrder
    video_url?: SortOrder
    list_as?: SortOrder
    shipping_time?: SortOrder
    weight?: SortOrder
    package_length?: SortOrder
    package_width?: SortOrder
    package_height?: SortOrder
    chargeable_weight?: SortOrder
    package_weight_image?: SortOrder
    package_length_image?: SortOrder
    package_width_image?: SortOrder
    package_height_image?: SortOrder
    product_detail_video?: SortOrder
    training_guidance_video?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    taxRate?: SortOrder
    shippingCountryId?: SortOrder
    weight?: SortOrder
    package_length?: SortOrder
    package_width?: SortOrder
    package_height?: SortOrder
    chargeable_weight?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type productMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    main_sku?: SortOrder
    description?: SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    ean?: SortOrder
    hsnCode?: SortOrder
    taxRate?: SortOrder
    upc?: SortOrder
    rtoAddress?: SortOrder
    pickupAddress?: SortOrder
    shippingCountryId?: SortOrder
    video_url?: SortOrder
    list_as?: SortOrder
    shipping_time?: SortOrder
    weight?: SortOrder
    package_length?: SortOrder
    package_width?: SortOrder
    package_height?: SortOrder
    chargeable_weight?: SortOrder
    package_weight_image?: SortOrder
    package_length_image?: SortOrder
    package_width_image?: SortOrder
    package_height_image?: SortOrder
    product_detail_video?: SortOrder
    training_guidance_video?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    main_sku?: SortOrder
    description?: SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    ean?: SortOrder
    hsnCode?: SortOrder
    taxRate?: SortOrder
    upc?: SortOrder
    rtoAddress?: SortOrder
    pickupAddress?: SortOrder
    shippingCountryId?: SortOrder
    video_url?: SortOrder
    list_as?: SortOrder
    shipping_time?: SortOrder
    weight?: SortOrder
    package_length?: SortOrder
    package_width?: SortOrder
    package_height?: SortOrder
    chargeable_weight?: SortOrder
    package_weight_image?: SortOrder
    package_length_image?: SortOrder
    package_width_image?: SortOrder
    package_height_image?: SortOrder
    product_detail_video?: SortOrder
    training_guidance_video?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    originCountryId?: SortOrder
    taxRate?: SortOrder
    shippingCountryId?: SortOrder
    weight?: SortOrder
    package_length?: SortOrder
    package_width?: SortOrder
    package_height?: SortOrder
    chargeable_weight?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ProductScalarRelationFilter = {
    is?: productWhereInput
    isNot?: productWhereInput
  }

  export type productVariantOrderByRelevanceInput = {
    fields: productVariantOrderByRelevanceFieldEnum | productVariantOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productVariantCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    image?: SortOrder
    color?: SortOrder
    sku?: SortOrder
    qty?: SortOrder
    currency?: SortOrder
    article_id?: SortOrder
    product_link?: SortOrder
    suggested_price?: SortOrder
    shipowl_price?: SortOrder
    rto_suggested_price?: SortOrder
    rto_price?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productVariantAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    qty?: SortOrder
    suggested_price?: SortOrder
    shipowl_price?: SortOrder
    rto_suggested_price?: SortOrder
    rto_price?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type productVariantMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    image?: SortOrder
    color?: SortOrder
    sku?: SortOrder
    qty?: SortOrder
    currency?: SortOrder
    article_id?: SortOrder
    product_link?: SortOrder
    suggested_price?: SortOrder
    shipowl_price?: SortOrder
    rto_suggested_price?: SortOrder
    rto_price?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productVariantMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    image?: SortOrder
    color?: SortOrder
    sku?: SortOrder
    qty?: SortOrder
    currency?: SortOrder
    article_id?: SortOrder
    product_link?: SortOrder
    suggested_price?: SortOrder
    shipowl_price?: SortOrder
    rto_suggested_price?: SortOrder
    rto_price?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type productVariantSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    qty?: SortOrder
    suggested_price?: SortOrder
    shipowl_price?: SortOrder
    rto_suggested_price?: SortOrder
    rto_price?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type courierCompanyOrderByRelevanceInput = {
    fields: courierCompanyOrderByRelevanceFieldEnum | courierCompanyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type courierCompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    code?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type courierCompanyAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type courierCompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    code?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type courierCompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    code?: SortOrder
    website?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type courierCompanySumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type highRtoOrderByRelevanceInput = {
    fields: highRtoOrderByRelevanceFieldEnum | highRtoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type highRtoCountOrderByAggregateInput = {
    id?: SortOrder
    pincode?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type highRtoAvgOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type highRtoMaxOrderByAggregateInput = {
    id?: SortOrder
    pincode?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type highRtoMinOrderByAggregateInput = {
    id?: SortOrder
    pincode?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type highRtoSumOrderByAggregateInput = {
    id?: SortOrder
    countryId?: SortOrder
    stateId?: SortOrder
    cityId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PaymentOrderByRelevanceInput = {
    fields: PaymentOrderByRelevanceFieldEnum | PaymentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    cycle?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    cycle?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    cycle?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type PaymentNullableScalarRelationFilter = {
    is?: PaymentWhereInput | null
    isNot?: PaymentWhereInput | null
  }

  export type OrderOrderByRelevanceInput = {
    fields: OrderOrderByRelevanceFieldEnum | OrderOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    orderNote?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    shippingName?: SortOrder
    shippingPhone?: SortOrder
    shippingEmail?: SortOrder
    shippingAddress?: SortOrder
    shippingZip?: SortOrder
    shippingCountryId?: SortOrder
    shippingStateId?: SortOrder
    shippingCityId?: SortOrder
    billingName?: SortOrder
    billingPhone?: SortOrder
    billingEmail?: SortOrder
    billingAddress?: SortOrder
    billingZip?: SortOrder
    billingCountryId?: SortOrder
    billingStateId?: SortOrder
    billingCityId?: SortOrder
    paymentId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    id?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    shippingCountryId?: SortOrder
    shippingStateId?: SortOrder
    shippingCityId?: SortOrder
    billingCountryId?: SortOrder
    billingStateId?: SortOrder
    billingCityId?: SortOrder
    paymentId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    orderNote?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    shippingName?: SortOrder
    shippingPhone?: SortOrder
    shippingEmail?: SortOrder
    shippingAddress?: SortOrder
    shippingZip?: SortOrder
    shippingCountryId?: SortOrder
    shippingStateId?: SortOrder
    shippingCityId?: SortOrder
    billingName?: SortOrder
    billingPhone?: SortOrder
    billingEmail?: SortOrder
    billingAddress?: SortOrder
    billingZip?: SortOrder
    billingCountryId?: SortOrder
    billingStateId?: SortOrder
    billingCityId?: SortOrder
    paymentId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    orderNote?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    shippingName?: SortOrder
    shippingPhone?: SortOrder
    shippingEmail?: SortOrder
    shippingAddress?: SortOrder
    shippingZip?: SortOrder
    shippingCountryId?: SortOrder
    shippingStateId?: SortOrder
    shippingCityId?: SortOrder
    billingName?: SortOrder
    billingPhone?: SortOrder
    billingEmail?: SortOrder
    billingAddress?: SortOrder
    billingZip?: SortOrder
    billingCountryId?: SortOrder
    billingStateId?: SortOrder
    billingCityId?: SortOrder
    paymentId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    createdByRole?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    updatedByRole?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    deletedByRole?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    id?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    totalAmount?: SortOrder
    shippingCountryId?: SortOrder
    shippingStateId?: SortOrder
    shippingCityId?: SortOrder
    billingCountryId?: SortOrder
    billingStateId?: SortOrder
    billingCityId?: SortOrder
    paymentId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type ProductNullableScalarRelationFilter = {
    is?: productWhereInput | null
    isNot?: productWhereInput | null
  }

  export type ProductVariantNullableScalarRelationFilter = {
    is?: productVariantWhereInput | null
    isNot?: productVariantWhereInput | null
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    total?: SortOrder
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type cityCreateNestedOneWithoutAdminsInput = {
    create?: XOR<cityCreateWithoutAdminsInput, cityUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: cityCreateOrConnectWithoutAdminsInput
    connect?: cityWhereUniqueInput
  }

  export type stateCreateNestedOneWithoutAdminsInput = {
    create?: XOR<stateCreateWithoutAdminsInput, stateUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: stateCreateOrConnectWithoutAdminsInput
    connect?: stateWhereUniqueInput
  }

  export type countryCreateNestedOneWithoutAdminsInput = {
    create?: XOR<countryCreateWithoutAdminsInput, countryUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: countryCreateOrConnectWithoutAdminsInput
    connect?: countryWhereUniqueInput
  }

  export type adminStaffCreateNestedManyWithoutAdminInput = {
    create?: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput> | adminStaffCreateWithoutAdminInput[] | adminStaffUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminStaffCreateOrConnectWithoutAdminInput | adminStaffCreateOrConnectWithoutAdminInput[]
    createMany?: adminStaffCreateManyAdminInputEnvelope
    connect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
  }

  export type companyDetailCreateNestedOneWithoutAdminInput = {
    create?: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
    connectOrCreate?: companyDetailCreateOrConnectWithoutAdminInput
    connect?: companyDetailWhereUniqueInput
  }

  export type bankAccountCreateNestedManyWithoutAdminInput = {
    create?: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput> | bankAccountCreateWithoutAdminInput[] | bankAccountUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: bankAccountCreateOrConnectWithoutAdminInput | bankAccountCreateOrConnectWithoutAdminInput[]
    createMany?: bankAccountCreateManyAdminInputEnvelope
    connect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
  }

  export type adminHasPermissionCreateNestedManyWithoutAdminInput = {
    create?: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput> | adminHasPermissionCreateWithoutAdminInput[] | adminHasPermissionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutAdminInput | adminHasPermissionCreateOrConnectWithoutAdminInput[]
    createMany?: adminHasPermissionCreateManyAdminInputEnvelope
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
  }

  export type adminStaffUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput> | adminStaffCreateWithoutAdminInput[] | adminStaffUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminStaffCreateOrConnectWithoutAdminInput | adminStaffCreateOrConnectWithoutAdminInput[]
    createMany?: adminStaffCreateManyAdminInputEnvelope
    connect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
  }

  export type companyDetailUncheckedCreateNestedOneWithoutAdminInput = {
    create?: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
    connectOrCreate?: companyDetailCreateOrConnectWithoutAdminInput
    connect?: companyDetailWhereUniqueInput
  }

  export type bankAccountUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput> | bankAccountCreateWithoutAdminInput[] | bankAccountUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: bankAccountCreateOrConnectWithoutAdminInput | bankAccountCreateOrConnectWithoutAdminInput[]
    createMany?: bankAccountCreateManyAdminInputEnvelope
    connect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
  }

  export type adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput> | adminHasPermissionCreateWithoutAdminInput[] | adminHasPermissionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutAdminInput | adminHasPermissionCreateOrConnectWithoutAdminInput[]
    createMany?: adminHasPermissionCreateManyAdminInputEnvelope
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type cityUpdateOneWithoutAdminsNestedInput = {
    create?: XOR<cityCreateWithoutAdminsInput, cityUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: cityCreateOrConnectWithoutAdminsInput
    upsert?: cityUpsertWithoutAdminsInput
    disconnect?: cityWhereInput | boolean
    delete?: cityWhereInput | boolean
    connect?: cityWhereUniqueInput
    update?: XOR<XOR<cityUpdateToOneWithWhereWithoutAdminsInput, cityUpdateWithoutAdminsInput>, cityUncheckedUpdateWithoutAdminsInput>
  }

  export type stateUpdateOneWithoutAdminsNestedInput = {
    create?: XOR<stateCreateWithoutAdminsInput, stateUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: stateCreateOrConnectWithoutAdminsInput
    upsert?: stateUpsertWithoutAdminsInput
    disconnect?: stateWhereInput | boolean
    delete?: stateWhereInput | boolean
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutAdminsInput, stateUpdateWithoutAdminsInput>, stateUncheckedUpdateWithoutAdminsInput>
  }

  export type countryUpdateOneWithoutAdminsNestedInput = {
    create?: XOR<countryCreateWithoutAdminsInput, countryUncheckedCreateWithoutAdminsInput>
    connectOrCreate?: countryCreateOrConnectWithoutAdminsInput
    upsert?: countryUpsertWithoutAdminsInput
    disconnect?: countryWhereInput | boolean
    delete?: countryWhereInput | boolean
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutAdminsInput, countryUpdateWithoutAdminsInput>, countryUncheckedUpdateWithoutAdminsInput>
  }

  export type adminStaffUpdateManyWithoutAdminNestedInput = {
    create?: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput> | adminStaffCreateWithoutAdminInput[] | adminStaffUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminStaffCreateOrConnectWithoutAdminInput | adminStaffCreateOrConnectWithoutAdminInput[]
    upsert?: adminStaffUpsertWithWhereUniqueWithoutAdminInput | adminStaffUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: adminStaffCreateManyAdminInputEnvelope
    set?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    disconnect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    delete?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    connect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    update?: adminStaffUpdateWithWhereUniqueWithoutAdminInput | adminStaffUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: adminStaffUpdateManyWithWhereWithoutAdminInput | adminStaffUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: adminStaffScalarWhereInput | adminStaffScalarWhereInput[]
  }

  export type companyDetailUpdateOneWithoutAdminNestedInput = {
    create?: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
    connectOrCreate?: companyDetailCreateOrConnectWithoutAdminInput
    upsert?: companyDetailUpsertWithoutAdminInput
    disconnect?: companyDetailWhereInput | boolean
    delete?: companyDetailWhereInput | boolean
    connect?: companyDetailWhereUniqueInput
    update?: XOR<XOR<companyDetailUpdateToOneWithWhereWithoutAdminInput, companyDetailUpdateWithoutAdminInput>, companyDetailUncheckedUpdateWithoutAdminInput>
  }

  export type bankAccountUpdateManyWithoutAdminNestedInput = {
    create?: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput> | bankAccountCreateWithoutAdminInput[] | bankAccountUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: bankAccountCreateOrConnectWithoutAdminInput | bankAccountCreateOrConnectWithoutAdminInput[]
    upsert?: bankAccountUpsertWithWhereUniqueWithoutAdminInput | bankAccountUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: bankAccountCreateManyAdminInputEnvelope
    set?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    disconnect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    delete?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    connect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    update?: bankAccountUpdateWithWhereUniqueWithoutAdminInput | bankAccountUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: bankAccountUpdateManyWithWhereWithoutAdminInput | bankAccountUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: bankAccountScalarWhereInput | bankAccountScalarWhereInput[]
  }

  export type adminHasPermissionUpdateManyWithoutAdminNestedInput = {
    create?: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput> | adminHasPermissionCreateWithoutAdminInput[] | adminHasPermissionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutAdminInput | adminHasPermissionCreateOrConnectWithoutAdminInput[]
    upsert?: adminHasPermissionUpsertWithWhereUniqueWithoutAdminInput | adminHasPermissionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: adminHasPermissionCreateManyAdminInputEnvelope
    set?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    disconnect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    delete?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    update?: adminHasPermissionUpdateWithWhereUniqueWithoutAdminInput | adminHasPermissionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: adminHasPermissionUpdateManyWithWhereWithoutAdminInput | adminHasPermissionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type adminStaffUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput> | adminStaffCreateWithoutAdminInput[] | adminStaffUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminStaffCreateOrConnectWithoutAdminInput | adminStaffCreateOrConnectWithoutAdminInput[]
    upsert?: adminStaffUpsertWithWhereUniqueWithoutAdminInput | adminStaffUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: adminStaffCreateManyAdminInputEnvelope
    set?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    disconnect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    delete?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    connect?: adminStaffWhereUniqueInput | adminStaffWhereUniqueInput[]
    update?: adminStaffUpdateWithWhereUniqueWithoutAdminInput | adminStaffUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: adminStaffUpdateManyWithWhereWithoutAdminInput | adminStaffUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: adminStaffScalarWhereInput | adminStaffScalarWhereInput[]
  }

  export type companyDetailUncheckedUpdateOneWithoutAdminNestedInput = {
    create?: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
    connectOrCreate?: companyDetailCreateOrConnectWithoutAdminInput
    upsert?: companyDetailUpsertWithoutAdminInput
    disconnect?: companyDetailWhereInput | boolean
    delete?: companyDetailWhereInput | boolean
    connect?: companyDetailWhereUniqueInput
    update?: XOR<XOR<companyDetailUpdateToOneWithWhereWithoutAdminInput, companyDetailUpdateWithoutAdminInput>, companyDetailUncheckedUpdateWithoutAdminInput>
  }

  export type bankAccountUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput> | bankAccountCreateWithoutAdminInput[] | bankAccountUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: bankAccountCreateOrConnectWithoutAdminInput | bankAccountCreateOrConnectWithoutAdminInput[]
    upsert?: bankAccountUpsertWithWhereUniqueWithoutAdminInput | bankAccountUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: bankAccountCreateManyAdminInputEnvelope
    set?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    disconnect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    delete?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    connect?: bankAccountWhereUniqueInput | bankAccountWhereUniqueInput[]
    update?: bankAccountUpdateWithWhereUniqueWithoutAdminInput | bankAccountUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: bankAccountUpdateManyWithWhereWithoutAdminInput | bankAccountUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: bankAccountScalarWhereInput | bankAccountScalarWhereInput[]
  }

  export type adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput> | adminHasPermissionCreateWithoutAdminInput[] | adminHasPermissionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutAdminInput | adminHasPermissionCreateOrConnectWithoutAdminInput[]
    upsert?: adminHasPermissionUpsertWithWhereUniqueWithoutAdminInput | adminHasPermissionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: adminHasPermissionCreateManyAdminInputEnvelope
    set?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    disconnect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    delete?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    update?: adminHasPermissionUpdateWithWhereUniqueWithoutAdminInput | adminHasPermissionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: adminHasPermissionUpdateManyWithWhereWithoutAdminInput | adminHasPermissionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
  }

  export type adminHasPermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput> | adminHasPermissionCreateWithoutPermissionInput[] | adminHasPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutPermissionInput | adminHasPermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: adminHasPermissionCreateManyPermissionInputEnvelope
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
  }

  export type adminHasPermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput> | adminHasPermissionCreateWithoutPermissionInput[] | adminHasPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutPermissionInput | adminHasPermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: adminHasPermissionCreateManyPermissionInputEnvelope
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
  }

  export type adminHasPermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput> | adminHasPermissionCreateWithoutPermissionInput[] | adminHasPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutPermissionInput | adminHasPermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: adminHasPermissionUpsertWithWhereUniqueWithoutPermissionInput | adminHasPermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: adminHasPermissionCreateManyPermissionInputEnvelope
    set?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    disconnect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    delete?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    update?: adminHasPermissionUpdateWithWhereUniqueWithoutPermissionInput | adminHasPermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: adminHasPermissionUpdateManyWithWhereWithoutPermissionInput | adminHasPermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
  }

  export type adminHasPermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput> | adminHasPermissionCreateWithoutPermissionInput[] | adminHasPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: adminHasPermissionCreateOrConnectWithoutPermissionInput | adminHasPermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: adminHasPermissionUpsertWithWhereUniqueWithoutPermissionInput | adminHasPermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: adminHasPermissionCreateManyPermissionInputEnvelope
    set?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    disconnect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    delete?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    connect?: adminHasPermissionWhereUniqueInput | adminHasPermissionWhereUniqueInput[]
    update?: adminHasPermissionUpdateWithWhereUniqueWithoutPermissionInput | adminHasPermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: adminHasPermissionUpdateManyWithWhereWithoutPermissionInput | adminHasPermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
  }

  export type adminCreateNestedOneWithoutPermissionsInput = {
    create?: XOR<adminCreateWithoutPermissionsInput, adminUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: adminCreateOrConnectWithoutPermissionsInput
    connect?: adminWhereUniqueInput
  }

  export type permissionCreateNestedOneWithoutAdminPermissionsInput = {
    create?: XOR<permissionCreateWithoutAdminPermissionsInput, permissionUncheckedCreateWithoutAdminPermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutAdminPermissionsInput
    connect?: permissionWhereUniqueInput
  }

  export type adminUpdateOneRequiredWithoutPermissionsNestedInput = {
    create?: XOR<adminCreateWithoutPermissionsInput, adminUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: adminCreateOrConnectWithoutPermissionsInput
    upsert?: adminUpsertWithoutPermissionsInput
    connect?: adminWhereUniqueInput
    update?: XOR<XOR<adminUpdateToOneWithWhereWithoutPermissionsInput, adminUpdateWithoutPermissionsInput>, adminUncheckedUpdateWithoutPermissionsInput>
  }

  export type permissionUpdateOneRequiredWithoutAdminPermissionsNestedInput = {
    create?: XOR<permissionCreateWithoutAdminPermissionsInput, permissionUncheckedCreateWithoutAdminPermissionsInput>
    connectOrCreate?: permissionCreateOrConnectWithoutAdminPermissionsInput
    upsert?: permissionUpsertWithoutAdminPermissionsInput
    connect?: permissionWhereUniqueInput
    update?: XOR<XOR<permissionUpdateToOneWithWhereWithoutAdminPermissionsInput, permissionUpdateWithoutAdminPermissionsInput>, permissionUncheckedUpdateWithoutAdminPermissionsInput>
  }

  export type adminCreateNestedOneWithoutCompanyDetailInput = {
    create?: XOR<adminCreateWithoutCompanyDetailInput, adminUncheckedCreateWithoutCompanyDetailInput>
    connectOrCreate?: adminCreateOrConnectWithoutCompanyDetailInput
    connect?: adminWhereUniqueInput
  }

  export type adminUpdateOneRequiredWithoutCompanyDetailNestedInput = {
    create?: XOR<adminCreateWithoutCompanyDetailInput, adminUncheckedCreateWithoutCompanyDetailInput>
    connectOrCreate?: adminCreateOrConnectWithoutCompanyDetailInput
    upsert?: adminUpsertWithoutCompanyDetailInput
    connect?: adminWhereUniqueInput
    update?: XOR<XOR<adminUpdateToOneWithWhereWithoutCompanyDetailInput, adminUpdateWithoutCompanyDetailInput>, adminUncheckedUpdateWithoutCompanyDetailInput>
  }

  export type adminCreateNestedOneWithoutBankAccountsInput = {
    create?: XOR<adminCreateWithoutBankAccountsInput, adminUncheckedCreateWithoutBankAccountsInput>
    connectOrCreate?: adminCreateOrConnectWithoutBankAccountsInput
    connect?: adminWhereUniqueInput
  }

  export type adminUpdateOneRequiredWithoutBankAccountsNestedInput = {
    create?: XOR<adminCreateWithoutBankAccountsInput, adminUncheckedCreateWithoutBankAccountsInput>
    connectOrCreate?: adminCreateOrConnectWithoutBankAccountsInput
    upsert?: adminUpsertWithoutBankAccountsInput
    connect?: adminWhereUniqueInput
    update?: XOR<XOR<adminUpdateToOneWithWhereWithoutBankAccountsInput, adminUpdateWithoutBankAccountsInput>, adminUncheckedUpdateWithoutBankAccountsInput>
  }

  export type adminCreateNestedOneWithoutStaffInput = {
    create?: XOR<adminCreateWithoutStaffInput, adminUncheckedCreateWithoutStaffInput>
    connectOrCreate?: adminCreateOrConnectWithoutStaffInput
    connect?: adminWhereUniqueInput
  }

  export type adminUpdateOneRequiredWithoutStaffNestedInput = {
    create?: XOR<adminCreateWithoutStaffInput, adminUncheckedCreateWithoutStaffInput>
    connectOrCreate?: adminCreateOrConnectWithoutStaffInput
    upsert?: adminUpsertWithoutStaffInput
    connect?: adminWhereUniqueInput
    update?: XOR<XOR<adminUpdateToOneWithWhereWithoutStaffInput, adminUpdateWithoutStaffInput>, adminUncheckedUpdateWithoutStaffInput>
  }

  export type stateCreateNestedManyWithoutCountryInput = {
    create?: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput> | stateCreateWithoutCountryInput[] | stateUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: stateCreateOrConnectWithoutCountryInput | stateCreateOrConnectWithoutCountryInput[]
    createMany?: stateCreateManyCountryInputEnvelope
    connect?: stateWhereUniqueInput | stateWhereUniqueInput[]
  }

  export type cityCreateNestedManyWithoutCountryInput = {
    create?: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput> | cityCreateWithoutCountryInput[] | cityUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: cityCreateOrConnectWithoutCountryInput | cityCreateOrConnectWithoutCountryInput[]
    createMany?: cityCreateManyCountryInputEnvelope
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
  }

  export type warehouseCreateNestedManyWithoutCountryInput = {
    create?: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput> | warehouseCreateWithoutCountryInput[] | warehouseUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCountryInput | warehouseCreateOrConnectWithoutCountryInput[]
    createMany?: warehouseCreateManyCountryInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoCreateNestedManyWithoutCountryInput = {
    create?: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput> | highRtoCreateWithoutCountryInput[] | highRtoUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCountryInput | highRtoCreateOrConnectWithoutCountryInput[]
    createMany?: highRtoCreateManyCountryInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminCreateNestedManyWithoutPermanentCountryInput = {
    create?: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput> | adminCreateWithoutPermanentCountryInput[] | adminUncheckedCreateWithoutPermanentCountryInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCountryInput | adminCreateOrConnectWithoutPermanentCountryInput[]
    createMany?: adminCreateManyPermanentCountryInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type productCreateNestedManyWithoutOriginCountryInput = {
    create?: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput> | productCreateWithoutOriginCountryInput[] | productUncheckedCreateWithoutOriginCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutOriginCountryInput | productCreateOrConnectWithoutOriginCountryInput[]
    createMany?: productCreateManyOriginCountryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productCreateNestedManyWithoutShippingCountryInput = {
    create?: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput> | productCreateWithoutShippingCountryInput[] | productUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutShippingCountryInput | productCreateOrConnectWithoutShippingCountryInput[]
    createMany?: productCreateManyShippingCountryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutShippingCountryInput = {
    create?: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput> | OrderCreateWithoutShippingCountryInput[] | OrderUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCountryInput | OrderCreateOrConnectWithoutShippingCountryInput[]
    createMany?: OrderCreateManyShippingCountryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutBillingCountryInput = {
    create?: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput> | OrderCreateWithoutBillingCountryInput[] | OrderUncheckedCreateWithoutBillingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCountryInput | OrderCreateOrConnectWithoutBillingCountryInput[]
    createMany?: OrderCreateManyBillingCountryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type stateUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput> | stateCreateWithoutCountryInput[] | stateUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: stateCreateOrConnectWithoutCountryInput | stateCreateOrConnectWithoutCountryInput[]
    createMany?: stateCreateManyCountryInputEnvelope
    connect?: stateWhereUniqueInput | stateWhereUniqueInput[]
  }

  export type cityUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput> | cityCreateWithoutCountryInput[] | cityUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: cityCreateOrConnectWithoutCountryInput | cityCreateOrConnectWithoutCountryInput[]
    createMany?: cityCreateManyCountryInputEnvelope
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
  }

  export type warehouseUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput> | warehouseCreateWithoutCountryInput[] | warehouseUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCountryInput | warehouseCreateOrConnectWithoutCountryInput[]
    createMany?: warehouseCreateManyCountryInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput> | highRtoCreateWithoutCountryInput[] | highRtoUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCountryInput | highRtoCreateOrConnectWithoutCountryInput[]
    createMany?: highRtoCreateManyCountryInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminUncheckedCreateNestedManyWithoutPermanentCountryInput = {
    create?: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput> | adminCreateWithoutPermanentCountryInput[] | adminUncheckedCreateWithoutPermanentCountryInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCountryInput | adminCreateOrConnectWithoutPermanentCountryInput[]
    createMany?: adminCreateManyPermanentCountryInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type productUncheckedCreateNestedManyWithoutOriginCountryInput = {
    create?: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput> | productCreateWithoutOriginCountryInput[] | productUncheckedCreateWithoutOriginCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutOriginCountryInput | productCreateOrConnectWithoutOriginCountryInput[]
    createMany?: productCreateManyOriginCountryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productUncheckedCreateNestedManyWithoutShippingCountryInput = {
    create?: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput> | productCreateWithoutShippingCountryInput[] | productUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutShippingCountryInput | productCreateOrConnectWithoutShippingCountryInput[]
    createMany?: productCreateManyShippingCountryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutShippingCountryInput = {
    create?: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput> | OrderCreateWithoutShippingCountryInput[] | OrderUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCountryInput | OrderCreateOrConnectWithoutShippingCountryInput[]
    createMany?: OrderCreateManyShippingCountryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutBillingCountryInput = {
    create?: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput> | OrderCreateWithoutBillingCountryInput[] | OrderUncheckedCreateWithoutBillingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCountryInput | OrderCreateOrConnectWithoutBillingCountryInput[]
    createMany?: OrderCreateManyBillingCountryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type stateUpdateManyWithoutCountryNestedInput = {
    create?: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput> | stateCreateWithoutCountryInput[] | stateUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: stateCreateOrConnectWithoutCountryInput | stateCreateOrConnectWithoutCountryInput[]
    upsert?: stateUpsertWithWhereUniqueWithoutCountryInput | stateUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: stateCreateManyCountryInputEnvelope
    set?: stateWhereUniqueInput | stateWhereUniqueInput[]
    disconnect?: stateWhereUniqueInput | stateWhereUniqueInput[]
    delete?: stateWhereUniqueInput | stateWhereUniqueInput[]
    connect?: stateWhereUniqueInput | stateWhereUniqueInput[]
    update?: stateUpdateWithWhereUniqueWithoutCountryInput | stateUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: stateUpdateManyWithWhereWithoutCountryInput | stateUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: stateScalarWhereInput | stateScalarWhereInput[]
  }

  export type cityUpdateManyWithoutCountryNestedInput = {
    create?: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput> | cityCreateWithoutCountryInput[] | cityUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: cityCreateOrConnectWithoutCountryInput | cityCreateOrConnectWithoutCountryInput[]
    upsert?: cityUpsertWithWhereUniqueWithoutCountryInput | cityUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: cityCreateManyCountryInputEnvelope
    set?: cityWhereUniqueInput | cityWhereUniqueInput[]
    disconnect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    delete?: cityWhereUniqueInput | cityWhereUniqueInput[]
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    update?: cityUpdateWithWhereUniqueWithoutCountryInput | cityUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: cityUpdateManyWithWhereWithoutCountryInput | cityUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: cityScalarWhereInput | cityScalarWhereInput[]
  }

  export type warehouseUpdateManyWithoutCountryNestedInput = {
    create?: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput> | warehouseCreateWithoutCountryInput[] | warehouseUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCountryInput | warehouseCreateOrConnectWithoutCountryInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutCountryInput | warehouseUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: warehouseCreateManyCountryInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutCountryInput | warehouseUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutCountryInput | warehouseUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUpdateManyWithoutCountryNestedInput = {
    create?: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput> | highRtoCreateWithoutCountryInput[] | highRtoUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCountryInput | highRtoCreateOrConnectWithoutCountryInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutCountryInput | highRtoUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: highRtoCreateManyCountryInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutCountryInput | highRtoUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutCountryInput | highRtoUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUpdateManyWithoutPermanentCountryNestedInput = {
    create?: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput> | adminCreateWithoutPermanentCountryInput[] | adminUncheckedCreateWithoutPermanentCountryInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCountryInput | adminCreateOrConnectWithoutPermanentCountryInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentCountryInput | adminUpsertWithWhereUniqueWithoutPermanentCountryInput[]
    createMany?: adminCreateManyPermanentCountryInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentCountryInput | adminUpdateWithWhereUniqueWithoutPermanentCountryInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentCountryInput | adminUpdateManyWithWhereWithoutPermanentCountryInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type productUpdateManyWithoutOriginCountryNestedInput = {
    create?: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput> | productCreateWithoutOriginCountryInput[] | productUncheckedCreateWithoutOriginCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutOriginCountryInput | productCreateOrConnectWithoutOriginCountryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutOriginCountryInput | productUpsertWithWhereUniqueWithoutOriginCountryInput[]
    createMany?: productCreateManyOriginCountryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutOriginCountryInput | productUpdateWithWhereUniqueWithoutOriginCountryInput[]
    updateMany?: productUpdateManyWithWhereWithoutOriginCountryInput | productUpdateManyWithWhereWithoutOriginCountryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type productUpdateManyWithoutShippingCountryNestedInput = {
    create?: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput> | productCreateWithoutShippingCountryInput[] | productUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutShippingCountryInput | productCreateOrConnectWithoutShippingCountryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutShippingCountryInput | productUpsertWithWhereUniqueWithoutShippingCountryInput[]
    createMany?: productCreateManyShippingCountryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutShippingCountryInput | productUpdateWithWhereUniqueWithoutShippingCountryInput[]
    updateMany?: productUpdateManyWithWhereWithoutShippingCountryInput | productUpdateManyWithWhereWithoutShippingCountryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutShippingCountryNestedInput = {
    create?: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput> | OrderCreateWithoutShippingCountryInput[] | OrderUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCountryInput | OrderCreateOrConnectWithoutShippingCountryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingCountryInput | OrderUpsertWithWhereUniqueWithoutShippingCountryInput[]
    createMany?: OrderCreateManyShippingCountryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingCountryInput | OrderUpdateWithWhereUniqueWithoutShippingCountryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingCountryInput | OrderUpdateManyWithWhereWithoutShippingCountryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutBillingCountryNestedInput = {
    create?: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput> | OrderCreateWithoutBillingCountryInput[] | OrderUncheckedCreateWithoutBillingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCountryInput | OrderCreateOrConnectWithoutBillingCountryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingCountryInput | OrderUpsertWithWhereUniqueWithoutBillingCountryInput[]
    createMany?: OrderCreateManyBillingCountryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingCountryInput | OrderUpdateWithWhereUniqueWithoutBillingCountryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingCountryInput | OrderUpdateManyWithWhereWithoutBillingCountryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type stateUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput> | stateCreateWithoutCountryInput[] | stateUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: stateCreateOrConnectWithoutCountryInput | stateCreateOrConnectWithoutCountryInput[]
    upsert?: stateUpsertWithWhereUniqueWithoutCountryInput | stateUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: stateCreateManyCountryInputEnvelope
    set?: stateWhereUniqueInput | stateWhereUniqueInput[]
    disconnect?: stateWhereUniqueInput | stateWhereUniqueInput[]
    delete?: stateWhereUniqueInput | stateWhereUniqueInput[]
    connect?: stateWhereUniqueInput | stateWhereUniqueInput[]
    update?: stateUpdateWithWhereUniqueWithoutCountryInput | stateUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: stateUpdateManyWithWhereWithoutCountryInput | stateUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: stateScalarWhereInput | stateScalarWhereInput[]
  }

  export type cityUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput> | cityCreateWithoutCountryInput[] | cityUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: cityCreateOrConnectWithoutCountryInput | cityCreateOrConnectWithoutCountryInput[]
    upsert?: cityUpsertWithWhereUniqueWithoutCountryInput | cityUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: cityCreateManyCountryInputEnvelope
    set?: cityWhereUniqueInput | cityWhereUniqueInput[]
    disconnect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    delete?: cityWhereUniqueInput | cityWhereUniqueInput[]
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    update?: cityUpdateWithWhereUniqueWithoutCountryInput | cityUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: cityUpdateManyWithWhereWithoutCountryInput | cityUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: cityScalarWhereInput | cityScalarWhereInput[]
  }

  export type warehouseUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput> | warehouseCreateWithoutCountryInput[] | warehouseUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCountryInput | warehouseCreateOrConnectWithoutCountryInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutCountryInput | warehouseUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: warehouseCreateManyCountryInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutCountryInput | warehouseUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutCountryInput | warehouseUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput> | highRtoCreateWithoutCountryInput[] | highRtoUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCountryInput | highRtoCreateOrConnectWithoutCountryInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutCountryInput | highRtoUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: highRtoCreateManyCountryInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutCountryInput | highRtoUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutCountryInput | highRtoUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUncheckedUpdateManyWithoutPermanentCountryNestedInput = {
    create?: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput> | adminCreateWithoutPermanentCountryInput[] | adminUncheckedCreateWithoutPermanentCountryInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCountryInput | adminCreateOrConnectWithoutPermanentCountryInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentCountryInput | adminUpsertWithWhereUniqueWithoutPermanentCountryInput[]
    createMany?: adminCreateManyPermanentCountryInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentCountryInput | adminUpdateWithWhereUniqueWithoutPermanentCountryInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentCountryInput | adminUpdateManyWithWhereWithoutPermanentCountryInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type productUncheckedUpdateManyWithoutOriginCountryNestedInput = {
    create?: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput> | productCreateWithoutOriginCountryInput[] | productUncheckedCreateWithoutOriginCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutOriginCountryInput | productCreateOrConnectWithoutOriginCountryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutOriginCountryInput | productUpsertWithWhereUniqueWithoutOriginCountryInput[]
    createMany?: productCreateManyOriginCountryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutOriginCountryInput | productUpdateWithWhereUniqueWithoutOriginCountryInput[]
    updateMany?: productUpdateManyWithWhereWithoutOriginCountryInput | productUpdateManyWithWhereWithoutOriginCountryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type productUncheckedUpdateManyWithoutShippingCountryNestedInput = {
    create?: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput> | productCreateWithoutShippingCountryInput[] | productUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: productCreateOrConnectWithoutShippingCountryInput | productCreateOrConnectWithoutShippingCountryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutShippingCountryInput | productUpsertWithWhereUniqueWithoutShippingCountryInput[]
    createMany?: productCreateManyShippingCountryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutShippingCountryInput | productUpdateWithWhereUniqueWithoutShippingCountryInput[]
    updateMany?: productUpdateManyWithWhereWithoutShippingCountryInput | productUpdateManyWithWhereWithoutShippingCountryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutShippingCountryNestedInput = {
    create?: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput> | OrderCreateWithoutShippingCountryInput[] | OrderUncheckedCreateWithoutShippingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCountryInput | OrderCreateOrConnectWithoutShippingCountryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingCountryInput | OrderUpsertWithWhereUniqueWithoutShippingCountryInput[]
    createMany?: OrderCreateManyShippingCountryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingCountryInput | OrderUpdateWithWhereUniqueWithoutShippingCountryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingCountryInput | OrderUpdateManyWithWhereWithoutShippingCountryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutBillingCountryNestedInput = {
    create?: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput> | OrderCreateWithoutBillingCountryInput[] | OrderUncheckedCreateWithoutBillingCountryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCountryInput | OrderCreateOrConnectWithoutBillingCountryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingCountryInput | OrderUpsertWithWhereUniqueWithoutBillingCountryInput[]
    createMany?: OrderCreateManyBillingCountryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingCountryInput | OrderUpdateWithWhereUniqueWithoutBillingCountryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingCountryInput | OrderUpdateManyWithWhereWithoutBillingCountryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type countryCreateNestedOneWithoutStatesInput = {
    create?: XOR<countryCreateWithoutStatesInput, countryUncheckedCreateWithoutStatesInput>
    connectOrCreate?: countryCreateOrConnectWithoutStatesInput
    connect?: countryWhereUniqueInput
  }

  export type cityCreateNestedManyWithoutStateInput = {
    create?: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput> | cityCreateWithoutStateInput[] | cityUncheckedCreateWithoutStateInput[]
    connectOrCreate?: cityCreateOrConnectWithoutStateInput | cityCreateOrConnectWithoutStateInput[]
    createMany?: cityCreateManyStateInputEnvelope
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
  }

  export type warehouseCreateNestedManyWithoutStateInput = {
    create?: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput> | warehouseCreateWithoutStateInput[] | warehouseUncheckedCreateWithoutStateInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutStateInput | warehouseCreateOrConnectWithoutStateInput[]
    createMany?: warehouseCreateManyStateInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoCreateNestedManyWithoutStateInput = {
    create?: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput> | highRtoCreateWithoutStateInput[] | highRtoUncheckedCreateWithoutStateInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutStateInput | highRtoCreateOrConnectWithoutStateInput[]
    createMany?: highRtoCreateManyStateInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminCreateNestedManyWithoutPermanentStateInput = {
    create?: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput> | adminCreateWithoutPermanentStateInput[] | adminUncheckedCreateWithoutPermanentStateInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentStateInput | adminCreateOrConnectWithoutPermanentStateInput[]
    createMany?: adminCreateManyPermanentStateInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutShippingStateInput = {
    create?: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput> | OrderCreateWithoutShippingStateInput[] | OrderUncheckedCreateWithoutShippingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingStateInput | OrderCreateOrConnectWithoutShippingStateInput[]
    createMany?: OrderCreateManyShippingStateInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutBillingStateInput = {
    create?: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput> | OrderCreateWithoutBillingStateInput[] | OrderUncheckedCreateWithoutBillingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingStateInput | OrderCreateOrConnectWithoutBillingStateInput[]
    createMany?: OrderCreateManyBillingStateInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type cityUncheckedCreateNestedManyWithoutStateInput = {
    create?: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput> | cityCreateWithoutStateInput[] | cityUncheckedCreateWithoutStateInput[]
    connectOrCreate?: cityCreateOrConnectWithoutStateInput | cityCreateOrConnectWithoutStateInput[]
    createMany?: cityCreateManyStateInputEnvelope
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
  }

  export type warehouseUncheckedCreateNestedManyWithoutStateInput = {
    create?: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput> | warehouseCreateWithoutStateInput[] | warehouseUncheckedCreateWithoutStateInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutStateInput | warehouseCreateOrConnectWithoutStateInput[]
    createMany?: warehouseCreateManyStateInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoUncheckedCreateNestedManyWithoutStateInput = {
    create?: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput> | highRtoCreateWithoutStateInput[] | highRtoUncheckedCreateWithoutStateInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutStateInput | highRtoCreateOrConnectWithoutStateInput[]
    createMany?: highRtoCreateManyStateInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminUncheckedCreateNestedManyWithoutPermanentStateInput = {
    create?: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput> | adminCreateWithoutPermanentStateInput[] | adminUncheckedCreateWithoutPermanentStateInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentStateInput | adminCreateOrConnectWithoutPermanentStateInput[]
    createMany?: adminCreateManyPermanentStateInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutShippingStateInput = {
    create?: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput> | OrderCreateWithoutShippingStateInput[] | OrderUncheckedCreateWithoutShippingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingStateInput | OrderCreateOrConnectWithoutShippingStateInput[]
    createMany?: OrderCreateManyShippingStateInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutBillingStateInput = {
    create?: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput> | OrderCreateWithoutBillingStateInput[] | OrderUncheckedCreateWithoutBillingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingStateInput | OrderCreateOrConnectWithoutBillingStateInput[]
    createMany?: OrderCreateManyBillingStateInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type countryUpdateOneRequiredWithoutStatesNestedInput = {
    create?: XOR<countryCreateWithoutStatesInput, countryUncheckedCreateWithoutStatesInput>
    connectOrCreate?: countryCreateOrConnectWithoutStatesInput
    upsert?: countryUpsertWithoutStatesInput
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutStatesInput, countryUpdateWithoutStatesInput>, countryUncheckedUpdateWithoutStatesInput>
  }

  export type cityUpdateManyWithoutStateNestedInput = {
    create?: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput> | cityCreateWithoutStateInput[] | cityUncheckedCreateWithoutStateInput[]
    connectOrCreate?: cityCreateOrConnectWithoutStateInput | cityCreateOrConnectWithoutStateInput[]
    upsert?: cityUpsertWithWhereUniqueWithoutStateInput | cityUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: cityCreateManyStateInputEnvelope
    set?: cityWhereUniqueInput | cityWhereUniqueInput[]
    disconnect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    delete?: cityWhereUniqueInput | cityWhereUniqueInput[]
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    update?: cityUpdateWithWhereUniqueWithoutStateInput | cityUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: cityUpdateManyWithWhereWithoutStateInput | cityUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: cityScalarWhereInput | cityScalarWhereInput[]
  }

  export type warehouseUpdateManyWithoutStateNestedInput = {
    create?: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput> | warehouseCreateWithoutStateInput[] | warehouseUncheckedCreateWithoutStateInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutStateInput | warehouseCreateOrConnectWithoutStateInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutStateInput | warehouseUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: warehouseCreateManyStateInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutStateInput | warehouseUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutStateInput | warehouseUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUpdateManyWithoutStateNestedInput = {
    create?: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput> | highRtoCreateWithoutStateInput[] | highRtoUncheckedCreateWithoutStateInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutStateInput | highRtoCreateOrConnectWithoutStateInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutStateInput | highRtoUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: highRtoCreateManyStateInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutStateInput | highRtoUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutStateInput | highRtoUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUpdateManyWithoutPermanentStateNestedInput = {
    create?: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput> | adminCreateWithoutPermanentStateInput[] | adminUncheckedCreateWithoutPermanentStateInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentStateInput | adminCreateOrConnectWithoutPermanentStateInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentStateInput | adminUpsertWithWhereUniqueWithoutPermanentStateInput[]
    createMany?: adminCreateManyPermanentStateInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentStateInput | adminUpdateWithWhereUniqueWithoutPermanentStateInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentStateInput | adminUpdateManyWithWhereWithoutPermanentStateInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutShippingStateNestedInput = {
    create?: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput> | OrderCreateWithoutShippingStateInput[] | OrderUncheckedCreateWithoutShippingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingStateInput | OrderCreateOrConnectWithoutShippingStateInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingStateInput | OrderUpsertWithWhereUniqueWithoutShippingStateInput[]
    createMany?: OrderCreateManyShippingStateInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingStateInput | OrderUpdateWithWhereUniqueWithoutShippingStateInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingStateInput | OrderUpdateManyWithWhereWithoutShippingStateInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutBillingStateNestedInput = {
    create?: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput> | OrderCreateWithoutBillingStateInput[] | OrderUncheckedCreateWithoutBillingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingStateInput | OrderCreateOrConnectWithoutBillingStateInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingStateInput | OrderUpsertWithWhereUniqueWithoutBillingStateInput[]
    createMany?: OrderCreateManyBillingStateInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingStateInput | OrderUpdateWithWhereUniqueWithoutBillingStateInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingStateInput | OrderUpdateManyWithWhereWithoutBillingStateInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type cityUncheckedUpdateManyWithoutStateNestedInput = {
    create?: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput> | cityCreateWithoutStateInput[] | cityUncheckedCreateWithoutStateInput[]
    connectOrCreate?: cityCreateOrConnectWithoutStateInput | cityCreateOrConnectWithoutStateInput[]
    upsert?: cityUpsertWithWhereUniqueWithoutStateInput | cityUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: cityCreateManyStateInputEnvelope
    set?: cityWhereUniqueInput | cityWhereUniqueInput[]
    disconnect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    delete?: cityWhereUniqueInput | cityWhereUniqueInput[]
    connect?: cityWhereUniqueInput | cityWhereUniqueInput[]
    update?: cityUpdateWithWhereUniqueWithoutStateInput | cityUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: cityUpdateManyWithWhereWithoutStateInput | cityUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: cityScalarWhereInput | cityScalarWhereInput[]
  }

  export type warehouseUncheckedUpdateManyWithoutStateNestedInput = {
    create?: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput> | warehouseCreateWithoutStateInput[] | warehouseUncheckedCreateWithoutStateInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutStateInput | warehouseCreateOrConnectWithoutStateInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutStateInput | warehouseUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: warehouseCreateManyStateInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutStateInput | warehouseUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutStateInput | warehouseUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUncheckedUpdateManyWithoutStateNestedInput = {
    create?: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput> | highRtoCreateWithoutStateInput[] | highRtoUncheckedCreateWithoutStateInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutStateInput | highRtoCreateOrConnectWithoutStateInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutStateInput | highRtoUpsertWithWhereUniqueWithoutStateInput[]
    createMany?: highRtoCreateManyStateInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutStateInput | highRtoUpdateWithWhereUniqueWithoutStateInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutStateInput | highRtoUpdateManyWithWhereWithoutStateInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUncheckedUpdateManyWithoutPermanentStateNestedInput = {
    create?: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput> | adminCreateWithoutPermanentStateInput[] | adminUncheckedCreateWithoutPermanentStateInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentStateInput | adminCreateOrConnectWithoutPermanentStateInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentStateInput | adminUpsertWithWhereUniqueWithoutPermanentStateInput[]
    createMany?: adminCreateManyPermanentStateInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentStateInput | adminUpdateWithWhereUniqueWithoutPermanentStateInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentStateInput | adminUpdateManyWithWhereWithoutPermanentStateInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutShippingStateNestedInput = {
    create?: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput> | OrderCreateWithoutShippingStateInput[] | OrderUncheckedCreateWithoutShippingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingStateInput | OrderCreateOrConnectWithoutShippingStateInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingStateInput | OrderUpsertWithWhereUniqueWithoutShippingStateInput[]
    createMany?: OrderCreateManyShippingStateInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingStateInput | OrderUpdateWithWhereUniqueWithoutShippingStateInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingStateInput | OrderUpdateManyWithWhereWithoutShippingStateInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutBillingStateNestedInput = {
    create?: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput> | OrderCreateWithoutBillingStateInput[] | OrderUncheckedCreateWithoutBillingStateInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingStateInput | OrderCreateOrConnectWithoutBillingStateInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingStateInput | OrderUpsertWithWhereUniqueWithoutBillingStateInput[]
    createMany?: OrderCreateManyBillingStateInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingStateInput | OrderUpdateWithWhereUniqueWithoutBillingStateInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingStateInput | OrderUpdateManyWithWhereWithoutBillingStateInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type stateCreateNestedOneWithoutCitiesInput = {
    create?: XOR<stateCreateWithoutCitiesInput, stateUncheckedCreateWithoutCitiesInput>
    connectOrCreate?: stateCreateOrConnectWithoutCitiesInput
    connect?: stateWhereUniqueInput
  }

  export type countryCreateNestedOneWithoutCitiesInput = {
    create?: XOR<countryCreateWithoutCitiesInput, countryUncheckedCreateWithoutCitiesInput>
    connectOrCreate?: countryCreateOrConnectWithoutCitiesInput
    connect?: countryWhereUniqueInput
  }

  export type warehouseCreateNestedManyWithoutCityInput = {
    create?: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput> | warehouseCreateWithoutCityInput[] | warehouseUncheckedCreateWithoutCityInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCityInput | warehouseCreateOrConnectWithoutCityInput[]
    createMany?: warehouseCreateManyCityInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoCreateNestedManyWithoutCityInput = {
    create?: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput> | highRtoCreateWithoutCityInput[] | highRtoUncheckedCreateWithoutCityInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCityInput | highRtoCreateOrConnectWithoutCityInput[]
    createMany?: highRtoCreateManyCityInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminCreateNestedManyWithoutPermanentCityInput = {
    create?: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput> | adminCreateWithoutPermanentCityInput[] | adminUncheckedCreateWithoutPermanentCityInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCityInput | adminCreateOrConnectWithoutPermanentCityInput[]
    createMany?: adminCreateManyPermanentCityInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutShippingCityInput = {
    create?: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput> | OrderCreateWithoutShippingCityInput[] | OrderUncheckedCreateWithoutShippingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCityInput | OrderCreateOrConnectWithoutShippingCityInput[]
    createMany?: OrderCreateManyShippingCityInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutBillingCityInput = {
    create?: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput> | OrderCreateWithoutBillingCityInput[] | OrderUncheckedCreateWithoutBillingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCityInput | OrderCreateOrConnectWithoutBillingCityInput[]
    createMany?: OrderCreateManyBillingCityInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type warehouseUncheckedCreateNestedManyWithoutCityInput = {
    create?: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput> | warehouseCreateWithoutCityInput[] | warehouseUncheckedCreateWithoutCityInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCityInput | warehouseCreateOrConnectWithoutCityInput[]
    createMany?: warehouseCreateManyCityInputEnvelope
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
  }

  export type highRtoUncheckedCreateNestedManyWithoutCityInput = {
    create?: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput> | highRtoCreateWithoutCityInput[] | highRtoUncheckedCreateWithoutCityInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCityInput | highRtoCreateOrConnectWithoutCityInput[]
    createMany?: highRtoCreateManyCityInputEnvelope
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
  }

  export type adminUncheckedCreateNestedManyWithoutPermanentCityInput = {
    create?: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput> | adminCreateWithoutPermanentCityInput[] | adminUncheckedCreateWithoutPermanentCityInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCityInput | adminCreateOrConnectWithoutPermanentCityInput[]
    createMany?: adminCreateManyPermanentCityInputEnvelope
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutShippingCityInput = {
    create?: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput> | OrderCreateWithoutShippingCityInput[] | OrderUncheckedCreateWithoutShippingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCityInput | OrderCreateOrConnectWithoutShippingCityInput[]
    createMany?: OrderCreateManyShippingCityInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutBillingCityInput = {
    create?: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput> | OrderCreateWithoutBillingCityInput[] | OrderUncheckedCreateWithoutBillingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCityInput | OrderCreateOrConnectWithoutBillingCityInput[]
    createMany?: OrderCreateManyBillingCityInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type stateUpdateOneRequiredWithoutCitiesNestedInput = {
    create?: XOR<stateCreateWithoutCitiesInput, stateUncheckedCreateWithoutCitiesInput>
    connectOrCreate?: stateCreateOrConnectWithoutCitiesInput
    upsert?: stateUpsertWithoutCitiesInput
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutCitiesInput, stateUpdateWithoutCitiesInput>, stateUncheckedUpdateWithoutCitiesInput>
  }

  export type countryUpdateOneRequiredWithoutCitiesNestedInput = {
    create?: XOR<countryCreateWithoutCitiesInput, countryUncheckedCreateWithoutCitiesInput>
    connectOrCreate?: countryCreateOrConnectWithoutCitiesInput
    upsert?: countryUpsertWithoutCitiesInput
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutCitiesInput, countryUpdateWithoutCitiesInput>, countryUncheckedUpdateWithoutCitiesInput>
  }

  export type warehouseUpdateManyWithoutCityNestedInput = {
    create?: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput> | warehouseCreateWithoutCityInput[] | warehouseUncheckedCreateWithoutCityInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCityInput | warehouseCreateOrConnectWithoutCityInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutCityInput | warehouseUpsertWithWhereUniqueWithoutCityInput[]
    createMany?: warehouseCreateManyCityInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutCityInput | warehouseUpdateWithWhereUniqueWithoutCityInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutCityInput | warehouseUpdateManyWithWhereWithoutCityInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUpdateManyWithoutCityNestedInput = {
    create?: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput> | highRtoCreateWithoutCityInput[] | highRtoUncheckedCreateWithoutCityInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCityInput | highRtoCreateOrConnectWithoutCityInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutCityInput | highRtoUpsertWithWhereUniqueWithoutCityInput[]
    createMany?: highRtoCreateManyCityInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutCityInput | highRtoUpdateWithWhereUniqueWithoutCityInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutCityInput | highRtoUpdateManyWithWhereWithoutCityInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUpdateManyWithoutPermanentCityNestedInput = {
    create?: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput> | adminCreateWithoutPermanentCityInput[] | adminUncheckedCreateWithoutPermanentCityInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCityInput | adminCreateOrConnectWithoutPermanentCityInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentCityInput | adminUpsertWithWhereUniqueWithoutPermanentCityInput[]
    createMany?: adminCreateManyPermanentCityInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentCityInput | adminUpdateWithWhereUniqueWithoutPermanentCityInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentCityInput | adminUpdateManyWithWhereWithoutPermanentCityInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutShippingCityNestedInput = {
    create?: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput> | OrderCreateWithoutShippingCityInput[] | OrderUncheckedCreateWithoutShippingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCityInput | OrderCreateOrConnectWithoutShippingCityInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingCityInput | OrderUpsertWithWhereUniqueWithoutShippingCityInput[]
    createMany?: OrderCreateManyShippingCityInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingCityInput | OrderUpdateWithWhereUniqueWithoutShippingCityInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingCityInput | OrderUpdateManyWithWhereWithoutShippingCityInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutBillingCityNestedInput = {
    create?: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput> | OrderCreateWithoutBillingCityInput[] | OrderUncheckedCreateWithoutBillingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCityInput | OrderCreateOrConnectWithoutBillingCityInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingCityInput | OrderUpsertWithWhereUniqueWithoutBillingCityInput[]
    createMany?: OrderCreateManyBillingCityInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingCityInput | OrderUpdateWithWhereUniqueWithoutBillingCityInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingCityInput | OrderUpdateManyWithWhereWithoutBillingCityInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type warehouseUncheckedUpdateManyWithoutCityNestedInput = {
    create?: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput> | warehouseCreateWithoutCityInput[] | warehouseUncheckedCreateWithoutCityInput[]
    connectOrCreate?: warehouseCreateOrConnectWithoutCityInput | warehouseCreateOrConnectWithoutCityInput[]
    upsert?: warehouseUpsertWithWhereUniqueWithoutCityInput | warehouseUpsertWithWhereUniqueWithoutCityInput[]
    createMany?: warehouseCreateManyCityInputEnvelope
    set?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    disconnect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    delete?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    connect?: warehouseWhereUniqueInput | warehouseWhereUniqueInput[]
    update?: warehouseUpdateWithWhereUniqueWithoutCityInput | warehouseUpdateWithWhereUniqueWithoutCityInput[]
    updateMany?: warehouseUpdateManyWithWhereWithoutCityInput | warehouseUpdateManyWithWhereWithoutCityInput[]
    deleteMany?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
  }

  export type highRtoUncheckedUpdateManyWithoutCityNestedInput = {
    create?: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput> | highRtoCreateWithoutCityInput[] | highRtoUncheckedCreateWithoutCityInput[]
    connectOrCreate?: highRtoCreateOrConnectWithoutCityInput | highRtoCreateOrConnectWithoutCityInput[]
    upsert?: highRtoUpsertWithWhereUniqueWithoutCityInput | highRtoUpsertWithWhereUniqueWithoutCityInput[]
    createMany?: highRtoCreateManyCityInputEnvelope
    set?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    disconnect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    delete?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    connect?: highRtoWhereUniqueInput | highRtoWhereUniqueInput[]
    update?: highRtoUpdateWithWhereUniqueWithoutCityInput | highRtoUpdateWithWhereUniqueWithoutCityInput[]
    updateMany?: highRtoUpdateManyWithWhereWithoutCityInput | highRtoUpdateManyWithWhereWithoutCityInput[]
    deleteMany?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
  }

  export type adminUncheckedUpdateManyWithoutPermanentCityNestedInput = {
    create?: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput> | adminCreateWithoutPermanentCityInput[] | adminUncheckedCreateWithoutPermanentCityInput[]
    connectOrCreate?: adminCreateOrConnectWithoutPermanentCityInput | adminCreateOrConnectWithoutPermanentCityInput[]
    upsert?: adminUpsertWithWhereUniqueWithoutPermanentCityInput | adminUpsertWithWhereUniqueWithoutPermanentCityInput[]
    createMany?: adminCreateManyPermanentCityInputEnvelope
    set?: adminWhereUniqueInput | adminWhereUniqueInput[]
    disconnect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    delete?: adminWhereUniqueInput | adminWhereUniqueInput[]
    connect?: adminWhereUniqueInput | adminWhereUniqueInput[]
    update?: adminUpdateWithWhereUniqueWithoutPermanentCityInput | adminUpdateWithWhereUniqueWithoutPermanentCityInput[]
    updateMany?: adminUpdateManyWithWhereWithoutPermanentCityInput | adminUpdateManyWithWhereWithoutPermanentCityInput[]
    deleteMany?: adminScalarWhereInput | adminScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutShippingCityNestedInput = {
    create?: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput> | OrderCreateWithoutShippingCityInput[] | OrderUncheckedCreateWithoutShippingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingCityInput | OrderCreateOrConnectWithoutShippingCityInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingCityInput | OrderUpsertWithWhereUniqueWithoutShippingCityInput[]
    createMany?: OrderCreateManyShippingCityInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingCityInput | OrderUpdateWithWhereUniqueWithoutShippingCityInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingCityInput | OrderUpdateManyWithWhereWithoutShippingCityInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutBillingCityNestedInput = {
    create?: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput> | OrderCreateWithoutBillingCityInput[] | OrderUncheckedCreateWithoutBillingCityInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingCityInput | OrderCreateOrConnectWithoutBillingCityInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingCityInput | OrderUpsertWithWhereUniqueWithoutBillingCityInput[]
    createMany?: OrderCreateManyBillingCityInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingCityInput | OrderUpdateWithWhereUniqueWithoutBillingCityInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingCityInput | OrderUpdateManyWithWhereWithoutBillingCityInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type countryCreateNestedOneWithoutWarehousesInput = {
    create?: XOR<countryCreateWithoutWarehousesInput, countryUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: countryCreateOrConnectWithoutWarehousesInput
    connect?: countryWhereUniqueInput
  }

  export type stateCreateNestedOneWithoutWarehousesInput = {
    create?: XOR<stateCreateWithoutWarehousesInput, stateUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: stateCreateOrConnectWithoutWarehousesInput
    connect?: stateWhereUniqueInput
  }

  export type cityCreateNestedOneWithoutWarehousesInput = {
    create?: XOR<cityCreateWithoutWarehousesInput, cityUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: cityCreateOrConnectWithoutWarehousesInput
    connect?: cityWhereUniqueInput
  }

  export type countryUpdateOneWithoutWarehousesNestedInput = {
    create?: XOR<countryCreateWithoutWarehousesInput, countryUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: countryCreateOrConnectWithoutWarehousesInput
    upsert?: countryUpsertWithoutWarehousesInput
    disconnect?: countryWhereInput | boolean
    delete?: countryWhereInput | boolean
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutWarehousesInput, countryUpdateWithoutWarehousesInput>, countryUncheckedUpdateWithoutWarehousesInput>
  }

  export type stateUpdateOneWithoutWarehousesNestedInput = {
    create?: XOR<stateCreateWithoutWarehousesInput, stateUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: stateCreateOrConnectWithoutWarehousesInput
    upsert?: stateUpsertWithoutWarehousesInput
    disconnect?: stateWhereInput | boolean
    delete?: stateWhereInput | boolean
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutWarehousesInput, stateUpdateWithoutWarehousesInput>, stateUncheckedUpdateWithoutWarehousesInput>
  }

  export type cityUpdateOneWithoutWarehousesNestedInput = {
    create?: XOR<cityCreateWithoutWarehousesInput, cityUncheckedCreateWithoutWarehousesInput>
    connectOrCreate?: cityCreateOrConnectWithoutWarehousesInput
    upsert?: cityUpsertWithoutWarehousesInput
    disconnect?: cityWhereInput | boolean
    delete?: cityWhereInput | boolean
    connect?: cityWhereUniqueInput
    update?: XOR<XOR<cityUpdateToOneWithWhereWithoutWarehousesInput, cityUpdateWithoutWarehousesInput>, cityUncheckedUpdateWithoutWarehousesInput>
  }

  export type productCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput> | productCreateWithoutCategoryInput[] | productUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productCreateOrConnectWithoutCategoryInput | productCreateOrConnectWithoutCategoryInput[]
    createMany?: productCreateManyCategoryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productRequestCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput> | productRequestCreateWithoutCategoryInput[] | productRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productRequestCreateOrConnectWithoutCategoryInput | productRequestCreateOrConnectWithoutCategoryInput[]
    createMany?: productRequestCreateManyCategoryInputEnvelope
    connect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
  }

  export type productUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput> | productCreateWithoutCategoryInput[] | productUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productCreateOrConnectWithoutCategoryInput | productCreateOrConnectWithoutCategoryInput[]
    createMany?: productCreateManyCategoryInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productRequestUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput> | productRequestCreateWithoutCategoryInput[] | productRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productRequestCreateOrConnectWithoutCategoryInput | productRequestCreateOrConnectWithoutCategoryInput[]
    createMany?: productRequestCreateManyCategoryInputEnvelope
    connect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
  }

  export type productUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput> | productCreateWithoutCategoryInput[] | productUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productCreateOrConnectWithoutCategoryInput | productCreateOrConnectWithoutCategoryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutCategoryInput | productUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productCreateManyCategoryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutCategoryInput | productUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productUpdateManyWithWhereWithoutCategoryInput | productUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type productRequestUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput> | productRequestCreateWithoutCategoryInput[] | productRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productRequestCreateOrConnectWithoutCategoryInput | productRequestCreateOrConnectWithoutCategoryInput[]
    upsert?: productRequestUpsertWithWhereUniqueWithoutCategoryInput | productRequestUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productRequestCreateManyCategoryInputEnvelope
    set?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    disconnect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    delete?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    connect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    update?: productRequestUpdateWithWhereUniqueWithoutCategoryInput | productRequestUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productRequestUpdateManyWithWhereWithoutCategoryInput | productRequestUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productRequestScalarWhereInput | productRequestScalarWhereInput[]
  }

  export type productUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput> | productCreateWithoutCategoryInput[] | productUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productCreateOrConnectWithoutCategoryInput | productCreateOrConnectWithoutCategoryInput[]
    upsert?: productUpsertWithWhereUniqueWithoutCategoryInput | productUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productCreateManyCategoryInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutCategoryInput | productUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productUpdateManyWithWhereWithoutCategoryInput | productUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type productRequestUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput> | productRequestCreateWithoutCategoryInput[] | productRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: productRequestCreateOrConnectWithoutCategoryInput | productRequestCreateOrConnectWithoutCategoryInput[]
    upsert?: productRequestUpsertWithWhereUniqueWithoutCategoryInput | productRequestUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: productRequestCreateManyCategoryInputEnvelope
    set?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    disconnect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    delete?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    connect?: productRequestWhereUniqueInput | productRequestWhereUniqueInput[]
    update?: productRequestUpdateWithWhereUniqueWithoutCategoryInput | productRequestUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: productRequestUpdateManyWithWhereWithoutCategoryInput | productRequestUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: productRequestScalarWhereInput | productRequestScalarWhereInput[]
  }

  export type productCreateNestedManyWithoutBrandInput = {
    create?: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput> | productCreateWithoutBrandInput[] | productUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: productCreateOrConnectWithoutBrandInput | productCreateOrConnectWithoutBrandInput[]
    createMany?: productCreateManyBrandInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput> | productCreateWithoutBrandInput[] | productUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: productCreateOrConnectWithoutBrandInput | productCreateOrConnectWithoutBrandInput[]
    createMany?: productCreateManyBrandInputEnvelope
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
  }

  export type productUpdateManyWithoutBrandNestedInput = {
    create?: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput> | productCreateWithoutBrandInput[] | productUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: productCreateOrConnectWithoutBrandInput | productCreateOrConnectWithoutBrandInput[]
    upsert?: productUpsertWithWhereUniqueWithoutBrandInput | productUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: productCreateManyBrandInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutBrandInput | productUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: productUpdateManyWithWhereWithoutBrandInput | productUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type productUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput> | productCreateWithoutBrandInput[] | productUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: productCreateOrConnectWithoutBrandInput | productCreateOrConnectWithoutBrandInput[]
    upsert?: productUpsertWithWhereUniqueWithoutBrandInput | productUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: productCreateManyBrandInputEnvelope
    set?: productWhereUniqueInput | productWhereUniqueInput[]
    disconnect?: productWhereUniqueInput | productWhereUniqueInput[]
    delete?: productWhereUniqueInput | productWhereUniqueInput[]
    connect?: productWhereUniqueInput | productWhereUniqueInput[]
    update?: productUpdateWithWhereUniqueWithoutBrandInput | productUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: productUpdateManyWithWhereWithoutBrandInput | productUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: productScalarWhereInput | productScalarWhereInput[]
  }

  export type categoryCreateNestedOneWithoutProductRequestsInput = {
    create?: XOR<categoryCreateWithoutProductRequestsInput, categoryUncheckedCreateWithoutProductRequestsInput>
    connectOrCreate?: categoryCreateOrConnectWithoutProductRequestsInput
    connect?: categoryWhereUniqueInput
  }

  export type categoryUpdateOneRequiredWithoutProductRequestsNestedInput = {
    create?: XOR<categoryCreateWithoutProductRequestsInput, categoryUncheckedCreateWithoutProductRequestsInput>
    connectOrCreate?: categoryCreateOrConnectWithoutProductRequestsInput
    upsert?: categoryUpsertWithoutProductRequestsInput
    connect?: categoryWhereUniqueInput
    update?: XOR<XOR<categoryUpdateToOneWithWhereWithoutProductRequestsInput, categoryUpdateWithoutProductRequestsInput>, categoryUncheckedUpdateWithoutProductRequestsInput>
  }

  export type categoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<categoryCreateWithoutProductsInput, categoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoryCreateOrConnectWithoutProductsInput
    connect?: categoryWhereUniqueInput
  }

  export type brandCreateNestedOneWithoutProductsInput = {
    create?: XOR<brandCreateWithoutProductsInput, brandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: brandCreateOrConnectWithoutProductsInput
    connect?: brandWhereUniqueInput
  }

  export type countryCreateNestedOneWithoutOriginProductsInput = {
    create?: XOR<countryCreateWithoutOriginProductsInput, countryUncheckedCreateWithoutOriginProductsInput>
    connectOrCreate?: countryCreateOrConnectWithoutOriginProductsInput
    connect?: countryWhereUniqueInput
  }

  export type countryCreateNestedOneWithoutShippingProductsInput = {
    create?: XOR<countryCreateWithoutShippingProductsInput, countryUncheckedCreateWithoutShippingProductsInput>
    connectOrCreate?: countryCreateOrConnectWithoutShippingProductsInput
    connect?: countryWhereUniqueInput
  }

  export type productVariantCreateNestedManyWithoutProductInput = {
    create?: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput> | productVariantCreateWithoutProductInput[] | productVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: productVariantCreateOrConnectWithoutProductInput | productVariantCreateOrConnectWithoutProductInput[]
    createMany?: productVariantCreateManyProductInputEnvelope
    connect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type productVariantUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput> | productVariantCreateWithoutProductInput[] | productVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: productVariantCreateOrConnectWithoutProductInput | productVariantCreateOrConnectWithoutProductInput[]
    createMany?: productVariantCreateManyProductInputEnvelope
    connect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type categoryUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<categoryCreateWithoutProductsInput, categoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoryCreateOrConnectWithoutProductsInput
    upsert?: categoryUpsertWithoutProductsInput
    connect?: categoryWhereUniqueInput
    update?: XOR<XOR<categoryUpdateToOneWithWhereWithoutProductsInput, categoryUpdateWithoutProductsInput>, categoryUncheckedUpdateWithoutProductsInput>
  }

  export type brandUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<brandCreateWithoutProductsInput, brandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: brandCreateOrConnectWithoutProductsInput
    upsert?: brandUpsertWithoutProductsInput
    connect?: brandWhereUniqueInput
    update?: XOR<XOR<brandUpdateToOneWithWhereWithoutProductsInput, brandUpdateWithoutProductsInput>, brandUncheckedUpdateWithoutProductsInput>
  }

  export type countryUpdateOneRequiredWithoutOriginProductsNestedInput = {
    create?: XOR<countryCreateWithoutOriginProductsInput, countryUncheckedCreateWithoutOriginProductsInput>
    connectOrCreate?: countryCreateOrConnectWithoutOriginProductsInput
    upsert?: countryUpsertWithoutOriginProductsInput
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutOriginProductsInput, countryUpdateWithoutOriginProductsInput>, countryUncheckedUpdateWithoutOriginProductsInput>
  }

  export type countryUpdateOneRequiredWithoutShippingProductsNestedInput = {
    create?: XOR<countryCreateWithoutShippingProductsInput, countryUncheckedCreateWithoutShippingProductsInput>
    connectOrCreate?: countryCreateOrConnectWithoutShippingProductsInput
    upsert?: countryUpsertWithoutShippingProductsInput
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutShippingProductsInput, countryUpdateWithoutShippingProductsInput>, countryUncheckedUpdateWithoutShippingProductsInput>
  }

  export type productVariantUpdateManyWithoutProductNestedInput = {
    create?: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput> | productVariantCreateWithoutProductInput[] | productVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: productVariantCreateOrConnectWithoutProductInput | productVariantCreateOrConnectWithoutProductInput[]
    upsert?: productVariantUpsertWithWhereUniqueWithoutProductInput | productVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: productVariantCreateManyProductInputEnvelope
    set?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    disconnect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    delete?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    connect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    update?: productVariantUpdateWithWhereUniqueWithoutProductInput | productVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: productVariantUpdateManyWithWhereWithoutProductInput | productVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: productVariantScalarWhereInput | productVariantScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type productVariantUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput> | productVariantCreateWithoutProductInput[] | productVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: productVariantCreateOrConnectWithoutProductInput | productVariantCreateOrConnectWithoutProductInput[]
    upsert?: productVariantUpsertWithWhereUniqueWithoutProductInput | productVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: productVariantCreateManyProductInputEnvelope
    set?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    disconnect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    delete?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    connect?: productVariantWhereUniqueInput | productVariantWhereUniqueInput[]
    update?: productVariantUpdateWithWhereUniqueWithoutProductInput | productVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: productVariantUpdateManyWithWhereWithoutProductInput | productVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: productVariantScalarWhereInput | productVariantScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type productCreateNestedOneWithoutVariantsInput = {
    create?: XOR<productCreateWithoutVariantsInput, productUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: productCreateOrConnectWithoutVariantsInput
    connect?: productWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutVariantInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type productUpdateOneRequiredWithoutVariantsNestedInput = {
    create?: XOR<productCreateWithoutVariantsInput, productUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: productCreateOrConnectWithoutVariantsInput
    upsert?: productUpsertWithoutVariantsInput
    connect?: productWhereUniqueInput
    update?: XOR<XOR<productUpdateToOneWithWhereWithoutVariantsInput, productUpdateWithoutVariantsInput>, productUncheckedUpdateWithoutVariantsInput>
  }

  export type OrderItemUpdateManyWithoutVariantNestedInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutVariantInput | OrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutVariantInput | OrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutVariantInput | OrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput> | OrderItemCreateWithoutVariantInput[] | OrderItemUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutVariantInput | OrderItemCreateOrConnectWithoutVariantInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutVariantInput | OrderItemUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: OrderItemCreateManyVariantInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutVariantInput | OrderItemUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutVariantInput | OrderItemUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type countryCreateNestedOneWithoutHighRtosInput = {
    create?: XOR<countryCreateWithoutHighRtosInput, countryUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: countryCreateOrConnectWithoutHighRtosInput
    connect?: countryWhereUniqueInput
  }

  export type stateCreateNestedOneWithoutHighRtosInput = {
    create?: XOR<stateCreateWithoutHighRtosInput, stateUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: stateCreateOrConnectWithoutHighRtosInput
    connect?: stateWhereUniqueInput
  }

  export type cityCreateNestedOneWithoutHighRtosInput = {
    create?: XOR<cityCreateWithoutHighRtosInput, cityUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: cityCreateOrConnectWithoutHighRtosInput
    connect?: cityWhereUniqueInput
  }

  export type countryUpdateOneWithoutHighRtosNestedInput = {
    create?: XOR<countryCreateWithoutHighRtosInput, countryUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: countryCreateOrConnectWithoutHighRtosInput
    upsert?: countryUpsertWithoutHighRtosInput
    disconnect?: countryWhereInput | boolean
    delete?: countryWhereInput | boolean
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutHighRtosInput, countryUpdateWithoutHighRtosInput>, countryUncheckedUpdateWithoutHighRtosInput>
  }

  export type stateUpdateOneWithoutHighRtosNestedInput = {
    create?: XOR<stateCreateWithoutHighRtosInput, stateUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: stateCreateOrConnectWithoutHighRtosInput
    upsert?: stateUpsertWithoutHighRtosInput
    disconnect?: stateWhereInput | boolean
    delete?: stateWhereInput | boolean
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutHighRtosInput, stateUpdateWithoutHighRtosInput>, stateUncheckedUpdateWithoutHighRtosInput>
  }

  export type cityUpdateOneWithoutHighRtosNestedInput = {
    create?: XOR<cityCreateWithoutHighRtosInput, cityUncheckedCreateWithoutHighRtosInput>
    connectOrCreate?: cityCreateOrConnectWithoutHighRtosInput
    upsert?: cityUpsertWithoutHighRtosInput
    disconnect?: cityWhereInput | boolean
    delete?: cityWhereInput | boolean
    connect?: cityWhereUniqueInput
    update?: XOR<XOR<cityUpdateToOneWithWhereWithoutHighRtosInput, cityUpdateWithoutHighRtosInput>, cityUncheckedUpdateWithoutHighRtosInput>
  }

  export type OrderCreateNestedManyWithoutPaymentInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput> | OrderCreateWithoutPaymentInput[] | OrderUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput | OrderCreateOrConnectWithoutPaymentInput[]
    createMany?: OrderCreateManyPaymentInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutPaymentInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput> | OrderCreateWithoutPaymentInput[] | OrderUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput | OrderCreateOrConnectWithoutPaymentInput[]
    createMany?: OrderCreateManyPaymentInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput> | OrderCreateWithoutPaymentInput[] | OrderUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput | OrderCreateOrConnectWithoutPaymentInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutPaymentInput | OrderUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: OrderCreateManyPaymentInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutPaymentInput | OrderUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutPaymentInput | OrderUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput> | OrderCreateWithoutPaymentInput[] | OrderUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput | OrderCreateOrConnectWithoutPaymentInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutPaymentInput | OrderUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: OrderCreateManyPaymentInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutPaymentInput | OrderUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutPaymentInput | OrderUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type countryCreateNestedOneWithoutShippingOrdersInput = {
    create?: XOR<countryCreateWithoutShippingOrdersInput, countryUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: countryCreateOrConnectWithoutShippingOrdersInput
    connect?: countryWhereUniqueInput
  }

  export type stateCreateNestedOneWithoutShippingOrdersInput = {
    create?: XOR<stateCreateWithoutShippingOrdersInput, stateUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: stateCreateOrConnectWithoutShippingOrdersInput
    connect?: stateWhereUniqueInput
  }

  export type cityCreateNestedOneWithoutShippingOrdersInput = {
    create?: XOR<cityCreateWithoutShippingOrdersInput, cityUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: cityCreateOrConnectWithoutShippingOrdersInput
    connect?: cityWhereUniqueInput
  }

  export type countryCreateNestedOneWithoutBillingOrdersInput = {
    create?: XOR<countryCreateWithoutBillingOrdersInput, countryUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: countryCreateOrConnectWithoutBillingOrdersInput
    connect?: countryWhereUniqueInput
  }

  export type stateCreateNestedOneWithoutBillingOrdersInput = {
    create?: XOR<stateCreateWithoutBillingOrdersInput, stateUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: stateCreateOrConnectWithoutBillingOrdersInput
    connect?: stateWhereUniqueInput
  }

  export type cityCreateNestedOneWithoutBillingOrdersInput = {
    create?: XOR<cityCreateWithoutBillingOrdersInput, cityUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: cityCreateOrConnectWithoutBillingOrdersInput
    connect?: cityWhereUniqueInput
  }

  export type PaymentCreateNestedOneWithoutOrdersInput = {
    create?: XOR<PaymentCreateWithoutOrdersInput, PaymentUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrdersInput
    connect?: PaymentWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type countryUpdateOneWithoutShippingOrdersNestedInput = {
    create?: XOR<countryCreateWithoutShippingOrdersInput, countryUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: countryCreateOrConnectWithoutShippingOrdersInput
    upsert?: countryUpsertWithoutShippingOrdersInput
    disconnect?: countryWhereInput | boolean
    delete?: countryWhereInput | boolean
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutShippingOrdersInput, countryUpdateWithoutShippingOrdersInput>, countryUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type stateUpdateOneWithoutShippingOrdersNestedInput = {
    create?: XOR<stateCreateWithoutShippingOrdersInput, stateUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: stateCreateOrConnectWithoutShippingOrdersInput
    upsert?: stateUpsertWithoutShippingOrdersInput
    disconnect?: stateWhereInput | boolean
    delete?: stateWhereInput | boolean
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutShippingOrdersInput, stateUpdateWithoutShippingOrdersInput>, stateUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type cityUpdateOneWithoutShippingOrdersNestedInput = {
    create?: XOR<cityCreateWithoutShippingOrdersInput, cityUncheckedCreateWithoutShippingOrdersInput>
    connectOrCreate?: cityCreateOrConnectWithoutShippingOrdersInput
    upsert?: cityUpsertWithoutShippingOrdersInput
    disconnect?: cityWhereInput | boolean
    delete?: cityWhereInput | boolean
    connect?: cityWhereUniqueInput
    update?: XOR<XOR<cityUpdateToOneWithWhereWithoutShippingOrdersInput, cityUpdateWithoutShippingOrdersInput>, cityUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type countryUpdateOneWithoutBillingOrdersNestedInput = {
    create?: XOR<countryCreateWithoutBillingOrdersInput, countryUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: countryCreateOrConnectWithoutBillingOrdersInput
    upsert?: countryUpsertWithoutBillingOrdersInput
    disconnect?: countryWhereInput | boolean
    delete?: countryWhereInput | boolean
    connect?: countryWhereUniqueInput
    update?: XOR<XOR<countryUpdateToOneWithWhereWithoutBillingOrdersInput, countryUpdateWithoutBillingOrdersInput>, countryUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type stateUpdateOneWithoutBillingOrdersNestedInput = {
    create?: XOR<stateCreateWithoutBillingOrdersInput, stateUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: stateCreateOrConnectWithoutBillingOrdersInput
    upsert?: stateUpsertWithoutBillingOrdersInput
    disconnect?: stateWhereInput | boolean
    delete?: stateWhereInput | boolean
    connect?: stateWhereUniqueInput
    update?: XOR<XOR<stateUpdateToOneWithWhereWithoutBillingOrdersInput, stateUpdateWithoutBillingOrdersInput>, stateUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type cityUpdateOneWithoutBillingOrdersNestedInput = {
    create?: XOR<cityCreateWithoutBillingOrdersInput, cityUncheckedCreateWithoutBillingOrdersInput>
    connectOrCreate?: cityCreateOrConnectWithoutBillingOrdersInput
    upsert?: cityUpsertWithoutBillingOrdersInput
    disconnect?: cityWhereInput | boolean
    delete?: cityWhereInput | boolean
    connect?: cityWhereUniqueInput
    update?: XOR<XOR<cityUpdateToOneWithWhereWithoutBillingOrdersInput, cityUpdateWithoutBillingOrdersInput>, cityUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type PaymentUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<PaymentCreateWithoutOrdersInput, PaymentUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrdersInput
    upsert?: PaymentUpsertWithoutOrdersInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutOrdersInput, PaymentUpdateWithoutOrdersInput>, PaymentUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type productCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<productCreateWithoutOrderItemsInput, productUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: productCreateOrConnectWithoutOrderItemsInput
    connect?: productWhereUniqueInput
  }

  export type productVariantCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<productVariantCreateWithoutOrderItemsInput, productVariantUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: productVariantCreateOrConnectWithoutOrderItemsInput
    connect?: productVariantWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    upsert?: OrderUpsertWithoutItemsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutItemsInput, OrderUpdateWithoutItemsInput>, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type productUpdateOneWithoutOrderItemsNestedInput = {
    create?: XOR<productCreateWithoutOrderItemsInput, productUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: productCreateOrConnectWithoutOrderItemsInput
    upsert?: productUpsertWithoutOrderItemsInput
    disconnect?: productWhereInput | boolean
    delete?: productWhereInput | boolean
    connect?: productWhereUniqueInput
    update?: XOR<XOR<productUpdateToOneWithWhereWithoutOrderItemsInput, productUpdateWithoutOrderItemsInput>, productUncheckedUpdateWithoutOrderItemsInput>
  }

  export type productVariantUpdateOneWithoutOrderItemsNestedInput = {
    create?: XOR<productVariantCreateWithoutOrderItemsInput, productVariantUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: productVariantCreateOrConnectWithoutOrderItemsInput
    upsert?: productVariantUpsertWithoutOrderItemsInput
    disconnect?: productVariantWhereInput | boolean
    delete?: productVariantWhereInput | boolean
    connect?: productVariantWhereUniqueInput
    update?: XOR<XOR<productVariantUpdateToOneWithWhereWithoutOrderItemsInput, productVariantUpdateWithoutOrderItemsInput>, productVariantUncheckedUpdateWithoutOrderItemsInput>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type cityCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutAdminsInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutAdminsInput, cityUncheckedCreateWithoutAdminsInput>
  }

  export type stateCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutAdminsInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutAdminsInput, stateUncheckedCreateWithoutAdminsInput>
  }

  export type countryCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutAdminsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutAdminsInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutAdminsInput, countryUncheckedCreateWithoutAdminsInput>
  }

  export type adminStaffCreateWithoutAdminInput = {
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminStaffUncheckedCreateWithoutAdminInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminStaffCreateOrConnectWithoutAdminInput = {
    where: adminStaffWhereUniqueInput
    create: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput>
  }

  export type adminStaffCreateManyAdminInputEnvelope = {
    data: adminStaffCreateManyAdminInput | adminStaffCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type companyDetailCreateWithoutAdminInput = {
    companyName?: string | null
    brandName?: string | null
    brandShortName?: string | null
    billingAddress?: string | null
    billingPincode?: string | null
    billingState?: string | null
    billingCity?: string | null
    businessType?: string | null
    clientEntryType?: string | null
    gstNumber?: string | null
    companyPanNumber?: string | null
    aadharNumber?: string | null
    gstDocument?: string | null
    panCardHolderName?: string | null
    aadharCardHolderName?: string | null
    panCardImage?: string | null
    aadharCardImage?: string | null
    additionalDocumentUpload?: string | null
    documentId?: string | null
    documentName?: string | null
    documentImage?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type companyDetailUncheckedCreateWithoutAdminInput = {
    id?: number
    companyName?: string | null
    brandName?: string | null
    brandShortName?: string | null
    billingAddress?: string | null
    billingPincode?: string | null
    billingState?: string | null
    billingCity?: string | null
    businessType?: string | null
    clientEntryType?: string | null
    gstNumber?: string | null
    companyPanNumber?: string | null
    aadharNumber?: string | null
    gstDocument?: string | null
    panCardHolderName?: string | null
    aadharCardHolderName?: string | null
    panCardImage?: string | null
    aadharCardImage?: string | null
    additionalDocumentUpload?: string | null
    documentId?: string | null
    documentName?: string | null
    documentImage?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type companyDetailCreateOrConnectWithoutAdminInput = {
    where: companyDetailWhereUniqueInput
    create: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
  }

  export type bankAccountCreateWithoutAdminInput = {
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type bankAccountUncheckedCreateWithoutAdminInput = {
    id?: number
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type bankAccountCreateOrConnectWithoutAdminInput = {
    where: bankAccountWhereUniqueInput
    create: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput>
  }

  export type bankAccountCreateManyAdminInputEnvelope = {
    data: bankAccountCreateManyAdminInput | bankAccountCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type adminHasPermissionCreateWithoutAdminInput = {
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permission: permissionCreateNestedOneWithoutAdminPermissionsInput
  }

  export type adminHasPermissionUncheckedCreateWithoutAdminInput = {
    id?: number
    permissionId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionCreateOrConnectWithoutAdminInput = {
    where: adminHasPermissionWhereUniqueInput
    create: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput>
  }

  export type adminHasPermissionCreateManyAdminInputEnvelope = {
    data: adminHasPermissionCreateManyAdminInput | adminHasPermissionCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type cityUpsertWithoutAdminsInput = {
    update: XOR<cityUpdateWithoutAdminsInput, cityUncheckedUpdateWithoutAdminsInput>
    create: XOR<cityCreateWithoutAdminsInput, cityUncheckedCreateWithoutAdminsInput>
    where?: cityWhereInput
  }

  export type cityUpdateToOneWithWhereWithoutAdminsInput = {
    where?: cityWhereInput
    data: XOR<cityUpdateWithoutAdminsInput, cityUncheckedUpdateWithoutAdminsInput>
  }

  export type cityUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type stateUpsertWithoutAdminsInput = {
    update: XOR<stateUpdateWithoutAdminsInput, stateUncheckedUpdateWithoutAdminsInput>
    create: XOR<stateCreateWithoutAdminsInput, stateUncheckedCreateWithoutAdminsInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutAdminsInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutAdminsInput, stateUncheckedUpdateWithoutAdminsInput>
  }

  export type stateUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type countryUpsertWithoutAdminsInput = {
    update: XOR<countryUpdateWithoutAdminsInput, countryUncheckedUpdateWithoutAdminsInput>
    create: XOR<countryCreateWithoutAdminsInput, countryUncheckedCreateWithoutAdminsInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutAdminsInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutAdminsInput, countryUncheckedUpdateWithoutAdminsInput>
  }

  export type countryUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type adminStaffUpsertWithWhereUniqueWithoutAdminInput = {
    where: adminStaffWhereUniqueInput
    update: XOR<adminStaffUpdateWithoutAdminInput, adminStaffUncheckedUpdateWithoutAdminInput>
    create: XOR<adminStaffCreateWithoutAdminInput, adminStaffUncheckedCreateWithoutAdminInput>
  }

  export type adminStaffUpdateWithWhereUniqueWithoutAdminInput = {
    where: adminStaffWhereUniqueInput
    data: XOR<adminStaffUpdateWithoutAdminInput, adminStaffUncheckedUpdateWithoutAdminInput>
  }

  export type adminStaffUpdateManyWithWhereWithoutAdminInput = {
    where: adminStaffScalarWhereInput
    data: XOR<adminStaffUpdateManyMutationInput, adminStaffUncheckedUpdateManyWithoutAdminInput>
  }

  export type adminStaffScalarWhereInput = {
    AND?: adminStaffScalarWhereInput | adminStaffScalarWhereInput[]
    OR?: adminStaffScalarWhereInput[]
    NOT?: adminStaffScalarWhereInput | adminStaffScalarWhereInput[]
    id?: IntFilter<"adminStaff"> | number
    admin_id?: IntFilter<"adminStaff"> | number
    name?: StringFilter<"adminStaff"> | string
    email?: StringFilter<"adminStaff"> | string
    password?: StringFilter<"adminStaff"> | string
    role?: StringFilter<"adminStaff"> | string
    status?: StringFilter<"adminStaff"> | string
    pr_token?: StringNullableFilter<"adminStaff"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"adminStaff"> | Date | string
    createdBy?: IntNullableFilter<"adminStaff"> | number | null
    createdByRole?: StringNullableFilter<"adminStaff"> | string | null
    updatedAt?: DateTimeFilter<"adminStaff"> | Date | string
    updatedBy?: IntNullableFilter<"adminStaff"> | number | null
    updatedByRole?: StringNullableFilter<"adminStaff"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminStaff"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminStaff"> | number | null
    deletedByRole?: StringNullableFilter<"adminStaff"> | string | null
  }

  export type companyDetailUpsertWithoutAdminInput = {
    update: XOR<companyDetailUpdateWithoutAdminInput, companyDetailUncheckedUpdateWithoutAdminInput>
    create: XOR<companyDetailCreateWithoutAdminInput, companyDetailUncheckedCreateWithoutAdminInput>
    where?: companyDetailWhereInput
  }

  export type companyDetailUpdateToOneWithWhereWithoutAdminInput = {
    where?: companyDetailWhereInput
    data: XOR<companyDetailUpdateWithoutAdminInput, companyDetailUncheckedUpdateWithoutAdminInput>
  }

  export type companyDetailUpdateWithoutAdminInput = {
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyDetailUncheckedUpdateWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    brandName?: NullableStringFieldUpdateOperationsInput | string | null
    brandShortName?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableStringFieldUpdateOperationsInput | string | null
    billingPincode?: NullableStringFieldUpdateOperationsInput | string | null
    billingState?: NullableStringFieldUpdateOperationsInput | string | null
    billingCity?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    clientEntryType?: NullableStringFieldUpdateOperationsInput | string | null
    gstNumber?: NullableStringFieldUpdateOperationsInput | string | null
    companyPanNumber?: NullableStringFieldUpdateOperationsInput | string | null
    aadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gstDocument?: NullableStringFieldUpdateOperationsInput | string | null
    panCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardHolderName?: NullableStringFieldUpdateOperationsInput | string | null
    panCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    aadharCardImage?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUpload?: NullableStringFieldUpdateOperationsInput | string | null
    documentId?: NullableStringFieldUpdateOperationsInput | string | null
    documentName?: NullableStringFieldUpdateOperationsInput | string | null
    documentImage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountUpsertWithWhereUniqueWithoutAdminInput = {
    where: bankAccountWhereUniqueInput
    update: XOR<bankAccountUpdateWithoutAdminInput, bankAccountUncheckedUpdateWithoutAdminInput>
    create: XOR<bankAccountCreateWithoutAdminInput, bankAccountUncheckedCreateWithoutAdminInput>
  }

  export type bankAccountUpdateWithWhereUniqueWithoutAdminInput = {
    where: bankAccountWhereUniqueInput
    data: XOR<bankAccountUpdateWithoutAdminInput, bankAccountUncheckedUpdateWithoutAdminInput>
  }

  export type bankAccountUpdateManyWithWhereWithoutAdminInput = {
    where: bankAccountScalarWhereInput
    data: XOR<bankAccountUpdateManyMutationInput, bankAccountUncheckedUpdateManyWithoutAdminInput>
  }

  export type bankAccountScalarWhereInput = {
    AND?: bankAccountScalarWhereInput | bankAccountScalarWhereInput[]
    OR?: bankAccountScalarWhereInput[]
    NOT?: bankAccountScalarWhereInput | bankAccountScalarWhereInput[]
    id?: IntFilter<"bankAccount"> | number
    adminId?: IntFilter<"bankAccount"> | number
    accountHolderName?: StringFilter<"bankAccount"> | string
    accountNumber?: StringFilter<"bankAccount"> | string
    bankName?: StringFilter<"bankAccount"> | string
    bankBranch?: StringFilter<"bankAccount"> | string
    accountType?: StringFilter<"bankAccount"> | string
    ifscCode?: StringFilter<"bankAccount"> | string
    cancelledChequeImage?: StringNullableFilter<"bankAccount"> | string | null
    paymentMethod?: StringNullableFilter<"bankAccount"> | string | null
    createdAt?: DateTimeFilter<"bankAccount"> | Date | string
    createdBy?: IntNullableFilter<"bankAccount"> | number | null
    createdByRole?: StringNullableFilter<"bankAccount"> | string | null
    updatedAt?: DateTimeFilter<"bankAccount"> | Date | string
    updatedBy?: IntNullableFilter<"bankAccount"> | number | null
    updatedByRole?: StringNullableFilter<"bankAccount"> | string | null
    deletedAt?: DateTimeNullableFilter<"bankAccount"> | Date | string | null
    deletedBy?: IntNullableFilter<"bankAccount"> | number | null
    deletedByRole?: StringNullableFilter<"bankAccount"> | string | null
  }

  export type adminHasPermissionUpsertWithWhereUniqueWithoutAdminInput = {
    where: adminHasPermissionWhereUniqueInput
    update: XOR<adminHasPermissionUpdateWithoutAdminInput, adminHasPermissionUncheckedUpdateWithoutAdminInput>
    create: XOR<adminHasPermissionCreateWithoutAdminInput, adminHasPermissionUncheckedCreateWithoutAdminInput>
  }

  export type adminHasPermissionUpdateWithWhereUniqueWithoutAdminInput = {
    where: adminHasPermissionWhereUniqueInput
    data: XOR<adminHasPermissionUpdateWithoutAdminInput, adminHasPermissionUncheckedUpdateWithoutAdminInput>
  }

  export type adminHasPermissionUpdateManyWithWhereWithoutAdminInput = {
    where: adminHasPermissionScalarWhereInput
    data: XOR<adminHasPermissionUpdateManyMutationInput, adminHasPermissionUncheckedUpdateManyWithoutAdminInput>
  }

  export type adminHasPermissionScalarWhereInput = {
    AND?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
    OR?: adminHasPermissionScalarWhereInput[]
    NOT?: adminHasPermissionScalarWhereInput | adminHasPermissionScalarWhereInput[]
    id?: IntFilter<"adminHasPermission"> | number
    adminId?: IntFilter<"adminHasPermission"> | number
    permissionId?: IntFilter<"adminHasPermission"> | number
    createdAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    createdBy?: IntNullableFilter<"adminHasPermission"> | number | null
    createdByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    updatedAt?: DateTimeFilter<"adminHasPermission"> | Date | string
    updatedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    updatedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
    deletedAt?: DateTimeNullableFilter<"adminHasPermission"> | Date | string | null
    deletedBy?: IntNullableFilter<"adminHasPermission"> | number | null
    deletedByRole?: StringNullableFilter<"adminHasPermission"> | string | null
  }

  export type adminHasPermissionCreateWithoutPermissionInput = {
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    admin: adminCreateNestedOneWithoutPermissionsInput
  }

  export type adminHasPermissionUncheckedCreateWithoutPermissionInput = {
    id?: number
    adminId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionCreateOrConnectWithoutPermissionInput = {
    where: adminHasPermissionWhereUniqueInput
    create: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput>
  }

  export type adminHasPermissionCreateManyPermissionInputEnvelope = {
    data: adminHasPermissionCreateManyPermissionInput | adminHasPermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type adminHasPermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: adminHasPermissionWhereUniqueInput
    update: XOR<adminHasPermissionUpdateWithoutPermissionInput, adminHasPermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<adminHasPermissionCreateWithoutPermissionInput, adminHasPermissionUncheckedCreateWithoutPermissionInput>
  }

  export type adminHasPermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: adminHasPermissionWhereUniqueInput
    data: XOR<adminHasPermissionUpdateWithoutPermissionInput, adminHasPermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type adminHasPermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: adminHasPermissionScalarWhereInput
    data: XOR<adminHasPermissionUpdateManyMutationInput, adminHasPermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type adminCreateWithoutPermissionsInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutPermissionsInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutPermissionsInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutPermissionsInput, adminUncheckedCreateWithoutPermissionsInput>
  }

  export type permissionCreateWithoutAdminPermissionsInput = {
    panel: string
    module: string
    action: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type permissionUncheckedCreateWithoutAdminPermissionsInput = {
    id?: number
    panel: string
    module: string
    action: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type permissionCreateOrConnectWithoutAdminPermissionsInput = {
    where: permissionWhereUniqueInput
    create: XOR<permissionCreateWithoutAdminPermissionsInput, permissionUncheckedCreateWithoutAdminPermissionsInput>
  }

  export type adminUpsertWithoutPermissionsInput = {
    update: XOR<adminUpdateWithoutPermissionsInput, adminUncheckedUpdateWithoutPermissionsInput>
    create: XOR<adminCreateWithoutPermissionsInput, adminUncheckedCreateWithoutPermissionsInput>
    where?: adminWhereInput
  }

  export type adminUpdateToOneWithWhereWithoutPermissionsInput = {
    where?: adminWhereInput
    data: XOR<adminUpdateWithoutPermissionsInput, adminUncheckedUpdateWithoutPermissionsInput>
  }

  export type adminUpdateWithoutPermissionsInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type permissionUpsertWithoutAdminPermissionsInput = {
    update: XOR<permissionUpdateWithoutAdminPermissionsInput, permissionUncheckedUpdateWithoutAdminPermissionsInput>
    create: XOR<permissionCreateWithoutAdminPermissionsInput, permissionUncheckedCreateWithoutAdminPermissionsInput>
    where?: permissionWhereInput
  }

  export type permissionUpdateToOneWithWhereWithoutAdminPermissionsInput = {
    where?: permissionWhereInput
    data: XOR<permissionUpdateWithoutAdminPermissionsInput, permissionUncheckedUpdateWithoutAdminPermissionsInput>
  }

  export type permissionUpdateWithoutAdminPermissionsInput = {
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionUncheckedUpdateWithoutAdminPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    panel?: StringFieldUpdateOperationsInput | string
    module?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminCreateWithoutCompanyDetailInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutCompanyDetailInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutCompanyDetailInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutCompanyDetailInput, adminUncheckedCreateWithoutCompanyDetailInput>
  }

  export type adminUpsertWithoutCompanyDetailInput = {
    update: XOR<adminUpdateWithoutCompanyDetailInput, adminUncheckedUpdateWithoutCompanyDetailInput>
    create: XOR<adminCreateWithoutCompanyDetailInput, adminUncheckedCreateWithoutCompanyDetailInput>
    where?: adminWhereInput
  }

  export type adminUpdateToOneWithWhereWithoutCompanyDetailInput = {
    where?: adminWhereInput
    data: XOR<adminUpdateWithoutCompanyDetailInput, adminUncheckedUpdateWithoutCompanyDetailInput>
  }

  export type adminUpdateWithoutCompanyDetailInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutCompanyDetailInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminCreateWithoutBankAccountsInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutBankAccountsInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutBankAccountsInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutBankAccountsInput, adminUncheckedCreateWithoutBankAccountsInput>
  }

  export type adminUpsertWithoutBankAccountsInput = {
    update: XOR<adminUpdateWithoutBankAccountsInput, adminUncheckedUpdateWithoutBankAccountsInput>
    create: XOR<adminCreateWithoutBankAccountsInput, adminUncheckedCreateWithoutBankAccountsInput>
    where?: adminWhereInput
  }

  export type adminUpdateToOneWithWhereWithoutBankAccountsInput = {
    where?: adminWhereInput
    data: XOR<adminUpdateWithoutBankAccountsInput, adminUncheckedUpdateWithoutBankAccountsInput>
  }

  export type adminUpdateWithoutBankAccountsInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutBankAccountsInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminCreateWithoutStaffInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutStaffInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutStaffInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutStaffInput, adminUncheckedCreateWithoutStaffInput>
  }

  export type adminUpsertWithoutStaffInput = {
    update: XOR<adminUpdateWithoutStaffInput, adminUncheckedUpdateWithoutStaffInput>
    create: XOR<adminCreateWithoutStaffInput, adminUncheckedCreateWithoutStaffInput>
    where?: adminWhereInput
  }

  export type adminUpdateToOneWithWhereWithoutStaffInput = {
    where?: adminWhereInput
    data: XOR<adminUpdateWithoutStaffInput, adminUncheckedUpdateWithoutStaffInput>
  }

  export type adminUpdateWithoutStaffInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type stateCreateWithoutCountryInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutCountryInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutCountryInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput>
  }

  export type stateCreateManyCountryInputEnvelope = {
    data: stateCreateManyCountryInput | stateCreateManyCountryInput[]
    skipDuplicates?: boolean
  }

  export type cityCreateWithoutCountryInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutCountryInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutCountryInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput>
  }

  export type cityCreateManyCountryInputEnvelope = {
    data: cityCreateManyCountryInput | cityCreateManyCountryInput[]
    skipDuplicates?: boolean
  }

  export type warehouseCreateWithoutCountryInput = {
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state?: stateCreateNestedOneWithoutWarehousesInput
    city?: cityCreateNestedOneWithoutWarehousesInput
  }

  export type warehouseUncheckedCreateWithoutCountryInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseCreateOrConnectWithoutCountryInput = {
    where: warehouseWhereUniqueInput
    create: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput>
  }

  export type warehouseCreateManyCountryInputEnvelope = {
    data: warehouseCreateManyCountryInput | warehouseCreateManyCountryInput[]
    skipDuplicates?: boolean
  }

  export type highRtoCreateWithoutCountryInput = {
    pincode: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state?: stateCreateNestedOneWithoutHighRtosInput
    city?: cityCreateNestedOneWithoutHighRtosInput
  }

  export type highRtoUncheckedCreateWithoutCountryInput = {
    id?: number
    pincode: string
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateOrConnectWithoutCountryInput = {
    where: highRtoWhereUniqueInput
    create: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput>
  }

  export type highRtoCreateManyCountryInputEnvelope = {
    data: highRtoCreateManyCountryInput | highRtoCreateManyCountryInput[]
    skipDuplicates?: boolean
  }

  export type adminCreateWithoutPermanentCountryInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutPermanentCountryInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutPermanentCountryInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput>
  }

  export type adminCreateManyPermanentCountryInputEnvelope = {
    data: adminCreateManyPermanentCountryInput | adminCreateManyPermanentCountryInput[]
    skipDuplicates?: boolean
  }

  export type productCreateWithoutOriginCountryInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    brand: brandCreateNestedOneWithoutProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutOriginCountryInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutOriginCountryInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput>
  }

  export type productCreateManyOriginCountryInputEnvelope = {
    data: productCreateManyOriginCountryInput | productCreateManyOriginCountryInput[]
    skipDuplicates?: boolean
  }

  export type productCreateWithoutShippingCountryInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    brand: brandCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutShippingCountryInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutShippingCountryInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput>
  }

  export type productCreateManyShippingCountryInputEnvelope = {
    data: productCreateManyShippingCountryInput | productCreateManyShippingCountryInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutShippingCountryInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShippingCountryInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShippingCountryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput>
  }

  export type OrderCreateManyShippingCountryInputEnvelope = {
    data: OrderCreateManyShippingCountryInput | OrderCreateManyShippingCountryInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutBillingCountryInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutBillingCountryInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutBillingCountryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput>
  }

  export type OrderCreateManyBillingCountryInputEnvelope = {
    data: OrderCreateManyBillingCountryInput | OrderCreateManyBillingCountryInput[]
    skipDuplicates?: boolean
  }

  export type stateUpsertWithWhereUniqueWithoutCountryInput = {
    where: stateWhereUniqueInput
    update: XOR<stateUpdateWithoutCountryInput, stateUncheckedUpdateWithoutCountryInput>
    create: XOR<stateCreateWithoutCountryInput, stateUncheckedCreateWithoutCountryInput>
  }

  export type stateUpdateWithWhereUniqueWithoutCountryInput = {
    where: stateWhereUniqueInput
    data: XOR<stateUpdateWithoutCountryInput, stateUncheckedUpdateWithoutCountryInput>
  }

  export type stateUpdateManyWithWhereWithoutCountryInput = {
    where: stateScalarWhereInput
    data: XOR<stateUpdateManyMutationInput, stateUncheckedUpdateManyWithoutCountryInput>
  }

  export type stateScalarWhereInput = {
    AND?: stateScalarWhereInput | stateScalarWhereInput[]
    OR?: stateScalarWhereInput[]
    NOT?: stateScalarWhereInput | stateScalarWhereInput[]
    id?: BigIntFilter<"state"> | bigint | number
    name?: StringFilter<"state"> | string
    countryId?: BigIntFilter<"state"> | bigint | number
    iso2?: StringNullableFilter<"state"> | string | null
    type?: StringNullableFilter<"state"> | string | null
    createdAt?: DateTimeFilter<"state"> | Date | string
    createdBy?: IntNullableFilter<"state"> | number | null
    createdByRole?: StringNullableFilter<"state"> | string | null
    updatedAt?: DateTimeFilter<"state"> | Date | string
    updatedBy?: IntNullableFilter<"state"> | number | null
    updatedByRole?: StringNullableFilter<"state"> | string | null
    deletedAt?: DateTimeNullableFilter<"state"> | Date | string | null
    deletedBy?: IntNullableFilter<"state"> | number | null
    deletedByRole?: StringNullableFilter<"state"> | string | null
  }

  export type cityUpsertWithWhereUniqueWithoutCountryInput = {
    where: cityWhereUniqueInput
    update: XOR<cityUpdateWithoutCountryInput, cityUncheckedUpdateWithoutCountryInput>
    create: XOR<cityCreateWithoutCountryInput, cityUncheckedCreateWithoutCountryInput>
  }

  export type cityUpdateWithWhereUniqueWithoutCountryInput = {
    where: cityWhereUniqueInput
    data: XOR<cityUpdateWithoutCountryInput, cityUncheckedUpdateWithoutCountryInput>
  }

  export type cityUpdateManyWithWhereWithoutCountryInput = {
    where: cityScalarWhereInput
    data: XOR<cityUpdateManyMutationInput, cityUncheckedUpdateManyWithoutCountryInput>
  }

  export type cityScalarWhereInput = {
    AND?: cityScalarWhereInput | cityScalarWhereInput[]
    OR?: cityScalarWhereInput[]
    NOT?: cityScalarWhereInput | cityScalarWhereInput[]
    id?: BigIntFilter<"city"> | bigint | number
    name?: StringFilter<"city"> | string
    stateId?: BigIntFilter<"city"> | bigint | number
    countryId?: BigIntFilter<"city"> | bigint | number
    createdAt?: DateTimeFilter<"city"> | Date | string
    createdBy?: IntNullableFilter<"city"> | number | null
    createdByRole?: StringNullableFilter<"city"> | string | null
    updatedAt?: DateTimeFilter<"city"> | Date | string
    updatedBy?: IntNullableFilter<"city"> | number | null
    updatedByRole?: StringNullableFilter<"city"> | string | null
    deletedAt?: DateTimeNullableFilter<"city"> | Date | string | null
    deletedBy?: IntNullableFilter<"city"> | number | null
    deletedByRole?: StringNullableFilter<"city"> | string | null
  }

  export type warehouseUpsertWithWhereUniqueWithoutCountryInput = {
    where: warehouseWhereUniqueInput
    update: XOR<warehouseUpdateWithoutCountryInput, warehouseUncheckedUpdateWithoutCountryInput>
    create: XOR<warehouseCreateWithoutCountryInput, warehouseUncheckedCreateWithoutCountryInput>
  }

  export type warehouseUpdateWithWhereUniqueWithoutCountryInput = {
    where: warehouseWhereUniqueInput
    data: XOR<warehouseUpdateWithoutCountryInput, warehouseUncheckedUpdateWithoutCountryInput>
  }

  export type warehouseUpdateManyWithWhereWithoutCountryInput = {
    where: warehouseScalarWhereInput
    data: XOR<warehouseUpdateManyMutationInput, warehouseUncheckedUpdateManyWithoutCountryInput>
  }

  export type warehouseScalarWhereInput = {
    AND?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
    OR?: warehouseScalarWhereInput[]
    NOT?: warehouseScalarWhereInput | warehouseScalarWhereInput[]
    id?: IntFilter<"warehouse"> | number
    name?: StringFilter<"warehouse"> | string
    slug?: StringFilter<"warehouse"> | string
    gst_number?: StringFilter<"warehouse"> | string
    contact_name?: StringFilter<"warehouse"> | string
    contact_number?: StringFilter<"warehouse"> | string
    address_line_1?: StringFilter<"warehouse"> | string
    address_line_2?: StringNullableFilter<"warehouse"> | string | null
    postal_code?: StringFilter<"warehouse"> | string
    countryId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    stateId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    cityId?: BigIntNullableFilter<"warehouse"> | bigint | number | null
    status?: BoolFilter<"warehouse"> | boolean
    createdAt?: DateTimeFilter<"warehouse"> | Date | string
    createdBy?: IntNullableFilter<"warehouse"> | number | null
    createdByRole?: StringNullableFilter<"warehouse"> | string | null
    updatedAt?: DateTimeFilter<"warehouse"> | Date | string
    updatedBy?: IntNullableFilter<"warehouse"> | number | null
    updatedByRole?: StringNullableFilter<"warehouse"> | string | null
    deletedAt?: DateTimeNullableFilter<"warehouse"> | Date | string | null
    deletedBy?: IntNullableFilter<"warehouse"> | number | null
    deletedByRole?: StringNullableFilter<"warehouse"> | string | null
  }

  export type highRtoUpsertWithWhereUniqueWithoutCountryInput = {
    where: highRtoWhereUniqueInput
    update: XOR<highRtoUpdateWithoutCountryInput, highRtoUncheckedUpdateWithoutCountryInput>
    create: XOR<highRtoCreateWithoutCountryInput, highRtoUncheckedCreateWithoutCountryInput>
  }

  export type highRtoUpdateWithWhereUniqueWithoutCountryInput = {
    where: highRtoWhereUniqueInput
    data: XOR<highRtoUpdateWithoutCountryInput, highRtoUncheckedUpdateWithoutCountryInput>
  }

  export type highRtoUpdateManyWithWhereWithoutCountryInput = {
    where: highRtoScalarWhereInput
    data: XOR<highRtoUpdateManyMutationInput, highRtoUncheckedUpdateManyWithoutCountryInput>
  }

  export type highRtoScalarWhereInput = {
    AND?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
    OR?: highRtoScalarWhereInput[]
    NOT?: highRtoScalarWhereInput | highRtoScalarWhereInput[]
    id?: IntFilter<"highRto"> | number
    pincode?: StringFilter<"highRto"> | string
    countryId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    stateId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    cityId?: BigIntNullableFilter<"highRto"> | bigint | number | null
    status?: BoolFilter<"highRto"> | boolean
    createdAt?: DateTimeFilter<"highRto"> | Date | string
    createdBy?: IntNullableFilter<"highRto"> | number | null
    createdByRole?: StringNullableFilter<"highRto"> | string | null
    updatedAt?: DateTimeFilter<"highRto"> | Date | string
    updatedBy?: IntNullableFilter<"highRto"> | number | null
    updatedByRole?: StringNullableFilter<"highRto"> | string | null
    deletedAt?: DateTimeNullableFilter<"highRto"> | Date | string | null
    deletedBy?: IntNullableFilter<"highRto"> | number | null
    deletedByRole?: StringNullableFilter<"highRto"> | string | null
  }

  export type adminUpsertWithWhereUniqueWithoutPermanentCountryInput = {
    where: adminWhereUniqueInput
    update: XOR<adminUpdateWithoutPermanentCountryInput, adminUncheckedUpdateWithoutPermanentCountryInput>
    create: XOR<adminCreateWithoutPermanentCountryInput, adminUncheckedCreateWithoutPermanentCountryInput>
  }

  export type adminUpdateWithWhereUniqueWithoutPermanentCountryInput = {
    where: adminWhereUniqueInput
    data: XOR<adminUpdateWithoutPermanentCountryInput, adminUncheckedUpdateWithoutPermanentCountryInput>
  }

  export type adminUpdateManyWithWhereWithoutPermanentCountryInput = {
    where: adminScalarWhereInput
    data: XOR<adminUpdateManyMutationInput, adminUncheckedUpdateManyWithoutPermanentCountryInput>
  }

  export type adminScalarWhereInput = {
    AND?: adminScalarWhereInput | adminScalarWhereInput[]
    OR?: adminScalarWhereInput[]
    NOT?: adminScalarWhereInput | adminScalarWhereInput[]
    id?: IntFilter<"admin"> | number
    profilePicture?: StringNullableFilter<"admin"> | string | null
    name?: StringFilter<"admin"> | string
    username?: StringNullableFilter<"admin"> | string | null
    website?: StringNullableFilter<"admin"> | string | null
    email?: StringFilter<"admin"> | string
    referralCode?: StringNullableFilter<"admin"> | string | null
    password?: StringFilter<"admin"> | string
    role?: StringFilter<"admin"> | string
    type?: StringFilter<"admin"> | string
    status?: StringFilter<"admin"> | string
    dateOfBirth?: DateTimeNullableFilter<"admin"> | Date | string | null
    phoneNumber?: StringNullableFilter<"admin"> | string | null
    currentAddress?: StringNullableFilter<"admin"> | string | null
    permanentAddress?: StringNullableFilter<"admin"> | string | null
    permanentPostalCode?: StringNullableFilter<"admin"> | string | null
    permanentCityId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentStateId?: BigIntNullableFilter<"admin"> | bigint | number | null
    permanentCountryId?: BigIntNullableFilter<"admin"> | bigint | number | null
    pr_token?: StringNullableFilter<"admin"> | string | null
    pr_expires_at?: DateTimeNullableFilter<"admin"> | Date | string | null
    pr_last_reset?: DateTimeNullableFilter<"admin"> | Date | string | null
    createdAt?: DateTimeFilter<"admin"> | Date | string
    createdBy?: IntNullableFilter<"admin"> | number | null
    createdByRole?: StringNullableFilter<"admin"> | string | null
    updatedAt?: DateTimeFilter<"admin"> | Date | string
    updatedBy?: IntNullableFilter<"admin"> | number | null
    updatedByRole?: StringNullableFilter<"admin"> | string | null
    deletedAt?: DateTimeNullableFilter<"admin"> | Date | string | null
    deletedBy?: IntNullableFilter<"admin"> | number | null
    deletedByRole?: StringNullableFilter<"admin"> | string | null
  }

  export type productUpsertWithWhereUniqueWithoutOriginCountryInput = {
    where: productWhereUniqueInput
    update: XOR<productUpdateWithoutOriginCountryInput, productUncheckedUpdateWithoutOriginCountryInput>
    create: XOR<productCreateWithoutOriginCountryInput, productUncheckedCreateWithoutOriginCountryInput>
  }

  export type productUpdateWithWhereUniqueWithoutOriginCountryInput = {
    where: productWhereUniqueInput
    data: XOR<productUpdateWithoutOriginCountryInput, productUncheckedUpdateWithoutOriginCountryInput>
  }

  export type productUpdateManyWithWhereWithoutOriginCountryInput = {
    where: productScalarWhereInput
    data: XOR<productUpdateManyMutationInput, productUncheckedUpdateManyWithoutOriginCountryInput>
  }

  export type productScalarWhereInput = {
    AND?: productScalarWhereInput | productScalarWhereInput[]
    OR?: productScalarWhereInput[]
    NOT?: productScalarWhereInput | productScalarWhereInput[]
    id?: IntFilter<"product"> | number
    categoryId?: IntFilter<"product"> | number
    name?: StringFilter<"product"> | string
    slug?: StringFilter<"product"> | string
    main_sku?: StringFilter<"product"> | string
    description?: StringNullableFilter<"product"> | string | null
    tags?: JsonNullableFilter<"product">
    brandId?: IntFilter<"product"> | number
    originCountryId?: BigIntFilter<"product"> | bigint | number
    ean?: StringNullableFilter<"product"> | string | null
    hsnCode?: StringNullableFilter<"product"> | string | null
    taxRate?: FloatNullableFilter<"product"> | number | null
    upc?: StringNullableFilter<"product"> | string | null
    rtoAddress?: StringNullableFilter<"product"> | string | null
    pickupAddress?: StringNullableFilter<"product"> | string | null
    shippingCountryId?: BigIntFilter<"product"> | bigint | number
    video_url?: StringNullableFilter<"product"> | string | null
    list_as?: StringNullableFilter<"product"> | string | null
    shipping_time?: StringNullableFilter<"product"> | string | null
    weight?: FloatNullableFilter<"product"> | number | null
    package_length?: FloatNullableFilter<"product"> | number | null
    package_width?: FloatNullableFilter<"product"> | number | null
    package_height?: FloatNullableFilter<"product"> | number | null
    chargeable_weight?: FloatNullableFilter<"product"> | number | null
    package_weight_image?: StringNullableFilter<"product"> | string | null
    package_length_image?: StringNullableFilter<"product"> | string | null
    package_width_image?: StringNullableFilter<"product"> | string | null
    package_height_image?: StringNullableFilter<"product"> | string | null
    product_detail_video?: StringNullableFilter<"product"> | string | null
    training_guidance_video?: StringNullableFilter<"product"> | string | null
    status?: BoolFilter<"product"> | boolean
    createdAt?: DateTimeFilter<"product"> | Date | string
    createdBy?: IntNullableFilter<"product"> | number | null
    createdByRole?: StringNullableFilter<"product"> | string | null
    updatedAt?: DateTimeFilter<"product"> | Date | string
    updatedBy?: IntNullableFilter<"product"> | number | null
    updatedByRole?: StringNullableFilter<"product"> | string | null
    deletedAt?: DateTimeNullableFilter<"product"> | Date | string | null
    deletedBy?: IntNullableFilter<"product"> | number | null
    deletedByRole?: StringNullableFilter<"product"> | string | null
  }

  export type productUpsertWithWhereUniqueWithoutShippingCountryInput = {
    where: productWhereUniqueInput
    update: XOR<productUpdateWithoutShippingCountryInput, productUncheckedUpdateWithoutShippingCountryInput>
    create: XOR<productCreateWithoutShippingCountryInput, productUncheckedCreateWithoutShippingCountryInput>
  }

  export type productUpdateWithWhereUniqueWithoutShippingCountryInput = {
    where: productWhereUniqueInput
    data: XOR<productUpdateWithoutShippingCountryInput, productUncheckedUpdateWithoutShippingCountryInput>
  }

  export type productUpdateManyWithWhereWithoutShippingCountryInput = {
    where: productScalarWhereInput
    data: XOR<productUpdateManyMutationInput, productUncheckedUpdateManyWithoutShippingCountryInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutShippingCountryInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutShippingCountryInput, OrderUncheckedUpdateWithoutShippingCountryInput>
    create: XOR<OrderCreateWithoutShippingCountryInput, OrderUncheckedCreateWithoutShippingCountryInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutShippingCountryInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutShippingCountryInput, OrderUncheckedUpdateWithoutShippingCountryInput>
  }

  export type OrderUpdateManyWithWhereWithoutShippingCountryInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutShippingCountryInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: IntFilter<"Order"> | number
    orderNumber?: StringFilter<"Order"> | string
    status?: StringFilter<"Order"> | string
    orderNote?: StringNullableFilter<"Order"> | string | null
    subtotal?: FloatFilter<"Order"> | number
    tax?: FloatFilter<"Order"> | number
    discount?: FloatFilter<"Order"> | number
    totalAmount?: FloatFilter<"Order"> | number
    currency?: StringFilter<"Order"> | string
    shippingName?: StringFilter<"Order"> | string
    shippingPhone?: StringFilter<"Order"> | string
    shippingEmail?: StringFilter<"Order"> | string
    shippingAddress?: StringFilter<"Order"> | string
    shippingZip?: StringFilter<"Order"> | string
    shippingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    shippingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingName?: StringFilter<"Order"> | string
    billingPhone?: StringFilter<"Order"> | string
    billingEmail?: StringFilter<"Order"> | string
    billingAddress?: StringFilter<"Order"> | string
    billingZip?: StringFilter<"Order"> | string
    billingCountryId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingStateId?: BigIntNullableFilter<"Order"> | bigint | number | null
    billingCityId?: BigIntNullableFilter<"Order"> | bigint | number | null
    paymentId?: IntNullableFilter<"Order"> | number | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: IntNullableFilter<"Order"> | number | null
    createdByRole?: StringNullableFilter<"Order"> | string | null
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: IntNullableFilter<"Order"> | number | null
    updatedByRole?: StringNullableFilter<"Order"> | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: IntNullableFilter<"Order"> | number | null
    deletedByRole?: StringNullableFilter<"Order"> | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutBillingCountryInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutBillingCountryInput, OrderUncheckedUpdateWithoutBillingCountryInput>
    create: XOR<OrderCreateWithoutBillingCountryInput, OrderUncheckedCreateWithoutBillingCountryInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutBillingCountryInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutBillingCountryInput, OrderUncheckedUpdateWithoutBillingCountryInput>
  }

  export type OrderUpdateManyWithWhereWithoutBillingCountryInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutBillingCountryInput>
  }

  export type countryCreateWithoutStatesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutStatesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutStatesInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutStatesInput, countryUncheckedCreateWithoutStatesInput>
  }

  export type cityCreateWithoutStateInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutStateInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutStateInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput>
  }

  export type cityCreateManyStateInputEnvelope = {
    data: cityCreateManyStateInput | cityCreateManyStateInput[]
    skipDuplicates?: boolean
  }

  export type warehouseCreateWithoutStateInput = {
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutWarehousesInput
    city?: cityCreateNestedOneWithoutWarehousesInput
  }

  export type warehouseUncheckedCreateWithoutStateInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseCreateOrConnectWithoutStateInput = {
    where: warehouseWhereUniqueInput
    create: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput>
  }

  export type warehouseCreateManyStateInputEnvelope = {
    data: warehouseCreateManyStateInput | warehouseCreateManyStateInput[]
    skipDuplicates?: boolean
  }

  export type highRtoCreateWithoutStateInput = {
    pincode: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutHighRtosInput
    city?: cityCreateNestedOneWithoutHighRtosInput
  }

  export type highRtoUncheckedCreateWithoutStateInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateOrConnectWithoutStateInput = {
    where: highRtoWhereUniqueInput
    create: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput>
  }

  export type highRtoCreateManyStateInputEnvelope = {
    data: highRtoCreateManyStateInput | highRtoCreateManyStateInput[]
    skipDuplicates?: boolean
  }

  export type adminCreateWithoutPermanentStateInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentCity?: cityCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutPermanentStateInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutPermanentStateInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput>
  }

  export type adminCreateManyPermanentStateInputEnvelope = {
    data: adminCreateManyPermanentStateInput | adminCreateManyPermanentStateInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutShippingStateInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShippingStateInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShippingStateInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput>
  }

  export type OrderCreateManyShippingStateInputEnvelope = {
    data: OrderCreateManyShippingStateInput | OrderCreateManyShippingStateInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutBillingStateInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutBillingStateInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutBillingStateInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput>
  }

  export type OrderCreateManyBillingStateInputEnvelope = {
    data: OrderCreateManyBillingStateInput | OrderCreateManyBillingStateInput[]
    skipDuplicates?: boolean
  }

  export type countryUpsertWithoutStatesInput = {
    update: XOR<countryUpdateWithoutStatesInput, countryUncheckedUpdateWithoutStatesInput>
    create: XOR<countryCreateWithoutStatesInput, countryUncheckedCreateWithoutStatesInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutStatesInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutStatesInput, countryUncheckedUpdateWithoutStatesInput>
  }

  export type countryUpdateWithoutStatesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutStatesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type cityUpsertWithWhereUniqueWithoutStateInput = {
    where: cityWhereUniqueInput
    update: XOR<cityUpdateWithoutStateInput, cityUncheckedUpdateWithoutStateInput>
    create: XOR<cityCreateWithoutStateInput, cityUncheckedCreateWithoutStateInput>
  }

  export type cityUpdateWithWhereUniqueWithoutStateInput = {
    where: cityWhereUniqueInput
    data: XOR<cityUpdateWithoutStateInput, cityUncheckedUpdateWithoutStateInput>
  }

  export type cityUpdateManyWithWhereWithoutStateInput = {
    where: cityScalarWhereInput
    data: XOR<cityUpdateManyMutationInput, cityUncheckedUpdateManyWithoutStateInput>
  }

  export type warehouseUpsertWithWhereUniqueWithoutStateInput = {
    where: warehouseWhereUniqueInput
    update: XOR<warehouseUpdateWithoutStateInput, warehouseUncheckedUpdateWithoutStateInput>
    create: XOR<warehouseCreateWithoutStateInput, warehouseUncheckedCreateWithoutStateInput>
  }

  export type warehouseUpdateWithWhereUniqueWithoutStateInput = {
    where: warehouseWhereUniqueInput
    data: XOR<warehouseUpdateWithoutStateInput, warehouseUncheckedUpdateWithoutStateInput>
  }

  export type warehouseUpdateManyWithWhereWithoutStateInput = {
    where: warehouseScalarWhereInput
    data: XOR<warehouseUpdateManyMutationInput, warehouseUncheckedUpdateManyWithoutStateInput>
  }

  export type highRtoUpsertWithWhereUniqueWithoutStateInput = {
    where: highRtoWhereUniqueInput
    update: XOR<highRtoUpdateWithoutStateInput, highRtoUncheckedUpdateWithoutStateInput>
    create: XOR<highRtoCreateWithoutStateInput, highRtoUncheckedCreateWithoutStateInput>
  }

  export type highRtoUpdateWithWhereUniqueWithoutStateInput = {
    where: highRtoWhereUniqueInput
    data: XOR<highRtoUpdateWithoutStateInput, highRtoUncheckedUpdateWithoutStateInput>
  }

  export type highRtoUpdateManyWithWhereWithoutStateInput = {
    where: highRtoScalarWhereInput
    data: XOR<highRtoUpdateManyMutationInput, highRtoUncheckedUpdateManyWithoutStateInput>
  }

  export type adminUpsertWithWhereUniqueWithoutPermanentStateInput = {
    where: adminWhereUniqueInput
    update: XOR<adminUpdateWithoutPermanentStateInput, adminUncheckedUpdateWithoutPermanentStateInput>
    create: XOR<adminCreateWithoutPermanentStateInput, adminUncheckedCreateWithoutPermanentStateInput>
  }

  export type adminUpdateWithWhereUniqueWithoutPermanentStateInput = {
    where: adminWhereUniqueInput
    data: XOR<adminUpdateWithoutPermanentStateInput, adminUncheckedUpdateWithoutPermanentStateInput>
  }

  export type adminUpdateManyWithWhereWithoutPermanentStateInput = {
    where: adminScalarWhereInput
    data: XOR<adminUpdateManyMutationInput, adminUncheckedUpdateManyWithoutPermanentStateInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutShippingStateInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutShippingStateInput, OrderUncheckedUpdateWithoutShippingStateInput>
    create: XOR<OrderCreateWithoutShippingStateInput, OrderUncheckedCreateWithoutShippingStateInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutShippingStateInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutShippingStateInput, OrderUncheckedUpdateWithoutShippingStateInput>
  }

  export type OrderUpdateManyWithWhereWithoutShippingStateInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutShippingStateInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutBillingStateInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutBillingStateInput, OrderUncheckedUpdateWithoutBillingStateInput>
    create: XOR<OrderCreateWithoutBillingStateInput, OrderUncheckedCreateWithoutBillingStateInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutBillingStateInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutBillingStateInput, OrderUncheckedUpdateWithoutBillingStateInput>
  }

  export type OrderUpdateManyWithWhereWithoutBillingStateInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutBillingStateInput>
  }

  export type stateCreateWithoutCitiesInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutCitiesInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutCitiesInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutCitiesInput, stateUncheckedCreateWithoutCitiesInput>
  }

  export type countryCreateWithoutCitiesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutCitiesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutCitiesInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutCitiesInput, countryUncheckedCreateWithoutCitiesInput>
  }

  export type warehouseCreateWithoutCityInput = {
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutWarehousesInput
    state?: stateCreateNestedOneWithoutWarehousesInput
  }

  export type warehouseUncheckedCreateWithoutCityInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseCreateOrConnectWithoutCityInput = {
    where: warehouseWhereUniqueInput
    create: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput>
  }

  export type warehouseCreateManyCityInputEnvelope = {
    data: warehouseCreateManyCityInput | warehouseCreateManyCityInput[]
    skipDuplicates?: boolean
  }

  export type highRtoCreateWithoutCityInput = {
    pincode: string
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country?: countryCreateNestedOneWithoutHighRtosInput
    state?: stateCreateNestedOneWithoutHighRtosInput
  }

  export type highRtoUncheckedCreateWithoutCityInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateOrConnectWithoutCityInput = {
    where: highRtoWhereUniqueInput
    create: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput>
  }

  export type highRtoCreateManyCityInputEnvelope = {
    data: highRtoCreateManyCityInput | highRtoCreateManyCityInput[]
    skipDuplicates?: boolean
  }

  export type adminCreateWithoutPermanentCityInput = {
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    permanentState?: stateCreateNestedOneWithoutAdminsInput
    permanentCountry?: countryCreateNestedOneWithoutAdminsInput
    staff?: adminStaffCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionCreateNestedManyWithoutAdminInput
  }

  export type adminUncheckedCreateWithoutPermanentCityInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    staff?: adminStaffUncheckedCreateNestedManyWithoutAdminInput
    companyDetail?: companyDetailUncheckedCreateNestedOneWithoutAdminInput
    bankAccounts?: bankAccountUncheckedCreateNestedManyWithoutAdminInput
    permissions?: adminHasPermissionUncheckedCreateNestedManyWithoutAdminInput
  }

  export type adminCreateOrConnectWithoutPermanentCityInput = {
    where: adminWhereUniqueInput
    create: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput>
  }

  export type adminCreateManyPermanentCityInputEnvelope = {
    data: adminCreateManyPermanentCityInput | adminCreateManyPermanentCityInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutShippingCityInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShippingCityInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShippingCityInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput>
  }

  export type OrderCreateManyShippingCityInputEnvelope = {
    data: OrderCreateManyShippingCityInput | OrderCreateManyShippingCityInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutBillingCityInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutBillingCityInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutBillingCityInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput>
  }

  export type OrderCreateManyBillingCityInputEnvelope = {
    data: OrderCreateManyBillingCityInput | OrderCreateManyBillingCityInput[]
    skipDuplicates?: boolean
  }

  export type stateUpsertWithoutCitiesInput = {
    update: XOR<stateUpdateWithoutCitiesInput, stateUncheckedUpdateWithoutCitiesInput>
    create: XOR<stateCreateWithoutCitiesInput, stateUncheckedCreateWithoutCitiesInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutCitiesInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutCitiesInput, stateUncheckedUpdateWithoutCitiesInput>
  }

  export type stateUpdateWithoutCitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutCitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type countryUpsertWithoutCitiesInput = {
    update: XOR<countryUpdateWithoutCitiesInput, countryUncheckedUpdateWithoutCitiesInput>
    create: XOR<countryCreateWithoutCitiesInput, countryUncheckedCreateWithoutCitiesInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutCitiesInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutCitiesInput, countryUncheckedUpdateWithoutCitiesInput>
  }

  export type countryUpdateWithoutCitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutCitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type warehouseUpsertWithWhereUniqueWithoutCityInput = {
    where: warehouseWhereUniqueInput
    update: XOR<warehouseUpdateWithoutCityInput, warehouseUncheckedUpdateWithoutCityInput>
    create: XOR<warehouseCreateWithoutCityInput, warehouseUncheckedCreateWithoutCityInput>
  }

  export type warehouseUpdateWithWhereUniqueWithoutCityInput = {
    where: warehouseWhereUniqueInput
    data: XOR<warehouseUpdateWithoutCityInput, warehouseUncheckedUpdateWithoutCityInput>
  }

  export type warehouseUpdateManyWithWhereWithoutCityInput = {
    where: warehouseScalarWhereInput
    data: XOR<warehouseUpdateManyMutationInput, warehouseUncheckedUpdateManyWithoutCityInput>
  }

  export type highRtoUpsertWithWhereUniqueWithoutCityInput = {
    where: highRtoWhereUniqueInput
    update: XOR<highRtoUpdateWithoutCityInput, highRtoUncheckedUpdateWithoutCityInput>
    create: XOR<highRtoCreateWithoutCityInput, highRtoUncheckedCreateWithoutCityInput>
  }

  export type highRtoUpdateWithWhereUniqueWithoutCityInput = {
    where: highRtoWhereUniqueInput
    data: XOR<highRtoUpdateWithoutCityInput, highRtoUncheckedUpdateWithoutCityInput>
  }

  export type highRtoUpdateManyWithWhereWithoutCityInput = {
    where: highRtoScalarWhereInput
    data: XOR<highRtoUpdateManyMutationInput, highRtoUncheckedUpdateManyWithoutCityInput>
  }

  export type adminUpsertWithWhereUniqueWithoutPermanentCityInput = {
    where: adminWhereUniqueInput
    update: XOR<adminUpdateWithoutPermanentCityInput, adminUncheckedUpdateWithoutPermanentCityInput>
    create: XOR<adminCreateWithoutPermanentCityInput, adminUncheckedCreateWithoutPermanentCityInput>
  }

  export type adminUpdateWithWhereUniqueWithoutPermanentCityInput = {
    where: adminWhereUniqueInput
    data: XOR<adminUpdateWithoutPermanentCityInput, adminUncheckedUpdateWithoutPermanentCityInput>
  }

  export type adminUpdateManyWithWhereWithoutPermanentCityInput = {
    where: adminScalarWhereInput
    data: XOR<adminUpdateManyMutationInput, adminUncheckedUpdateManyWithoutPermanentCityInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutShippingCityInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutShippingCityInput, OrderUncheckedUpdateWithoutShippingCityInput>
    create: XOR<OrderCreateWithoutShippingCityInput, OrderUncheckedCreateWithoutShippingCityInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutShippingCityInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutShippingCityInput, OrderUncheckedUpdateWithoutShippingCityInput>
  }

  export type OrderUpdateManyWithWhereWithoutShippingCityInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutShippingCityInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutBillingCityInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutBillingCityInput, OrderUncheckedUpdateWithoutBillingCityInput>
    create: XOR<OrderCreateWithoutBillingCityInput, OrderUncheckedCreateWithoutBillingCityInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutBillingCityInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutBillingCityInput, OrderUncheckedUpdateWithoutBillingCityInput>
  }

  export type OrderUpdateManyWithWhereWithoutBillingCityInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutBillingCityInput>
  }

  export type countryCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutWarehousesInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutWarehousesInput, countryUncheckedCreateWithoutWarehousesInput>
  }

  export type stateCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutWarehousesInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutWarehousesInput, stateUncheckedCreateWithoutWarehousesInput>
  }

  export type cityCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutWarehousesInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutWarehousesInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutWarehousesInput, cityUncheckedCreateWithoutWarehousesInput>
  }

  export type countryUpsertWithoutWarehousesInput = {
    update: XOR<countryUpdateWithoutWarehousesInput, countryUncheckedUpdateWithoutWarehousesInput>
    create: XOR<countryCreateWithoutWarehousesInput, countryUncheckedCreateWithoutWarehousesInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutWarehousesInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutWarehousesInput, countryUncheckedUpdateWithoutWarehousesInput>
  }

  export type countryUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type stateUpsertWithoutWarehousesInput = {
    update: XOR<stateUpdateWithoutWarehousesInput, stateUncheckedUpdateWithoutWarehousesInput>
    create: XOR<stateCreateWithoutWarehousesInput, stateUncheckedCreateWithoutWarehousesInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutWarehousesInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutWarehousesInput, stateUncheckedUpdateWithoutWarehousesInput>
  }

  export type stateUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type cityUpsertWithoutWarehousesInput = {
    update: XOR<cityUpdateWithoutWarehousesInput, cityUncheckedUpdateWithoutWarehousesInput>
    create: XOR<cityCreateWithoutWarehousesInput, cityUncheckedCreateWithoutWarehousesInput>
    where?: cityWhereInput
  }

  export type cityUpdateToOneWithWhereWithoutWarehousesInput = {
    where?: cityWhereInput
    data: XOR<cityUpdateWithoutWarehousesInput, cityUncheckedUpdateWithoutWarehousesInput>
  }

  export type cityUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutWarehousesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type productCreateWithoutCategoryInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    brand: brandCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutCategoryInput = {
    id?: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutCategoryInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput>
  }

  export type productCreateManyCategoryInputEnvelope = {
    data: productCreateManyCategoryInput | productCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type productRequestCreateWithoutCategoryInput = {
    name: string
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productRequestUncheckedCreateWithoutCategoryInput = {
    id?: number
    name: string
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productRequestCreateOrConnectWithoutCategoryInput = {
    where: productRequestWhereUniqueInput
    create: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput>
  }

  export type productRequestCreateManyCategoryInputEnvelope = {
    data: productRequestCreateManyCategoryInput | productRequestCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type productUpsertWithWhereUniqueWithoutCategoryInput = {
    where: productWhereUniqueInput
    update: XOR<productUpdateWithoutCategoryInput, productUncheckedUpdateWithoutCategoryInput>
    create: XOR<productCreateWithoutCategoryInput, productUncheckedCreateWithoutCategoryInput>
  }

  export type productUpdateWithWhereUniqueWithoutCategoryInput = {
    where: productWhereUniqueInput
    data: XOR<productUpdateWithoutCategoryInput, productUncheckedUpdateWithoutCategoryInput>
  }

  export type productUpdateManyWithWhereWithoutCategoryInput = {
    where: productScalarWhereInput
    data: XOR<productUpdateManyMutationInput, productUncheckedUpdateManyWithoutCategoryInput>
  }

  export type productRequestUpsertWithWhereUniqueWithoutCategoryInput = {
    where: productRequestWhereUniqueInput
    update: XOR<productRequestUpdateWithoutCategoryInput, productRequestUncheckedUpdateWithoutCategoryInput>
    create: XOR<productRequestCreateWithoutCategoryInput, productRequestUncheckedCreateWithoutCategoryInput>
  }

  export type productRequestUpdateWithWhereUniqueWithoutCategoryInput = {
    where: productRequestWhereUniqueInput
    data: XOR<productRequestUpdateWithoutCategoryInput, productRequestUncheckedUpdateWithoutCategoryInput>
  }

  export type productRequestUpdateManyWithWhereWithoutCategoryInput = {
    where: productRequestScalarWhereInput
    data: XOR<productRequestUpdateManyMutationInput, productRequestUncheckedUpdateManyWithoutCategoryInput>
  }

  export type productRequestScalarWhereInput = {
    AND?: productRequestScalarWhereInput | productRequestScalarWhereInput[]
    OR?: productRequestScalarWhereInput[]
    NOT?: productRequestScalarWhereInput | productRequestScalarWhereInput[]
    id?: IntFilter<"productRequest"> | number
    name?: StringFilter<"productRequest"> | string
    categoryId?: IntFilter<"productRequest"> | number
    expectedPrice?: IntNullableFilter<"productRequest"> | number | null
    expectedDailyOrders?: StringNullableFilter<"productRequest"> | string | null
    url?: StringNullableFilter<"productRequest"> | string | null
    image?: StringNullableFilter<"productRequest"> | string | null
    status?: BoolFilter<"productRequest"> | boolean
    createdAt?: DateTimeFilter<"productRequest"> | Date | string
    createdBy?: IntNullableFilter<"productRequest"> | number | null
    createdByRole?: StringNullableFilter<"productRequest"> | string | null
    updatedAt?: DateTimeFilter<"productRequest"> | Date | string
    updatedBy?: IntNullableFilter<"productRequest"> | number | null
    updatedByRole?: StringNullableFilter<"productRequest"> | string | null
    deletedAt?: DateTimeNullableFilter<"productRequest"> | Date | string | null
    deletedBy?: IntNullableFilter<"productRequest"> | number | null
    deletedByRole?: StringNullableFilter<"productRequest"> | string | null
  }

  export type productCreateWithoutBrandInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutBrandInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutBrandInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput>
  }

  export type productCreateManyBrandInputEnvelope = {
    data: productCreateManyBrandInput | productCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type productUpsertWithWhereUniqueWithoutBrandInput = {
    where: productWhereUniqueInput
    update: XOR<productUpdateWithoutBrandInput, productUncheckedUpdateWithoutBrandInput>
    create: XOR<productCreateWithoutBrandInput, productUncheckedCreateWithoutBrandInput>
  }

  export type productUpdateWithWhereUniqueWithoutBrandInput = {
    where: productWhereUniqueInput
    data: XOR<productUpdateWithoutBrandInput, productUncheckedUpdateWithoutBrandInput>
  }

  export type productUpdateManyWithWhereWithoutBrandInput = {
    where: productScalarWhereInput
    data: XOR<productUpdateManyMutationInput, productUncheckedUpdateManyWithoutBrandInput>
  }

  export type categoryCreateWithoutProductRequestsInput = {
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productCreateNestedManyWithoutCategoryInput
  }

  export type categoryUncheckedCreateWithoutProductRequestsInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    products?: productUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoryCreateOrConnectWithoutProductRequestsInput = {
    where: categoryWhereUniqueInput
    create: XOR<categoryCreateWithoutProductRequestsInput, categoryUncheckedCreateWithoutProductRequestsInput>
  }

  export type categoryUpsertWithoutProductRequestsInput = {
    update: XOR<categoryUpdateWithoutProductRequestsInput, categoryUncheckedUpdateWithoutProductRequestsInput>
    create: XOR<categoryCreateWithoutProductRequestsInput, categoryUncheckedCreateWithoutProductRequestsInput>
    where?: categoryWhereInput
  }

  export type categoryUpdateToOneWithWhereWithoutProductRequestsInput = {
    where?: categoryWhereInput
    data: XOR<categoryUpdateWithoutProductRequestsInput, categoryUncheckedUpdateWithoutProductRequestsInput>
  }

  export type categoryUpdateWithoutProductRequestsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUpdateManyWithoutCategoryNestedInput
  }

  export type categoryUncheckedUpdateWithoutProductRequestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    products?: productUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type categoryCreateWithoutProductsInput = {
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    productRequests?: productRequestCreateNestedManyWithoutCategoryInput
  }

  export type categoryUncheckedCreateWithoutProductsInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    productRequests?: productRequestUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type categoryCreateOrConnectWithoutProductsInput = {
    where: categoryWhereUniqueInput
    create: XOR<categoryCreateWithoutProductsInput, categoryUncheckedCreateWithoutProductsInput>
  }

  export type brandCreateWithoutProductsInput = {
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type brandUncheckedCreateWithoutProductsInput = {
    id?: number
    name: string
    slug: string
    description?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type brandCreateOrConnectWithoutProductsInput = {
    where: brandWhereUniqueInput
    create: XOR<brandCreateWithoutProductsInput, brandUncheckedCreateWithoutProductsInput>
  }

  export type countryCreateWithoutOriginProductsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutOriginProductsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutOriginProductsInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutOriginProductsInput, countryUncheckedCreateWithoutOriginProductsInput>
  }

  export type countryCreateWithoutShippingProductsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutShippingProductsInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutShippingProductsInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutShippingProductsInput, countryUncheckedCreateWithoutShippingProductsInput>
  }

  export type productVariantCreateWithoutProductInput = {
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orderItems?: OrderItemCreateNestedManyWithoutVariantInput
  }

  export type productVariantUncheckedCreateWithoutProductInput = {
    id?: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutVariantInput
  }

  export type productVariantCreateOrConnectWithoutProductInput = {
    where: productVariantWhereUniqueInput
    create: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput>
  }

  export type productVariantCreateManyProductInputEnvelope = {
    data: productVariantCreateManyProductInput | productVariantCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    quantity: number
    price: number
    total: number
    order: OrderCreateNestedOneWithoutItemsInput
    variant?: productVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id?: number
    orderId: number
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type categoryUpsertWithoutProductsInput = {
    update: XOR<categoryUpdateWithoutProductsInput, categoryUncheckedUpdateWithoutProductsInput>
    create: XOR<categoryCreateWithoutProductsInput, categoryUncheckedCreateWithoutProductsInput>
    where?: categoryWhereInput
  }

  export type categoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: categoryWhereInput
    data: XOR<categoryUpdateWithoutProductsInput, categoryUncheckedUpdateWithoutProductsInput>
  }

  export type categoryUpdateWithoutProductsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    productRequests?: productRequestUpdateManyWithoutCategoryNestedInput
  }

  export type categoryUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    productRequests?: productRequestUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type brandUpsertWithoutProductsInput = {
    update: XOR<brandUpdateWithoutProductsInput, brandUncheckedUpdateWithoutProductsInput>
    create: XOR<brandCreateWithoutProductsInput, brandUncheckedCreateWithoutProductsInput>
    where?: brandWhereInput
  }

  export type brandUpdateToOneWithWhereWithoutProductsInput = {
    where?: brandWhereInput
    data: XOR<brandUpdateWithoutProductsInput, brandUncheckedUpdateWithoutProductsInput>
  }

  export type brandUpdateWithoutProductsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type brandUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type countryUpsertWithoutOriginProductsInput = {
    update: XOR<countryUpdateWithoutOriginProductsInput, countryUncheckedUpdateWithoutOriginProductsInput>
    create: XOR<countryCreateWithoutOriginProductsInput, countryUncheckedCreateWithoutOriginProductsInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutOriginProductsInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutOriginProductsInput, countryUncheckedUpdateWithoutOriginProductsInput>
  }

  export type countryUpdateWithoutOriginProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutOriginProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUpsertWithoutShippingProductsInput = {
    update: XOR<countryUpdateWithoutShippingProductsInput, countryUncheckedUpdateWithoutShippingProductsInput>
    create: XOR<countryCreateWithoutShippingProductsInput, countryUncheckedCreateWithoutShippingProductsInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutShippingProductsInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutShippingProductsInput, countryUncheckedUpdateWithoutShippingProductsInput>
  }

  export type countryUpdateWithoutShippingProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutShippingProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type productVariantUpsertWithWhereUniqueWithoutProductInput = {
    where: productVariantWhereUniqueInput
    update: XOR<productVariantUpdateWithoutProductInput, productVariantUncheckedUpdateWithoutProductInput>
    create: XOR<productVariantCreateWithoutProductInput, productVariantUncheckedCreateWithoutProductInput>
  }

  export type productVariantUpdateWithWhereUniqueWithoutProductInput = {
    where: productVariantWhereUniqueInput
    data: XOR<productVariantUpdateWithoutProductInput, productVariantUncheckedUpdateWithoutProductInput>
  }

  export type productVariantUpdateManyWithWhereWithoutProductInput = {
    where: productVariantScalarWhereInput
    data: XOR<productVariantUpdateManyMutationInput, productVariantUncheckedUpdateManyWithoutProductInput>
  }

  export type productVariantScalarWhereInput = {
    AND?: productVariantScalarWhereInput | productVariantScalarWhereInput[]
    OR?: productVariantScalarWhereInput[]
    NOT?: productVariantScalarWhereInput | productVariantScalarWhereInput[]
    id?: IntFilter<"productVariant"> | number
    productId?: IntFilter<"productVariant"> | number
    image?: StringFilter<"productVariant"> | string
    color?: StringFilter<"productVariant"> | string
    sku?: StringFilter<"productVariant"> | string
    qty?: IntFilter<"productVariant"> | number
    currency?: StringFilter<"productVariant"> | string
    article_id?: StringNullableFilter<"productVariant"> | string | null
    product_link?: StringNullableFilter<"productVariant"> | string | null
    suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    shipowl_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_suggested_price?: FloatNullableFilter<"productVariant"> | number | null
    rto_price?: FloatNullableFilter<"productVariant"> | number | null
    createdAt?: DateTimeFilter<"productVariant"> | Date | string
    createdBy?: IntNullableFilter<"productVariant"> | number | null
    createdByRole?: StringNullableFilter<"productVariant"> | string | null
    updatedAt?: DateTimeFilter<"productVariant"> | Date | string
    updatedBy?: IntNullableFilter<"productVariant"> | number | null
    updatedByRole?: StringNullableFilter<"productVariant"> | string | null
    deletedAt?: DateTimeNullableFilter<"productVariant"> | Date | string | null
    deletedBy?: IntNullableFilter<"productVariant"> | number | null
    deletedByRole?: StringNullableFilter<"productVariant"> | string | null
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: IntFilter<"OrderItem"> | number
    orderId?: IntFilter<"OrderItem"> | number
    productId?: IntNullableFilter<"OrderItem"> | number | null
    variantId?: IntNullableFilter<"OrderItem"> | number | null
    quantity?: IntFilter<"OrderItem"> | number
    price?: FloatFilter<"OrderItem"> | number
    total?: FloatFilter<"OrderItem"> | number
  }

  export type productCreateWithoutVariantsInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    brand: brandCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutVariantsInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutVariantsInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutVariantsInput, productUncheckedCreateWithoutVariantsInput>
  }

  export type OrderItemCreateWithoutVariantInput = {
    quantity: number
    price: number
    total: number
    order: OrderCreateNestedOneWithoutItemsInput
    product?: productCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutVariantInput = {
    id?: number
    orderId: number
    productId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemCreateOrConnectWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput>
  }

  export type OrderItemCreateManyVariantInputEnvelope = {
    data: OrderItemCreateManyVariantInput | OrderItemCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type productUpsertWithoutVariantsInput = {
    update: XOR<productUpdateWithoutVariantsInput, productUncheckedUpdateWithoutVariantsInput>
    create: XOR<productCreateWithoutVariantsInput, productUncheckedCreateWithoutVariantsInput>
    where?: productWhereInput
  }

  export type productUpdateToOneWithWhereWithoutVariantsInput = {
    where?: productWhereInput
    data: XOR<productUpdateWithoutVariantsInput, productUncheckedUpdateWithoutVariantsInput>
  }

  export type productUpdateWithoutVariantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutVariantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutVariantInput, OrderItemUncheckedUpdateWithoutVariantInput>
    create: XOR<OrderItemCreateWithoutVariantInput, OrderItemUncheckedCreateWithoutVariantInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutVariantInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutVariantInput, OrderItemUncheckedUpdateWithoutVariantInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutVariantInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutVariantInput>
  }

  export type countryCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutHighRtosInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutHighRtosInput, countryUncheckedCreateWithoutHighRtosInput>
  }

  export type stateCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutHighRtosInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutHighRtosInput, stateUncheckedCreateWithoutHighRtosInput>
  }

  export type cityCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutHighRtosInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutHighRtosInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutHighRtosInput, cityUncheckedCreateWithoutHighRtosInput>
  }

  export type countryUpsertWithoutHighRtosInput = {
    update: XOR<countryUpdateWithoutHighRtosInput, countryUncheckedUpdateWithoutHighRtosInput>
    create: XOR<countryCreateWithoutHighRtosInput, countryUncheckedCreateWithoutHighRtosInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutHighRtosInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutHighRtosInput, countryUncheckedUpdateWithoutHighRtosInput>
  }

  export type countryUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type stateUpsertWithoutHighRtosInput = {
    update: XOR<stateUpdateWithoutHighRtosInput, stateUncheckedUpdateWithoutHighRtosInput>
    create: XOR<stateCreateWithoutHighRtosInput, stateUncheckedCreateWithoutHighRtosInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutHighRtosInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutHighRtosInput, stateUncheckedUpdateWithoutHighRtosInput>
  }

  export type stateUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type cityUpsertWithoutHighRtosInput = {
    update: XOR<cityUpdateWithoutHighRtosInput, cityUncheckedUpdateWithoutHighRtosInput>
    create: XOR<cityCreateWithoutHighRtosInput, cityUncheckedCreateWithoutHighRtosInput>
    where?: cityWhereInput
  }

  export type cityUpdateToOneWithWhereWithoutHighRtosInput = {
    where?: cityWhereInput
    data: XOR<cityUpdateWithoutHighRtosInput, cityUncheckedUpdateWithoutHighRtosInput>
  }

  export type cityUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutHighRtosInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type OrderCreateWithoutPaymentInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
  }

  export type OrderCreateManyPaymentInputEnvelope = {
    data: OrderCreateManyPaymentInput | OrderCreateManyPaymentInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutPaymentInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutPaymentInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type OrderUpdateManyWithWhereWithoutPaymentInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutPaymentInput>
  }

  export type countryCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCountryInput
  }

  export type countryUncheckedCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCountryInput
  }

  export type countryCreateOrConnectWithoutShippingOrdersInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutShippingOrdersInput, countryUncheckedCreateWithoutShippingOrdersInput>
  }

  export type stateCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    billingOrders?: OrderCreateNestedManyWithoutBillingStateInput
  }

  export type stateUncheckedCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingStateInput
  }

  export type stateCreateOrConnectWithoutShippingOrdersInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutShippingOrdersInput, stateUncheckedCreateWithoutShippingOrdersInput>
  }

  export type cityCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    billingOrders?: OrderCreateNestedManyWithoutBillingCityInput
  }

  export type cityUncheckedCreateWithoutShippingOrdersInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    billingOrders?: OrderUncheckedCreateNestedManyWithoutBillingCityInput
  }

  export type cityCreateOrConnectWithoutShippingOrdersInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutShippingOrdersInput, cityUncheckedCreateWithoutShippingOrdersInput>
  }

  export type countryCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateCreateNestedManyWithoutCountryInput
    cities?: cityCreateNestedManyWithoutCountryInput
    warehouses?: warehouseCreateNestedManyWithoutCountryInput
    highRtos?: highRtoCreateNestedManyWithoutCountryInput
    admins?: adminCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCountryInput
  }

  export type countryUncheckedCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    iso3?: string | null
    iso2?: string | null
    phonecode?: string | null
    currency?: string | null
    currencyName?: string | null
    currencySymbol?: string | null
    nationality?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    states?: stateUncheckedCreateNestedManyWithoutCountryInput
    cities?: cityUncheckedCreateNestedManyWithoutCountryInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCountryInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCountryInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCountryInput
    originProducts?: productUncheckedCreateNestedManyWithoutOriginCountryInput
    shippingProducts?: productUncheckedCreateNestedManyWithoutShippingCountryInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCountryInput
  }

  export type countryCreateOrConnectWithoutBillingOrdersInput = {
    where: countryWhereUniqueInput
    create: XOR<countryCreateWithoutBillingOrdersInput, countryUncheckedCreateWithoutBillingOrdersInput>
  }

  export type stateCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    country: countryCreateNestedOneWithoutStatesInput
    cities?: cityCreateNestedManyWithoutStateInput
    warehouses?: warehouseCreateNestedManyWithoutStateInput
    highRtos?: highRtoCreateNestedManyWithoutStateInput
    admins?: adminCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingStateInput
  }

  export type stateUncheckedCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    cities?: cityUncheckedCreateNestedManyWithoutStateInput
    warehouses?: warehouseUncheckedCreateNestedManyWithoutStateInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutStateInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentStateInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingStateInput
  }

  export type stateCreateOrConnectWithoutBillingOrdersInput = {
    where: stateWhereUniqueInput
    create: XOR<stateCreateWithoutBillingOrdersInput, stateUncheckedCreateWithoutBillingOrdersInput>
  }

  export type cityCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    state: stateCreateNestedOneWithoutCitiesInput
    country: countryCreateNestedOneWithoutCitiesInput
    warehouses?: warehouseCreateNestedManyWithoutCityInput
    highRtos?: highRtoCreateNestedManyWithoutCityInput
    admins?: adminCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderCreateNestedManyWithoutShippingCityInput
  }

  export type cityUncheckedCreateWithoutBillingOrdersInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    warehouses?: warehouseUncheckedCreateNestedManyWithoutCityInput
    highRtos?: highRtoUncheckedCreateNestedManyWithoutCityInput
    admins?: adminUncheckedCreateNestedManyWithoutPermanentCityInput
    shippingOrders?: OrderUncheckedCreateNestedManyWithoutShippingCityInput
  }

  export type cityCreateOrConnectWithoutBillingOrdersInput = {
    where: cityWhereUniqueInput
    create: XOR<cityCreateWithoutBillingOrdersInput, cityUncheckedCreateWithoutBillingOrdersInput>
  }

  export type PaymentCreateWithoutOrdersInput = {
    transactionId: string
    cycle?: string | null
    amount?: number | null
    status?: string | null
    date?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type PaymentUncheckedCreateWithoutOrdersInput = {
    id?: number
    transactionId: string
    cycle?: string | null
    amount?: number | null
    status?: string | null
    date?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type PaymentCreateOrConnectWithoutOrdersInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutOrdersInput, PaymentUncheckedCreateWithoutOrdersInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    quantity: number
    price: number
    total: number
    product?: productCreateNestedOneWithoutOrderItemsInput
    variant?: productVariantCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: number
    productId?: number | null
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type countryUpsertWithoutShippingOrdersInput = {
    update: XOR<countryUpdateWithoutShippingOrdersInput, countryUncheckedUpdateWithoutShippingOrdersInput>
    create: XOR<countryCreateWithoutShippingOrdersInput, countryUncheckedCreateWithoutShippingOrdersInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutShippingOrdersInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutShippingOrdersInput, countryUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type countryUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCountryNestedInput
  }

  export type stateUpsertWithoutShippingOrdersInput = {
    update: XOR<stateUpdateWithoutShippingOrdersInput, stateUncheckedUpdateWithoutShippingOrdersInput>
    create: XOR<stateCreateWithoutShippingOrdersInput, stateUncheckedCreateWithoutShippingOrdersInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutShippingOrdersInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutShippingOrdersInput, stateUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type stateUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type cityUpsertWithoutShippingOrdersInput = {
    update: XOR<cityUpdateWithoutShippingOrdersInput, cityUncheckedUpdateWithoutShippingOrdersInput>
    create: XOR<cityCreateWithoutShippingOrdersInput, cityUncheckedCreateWithoutShippingOrdersInput>
    where?: cityWhereInput
  }

  export type cityUpdateToOneWithWhereWithoutShippingOrdersInput = {
    where?: cityWhereInput
    data: XOR<cityUpdateWithoutShippingOrdersInput, cityUncheckedUpdateWithoutShippingOrdersInput>
  }

  export type cityUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutShippingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type countryUpsertWithoutBillingOrdersInput = {
    update: XOR<countryUpdateWithoutBillingOrdersInput, countryUncheckedUpdateWithoutBillingOrdersInput>
    create: XOR<countryCreateWithoutBillingOrdersInput, countryUncheckedCreateWithoutBillingOrdersInput>
    where?: countryWhereInput
  }

  export type countryUpdateToOneWithWhereWithoutBillingOrdersInput = {
    where?: countryWhereInput
    data: XOR<countryUpdateWithoutBillingOrdersInput, countryUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type countryUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUpdateManyWithoutCountryNestedInput
    cities?: cityUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUpdateManyWithoutCountryNestedInput
    admins?: adminUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCountryNestedInput
  }

  export type countryUncheckedUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso3?: NullableStringFieldUpdateOperationsInput | string | null
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    phonecode?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    currencyName?: NullableStringFieldUpdateOperationsInput | string | null
    currencySymbol?: NullableStringFieldUpdateOperationsInput | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    states?: stateUncheckedUpdateManyWithoutCountryNestedInput
    cities?: cityUncheckedUpdateManyWithoutCountryNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutCountryNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCountryNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCountryNestedInput
    originProducts?: productUncheckedUpdateManyWithoutOriginCountryNestedInput
    shippingProducts?: productUncheckedUpdateManyWithoutShippingCountryNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCountryNestedInput
  }

  export type stateUpsertWithoutBillingOrdersInput = {
    update: XOR<stateUpdateWithoutBillingOrdersInput, stateUncheckedUpdateWithoutBillingOrdersInput>
    create: XOR<stateCreateWithoutBillingOrdersInput, stateUncheckedCreateWithoutBillingOrdersInput>
    where?: stateWhereInput
  }

  export type stateUpdateToOneWithWhereWithoutBillingOrdersInput = {
    where?: stateWhereInput
    data: XOR<stateUpdateWithoutBillingOrdersInput, stateUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type stateUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutStatesNestedInput
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
  }

  export type cityUpsertWithoutBillingOrdersInput = {
    update: XOR<cityUpdateWithoutBillingOrdersInput, cityUncheckedUpdateWithoutBillingOrdersInput>
    create: XOR<cityCreateWithoutBillingOrdersInput, cityUncheckedCreateWithoutBillingOrdersInput>
    where?: cityWhereInput
  }

  export type cityUpdateToOneWithWhereWithoutBillingOrdersInput = {
    where?: cityWhereInput
    data: XOR<cityUpdateWithoutBillingOrdersInput, cityUncheckedUpdateWithoutBillingOrdersInput>
  }

  export type cityUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutBillingOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
  }

  export type PaymentUpsertWithoutOrdersInput = {
    update: XOR<PaymentUpdateWithoutOrdersInput, PaymentUncheckedUpdateWithoutOrdersInput>
    create: XOR<PaymentCreateWithoutOrdersInput, PaymentUncheckedCreateWithoutOrdersInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutOrdersInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutOrdersInput, PaymentUncheckedUpdateWithoutOrdersInput>
  }

  export type PaymentUpdateWithoutOrdersInput = {
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    transactionId?: StringFieldUpdateOperationsInput | string
    cycle?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutItemsInput = {
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    shippingCountry?: countryCreateNestedOneWithoutShippingOrdersInput
    shippingState?: stateCreateNestedOneWithoutShippingOrdersInput
    shippingCity?: cityCreateNestedOneWithoutShippingOrdersInput
    billingCountry?: countryCreateNestedOneWithoutBillingOrdersInput
    billingState?: stateCreateNestedOneWithoutBillingOrdersInput
    billingCity?: cityCreateNestedOneWithoutBillingOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutItemsInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateOrConnectWithoutItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
  }

  export type productCreateWithoutOrderItemsInput = {
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    category: categoryCreateNestedOneWithoutProductsInput
    brand: brandCreateNestedOneWithoutProductsInput
    originCountry: countryCreateNestedOneWithoutOriginProductsInput
    shippingCountry: countryCreateNestedOneWithoutShippingProductsInput
    variants?: productVariantCreateNestedManyWithoutProductInput
  }

  export type productUncheckedCreateWithoutOrderItemsInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    variants?: productVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type productCreateOrConnectWithoutOrderItemsInput = {
    where: productWhereUniqueInput
    create: XOR<productCreateWithoutOrderItemsInput, productUncheckedCreateWithoutOrderItemsInput>
  }

  export type productVariantCreateWithoutOrderItemsInput = {
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
    product: productCreateNestedOneWithoutVariantsInput
  }

  export type productVariantUncheckedCreateWithoutOrderItemsInput = {
    id?: number
    productId: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productVariantCreateOrConnectWithoutOrderItemsInput = {
    where: productVariantWhereUniqueInput
    create: XOR<productVariantCreateWithoutOrderItemsInput, productVariantUncheckedCreateWithoutOrderItemsInput>
  }

  export type OrderUpsertWithoutItemsInput = {
    update: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type OrderUpdateWithoutItemsInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productUpsertWithoutOrderItemsInput = {
    update: XOR<productUpdateWithoutOrderItemsInput, productUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<productCreateWithoutOrderItemsInput, productUncheckedCreateWithoutOrderItemsInput>
    where?: productWhereInput
  }

  export type productUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: productWhereInput
    data: XOR<productUpdateWithoutOrderItemsInput, productUncheckedUpdateWithoutOrderItemsInput>
  }

  export type productUpdateWithoutOrderItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productVariantUpsertWithoutOrderItemsInput = {
    update: XOR<productVariantUpdateWithoutOrderItemsInput, productVariantUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<productVariantCreateWithoutOrderItemsInput, productVariantUncheckedCreateWithoutOrderItemsInput>
    where?: productVariantWhereInput
  }

  export type productVariantUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: productVariantWhereInput
    data: XOR<productVariantUpdateWithoutOrderItemsInput, productVariantUncheckedUpdateWithoutOrderItemsInput>
  }

  export type productVariantUpdateWithoutOrderItemsInput = {
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    product?: productUpdateOneRequiredWithoutVariantsNestedInput
  }

  export type productVariantUncheckedUpdateWithoutOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffCreateManyAdminInput = {
    id?: number
    name: string
    email: string
    password: string
    role?: string
    status?: string
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type bankAccountCreateManyAdminInput = {
    id?: number
    accountHolderName: string
    accountNumber: string
    bankName: string
    bankBranch: string
    accountType: string
    ifscCode: string
    cancelledChequeImage?: string | null
    paymentMethod?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionCreateManyAdminInput = {
    id?: number
    permissionId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminStaffUpdateWithoutAdminInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffUncheckedUpdateWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminStaffUncheckedUpdateManyWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountUpdateWithoutAdminInput = {
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountUncheckedUpdateWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bankAccountUncheckedUpdateManyWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    accountHolderName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    bankBranch?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    ifscCode?: StringFieldUpdateOperationsInput | string
    cancelledChequeImage?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionUpdateWithoutAdminInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permission?: permissionUpdateOneRequiredWithoutAdminPermissionsNestedInput
  }

  export type adminHasPermissionUncheckedUpdateWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionUncheckedUpdateManyWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionCreateManyPermissionInput = {
    id?: number
    adminId: number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminHasPermissionUpdateWithoutPermissionInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: adminUpdateOneRequiredWithoutPermissionsNestedInput
  }

  export type adminHasPermissionUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminHasPermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stateCreateManyCountryInput = {
    id?: bigint | number
    name: string
    iso2?: string | null
    type?: string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type cityCreateManyCountryInput = {
    id?: bigint | number
    name: string
    stateId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseCreateManyCountryInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateManyCountryInput = {
    id?: number
    pincode: string
    stateId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminCreateManyPermanentCountryInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentStateId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productCreateManyOriginCountryInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productCreateManyShippingCountryInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyShippingCountryInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyBillingCountryInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type stateUpdateWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUpdateManyWithoutStateNestedInput
    admins?: adminUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    cities?: cityUncheckedUpdateManyWithoutStateNestedInput
    warehouses?: warehouseUncheckedUpdateManyWithoutStateNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutStateNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentStateNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingStateNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingStateNestedInput
  }

  export type stateUncheckedUpdateManyWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iso2?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cityUpdateWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateManyWithoutCountryInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    stateId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUpdateWithoutCountryInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneWithoutWarehousesNestedInput
    city?: cityUpdateOneWithoutWarehousesNestedInput
  }

  export type warehouseUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUncheckedUpdateManyWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUpdateWithoutCountryInput = {
    pincode?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    state?: stateUpdateOneWithoutHighRtosNestedInput
    city?: cityUpdateOneWithoutHighRtosNestedInput
  }

  export type highRtoUncheckedUpdateWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUncheckedUpdateManyWithoutCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminUpdateWithoutPermanentCountryInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutPermanentCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateManyWithoutPermanentCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productUpdateWithoutOriginCountryInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutOriginCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateManyWithoutOriginCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productUpdateWithoutShippingCountryInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutShippingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateManyWithoutShippingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutShippingCountryInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShippingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutShippingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutBillingCountryInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutBillingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutBillingCountryInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cityCreateManyStateInput = {
    id?: bigint | number
    name: string
    countryId: bigint | number
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseCreateManyStateInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateManyStateInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    cityId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminCreateManyPermanentStateInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentCityId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyShippingStateInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyBillingStateInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type cityUpdateWithoutStateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneRequiredWithoutCitiesNestedInput
    warehouses?: warehouseUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUpdateManyWithoutCityNestedInput
    admins?: adminUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateWithoutStateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    warehouses?: warehouseUncheckedUpdateManyWithoutCityNestedInput
    highRtos?: highRtoUncheckedUpdateManyWithoutCityNestedInput
    admins?: adminUncheckedUpdateManyWithoutPermanentCityNestedInput
    shippingOrders?: OrderUncheckedUpdateManyWithoutShippingCityNestedInput
    billingOrders?: OrderUncheckedUpdateManyWithoutBillingCityNestedInput
  }

  export type cityUncheckedUpdateManyWithoutStateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    countryId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUpdateWithoutStateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutWarehousesNestedInput
    city?: cityUpdateOneWithoutWarehousesNestedInput
  }

  export type warehouseUncheckedUpdateWithoutStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUncheckedUpdateManyWithoutStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUpdateWithoutStateInput = {
    pincode?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutHighRtosNestedInput
    city?: cityUpdateOneWithoutHighRtosNestedInput
  }

  export type highRtoUncheckedUpdateWithoutStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUncheckedUpdateManyWithoutStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    cityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminUpdateWithoutPermanentStateInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCity?: cityUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutPermanentStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateManyWithoutPermanentStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutShippingStateInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShippingStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutShippingStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutBillingStateInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutBillingStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutBillingStateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseCreateManyCityInput = {
    id?: number
    name: string
    slug: string
    gst_number: string
    contact_name: string
    contact_number: string
    address_line_1: string
    address_line_2?: string | null
    postal_code: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type highRtoCreateManyCityInput = {
    id?: number
    pincode: string
    countryId?: bigint | number | null
    stateId?: bigint | number | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type adminCreateManyPermanentCityInput = {
    id?: number
    profilePicture?: string | null
    name: string
    username?: string | null
    website?: string | null
    email: string
    referralCode?: string | null
    password: string
    role?: string
    type?: string
    status?: string
    dateOfBirth?: Date | string | null
    phoneNumber?: string | null
    currentAddress?: string | null
    permanentAddress?: string | null
    permanentPostalCode?: string | null
    permanentStateId?: bigint | number | null
    permanentCountryId?: bigint | number | null
    pr_token?: string | null
    pr_expires_at?: Date | string | null
    pr_last_reset?: Date | string | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyShippingCityInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderCreateManyBillingCityInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    paymentId?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type warehouseUpdateWithoutCityInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutWarehousesNestedInput
    state?: stateUpdateOneWithoutWarehousesNestedInput
  }

  export type warehouseUncheckedUpdateWithoutCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type warehouseUncheckedUpdateManyWithoutCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    gst_number?: StringFieldUpdateOperationsInput | string
    contact_name?: StringFieldUpdateOperationsInput | string
    contact_number?: StringFieldUpdateOperationsInput | string
    address_line_1?: StringFieldUpdateOperationsInput | string
    address_line_2?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUpdateWithoutCityInput = {
    pincode?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    country?: countryUpdateOneWithoutHighRtosNestedInput
    state?: stateUpdateOneWithoutHighRtosNestedInput
  }

  export type highRtoUncheckedUpdateWithoutCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type highRtoUncheckedUpdateManyWithoutCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    pincode?: StringFieldUpdateOperationsInput | string
    countryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    stateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type adminUpdateWithoutPermanentCityInput = {
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    permanentState?: stateUpdateOneWithoutAdminsNestedInput
    permanentCountry?: countryUpdateOneWithoutAdminsNestedInput
    staff?: adminStaffUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateWithoutPermanentCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: adminStaffUncheckedUpdateManyWithoutAdminNestedInput
    companyDetail?: companyDetailUncheckedUpdateOneWithoutAdminNestedInput
    bankAccounts?: bankAccountUncheckedUpdateManyWithoutAdminNestedInput
    permissions?: adminHasPermissionUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type adminUncheckedUpdateManyWithoutPermanentCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    referralCode?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    currentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    permanentPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    permanentStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    permanentCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    pr_token?: NullableStringFieldUpdateOperationsInput | string | null
    pr_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_last_reset?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutShippingCityInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShippingCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutShippingCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutBillingCityInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutBillingCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutBillingCityInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productCreateManyCategoryInput = {
    id?: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId: number
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productRequestCreateManyCategoryInput = {
    id?: number
    name: string
    expectedPrice?: number | null
    expectedDailyOrders?: string | null
    url?: string | null
    image?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: brandUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    brandId?: IntFieldUpdateOperationsInput | number
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productRequestUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    expectedPrice?: NullableIntFieldUpdateOperationsInput | number | null
    expectedDailyOrders?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productCreateManyBrandInput = {
    id?: number
    categoryId: number
    name: string
    slug: string
    main_sku: string
    description?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    originCountryId: bigint | number
    ean?: string | null
    hsnCode?: string | null
    taxRate?: number | null
    upc?: string | null
    rtoAddress?: string | null
    pickupAddress?: string | null
    shippingCountryId: bigint | number
    video_url?: string | null
    list_as?: string | null
    shipping_time?: string | null
    weight?: number | null
    package_length?: number | null
    package_width?: number | null
    package_height?: number | null
    chargeable_weight?: number | null
    package_weight_image?: string | null
    package_length_image?: string | null
    package_width_image?: string | null
    package_height_image?: string | null
    product_detail_video?: string | null
    training_guidance_video?: string | null
    status?: boolean
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type productUpdateWithoutBrandInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    category?: categoryUpdateOneRequiredWithoutProductsNestedInput
    originCountry?: countryUpdateOneRequiredWithoutOriginProductsNestedInput
    shippingCountry?: countryUpdateOneRequiredWithoutShippingProductsNestedInput
    variants?: productVariantUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: productVariantUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type productUncheckedUpdateManyWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    main_sku?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    originCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    ean?: NullableStringFieldUpdateOperationsInput | string | null
    hsnCode?: NullableStringFieldUpdateOperationsInput | string | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    upc?: NullableStringFieldUpdateOperationsInput | string | null
    rtoAddress?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountryId?: BigIntFieldUpdateOperationsInput | bigint | number
    video_url?: NullableStringFieldUpdateOperationsInput | string | null
    list_as?: NullableStringFieldUpdateOperationsInput | string | null
    shipping_time?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_length?: NullableFloatFieldUpdateOperationsInput | number | null
    package_width?: NullableFloatFieldUpdateOperationsInput | number | null
    package_height?: NullableFloatFieldUpdateOperationsInput | number | null
    chargeable_weight?: NullableFloatFieldUpdateOperationsInput | number | null
    package_weight_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_length_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_width_image?: NullableStringFieldUpdateOperationsInput | string | null
    package_height_image?: NullableStringFieldUpdateOperationsInput | string | null
    product_detail_video?: NullableStringFieldUpdateOperationsInput | string | null
    training_guidance_video?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type productVariantCreateManyProductInput = {
    id?: number
    image: string
    color: string
    sku: string
    qty: number
    currency: string
    article_id?: string | null
    product_link?: string | null
    suggested_price?: number | null
    shipowl_price?: number | null
    rto_suggested_price?: number | null
    rto_price?: number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderItemCreateManyProductInput = {
    id?: number
    orderId: number
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type productVariantUpdateWithoutProductInput = {
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUpdateManyWithoutVariantNestedInput
  }

  export type productVariantUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type productVariantUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    qty?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    product_link?: NullableStringFieldUpdateOperationsInput | string | null
    suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    shipowl_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_suggested_price?: NullableFloatFieldUpdateOperationsInput | number | null
    rto_price?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemUpdateWithoutProductInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    variant?: productVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemCreateManyVariantInput = {
    id?: number
    orderId: number
    productId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemUpdateWithoutVariantInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    product?: productUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutVariantInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemUncheckedUpdateManyWithoutVariantInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderCreateManyPaymentInput = {
    id?: number
    orderNumber: string
    status: string
    orderNote?: string | null
    subtotal?: number
    tax?: number
    discount?: number
    totalAmount?: number
    currency?: string
    shippingName: string
    shippingPhone: string
    shippingEmail: string
    shippingAddress: string
    shippingZip: string
    shippingCountryId?: bigint | number | null
    shippingStateId?: bigint | number | null
    shippingCityId?: bigint | number | null
    billingName: string
    billingPhone: string
    billingEmail: string
    billingAddress: string
    billingZip: string
    billingCountryId?: bigint | number | null
    billingStateId?: bigint | number | null
    billingCityId?: bigint | number | null
    createdAt?: Date | string
    createdBy?: number | null
    createdByRole?: string | null
    updatedAt?: Date | string
    updatedBy?: number | null
    updatedByRole?: string | null
    deletedAt?: Date | string | null
    deletedBy?: number | null
    deletedByRole?: string | null
  }

  export type OrderUpdateWithoutPaymentInput = {
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    shippingCountry?: countryUpdateOneWithoutShippingOrdersNestedInput
    shippingState?: stateUpdateOneWithoutShippingOrdersNestedInput
    shippingCity?: cityUpdateOneWithoutShippingOrdersNestedInput
    billingCountry?: countryUpdateOneWithoutBillingOrdersNestedInput
    billingState?: stateUpdateOneWithoutBillingOrdersNestedInput
    billingCity?: cityUpdateOneWithoutBillingOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    orderNote?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: FloatFieldUpdateOperationsInput | number
    tax?: FloatFieldUpdateOperationsInput | number
    discount?: FloatFieldUpdateOperationsInput | number
    totalAmount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    shippingName?: StringFieldUpdateOperationsInput | string
    shippingPhone?: StringFieldUpdateOperationsInput | string
    shippingEmail?: StringFieldUpdateOperationsInput | string
    shippingAddress?: StringFieldUpdateOperationsInput | string
    shippingZip?: StringFieldUpdateOperationsInput | string
    shippingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    shippingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingName?: StringFieldUpdateOperationsInput | string
    billingPhone?: StringFieldUpdateOperationsInput | string
    billingEmail?: StringFieldUpdateOperationsInput | string
    billingAddress?: StringFieldUpdateOperationsInput | string
    billingZip?: StringFieldUpdateOperationsInput | string
    billingCountryId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingStateId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    billingCityId?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdByRole?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedByRole?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedByRole?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateManyOrderInput = {
    id?: number
    productId?: number | null
    variantId?: number | null
    quantity: number
    price: number
    total: number
  }

  export type OrderItemUpdateWithoutOrderInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    product?: productUpdateOneWithoutOrderItemsNestedInput
    variant?: productVariantUpdateOneWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: NullableIntFieldUpdateOperationsInput | number | null
    variantId?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}