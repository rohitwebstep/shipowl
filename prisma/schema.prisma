// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./prisma/generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("admin")
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  staff     adminStaff[]
}

model adminStaff {
  id        Int      @id @default(autoincrement())
  admin_id   Int      @unique
  name      String
  email     String   @unique
  password  String
  role      String   @default("admin")
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin      admin     @relation(fields: [admin_id], references: [id], onDelete: Cascade)
}

model category {
  id             Int      @id @default(autoincrement())
  name           String
  slug           String   @unique
  description    String?
  image          String?
  status         Boolean  @default(false)
  createdBy      Int?
  createdByRole  String?
  updatedBy      Int?
  updatedByRole  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deletedAt      DateTime?
  deletedBy      Int?
  deletedByRole  String?

  @@index([createdBy])
  @@index([updatedBy])
  @@index([deletedAt])
}

model brand {
  id             Int      @id @default(autoincrement())
  name           String
  slug           String   @unique
  description    String?
  image          String?
  status         Boolean  @default(false)
  createdBy      Int?
  createdByRole  String?
  updatedBy      Int?
  updatedByRole  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deletedAt      DateTime?
  deletedBy      Int?
  deletedByRole  String?

  @@index([createdBy])
  @@index([updatedBy])
  @@index([deletedAt])
}

model product {
  id             Int      @id @default(autoincrement())
  name           String
  slug           String   @unique
  description    String?
  image          String?
  price          Decimal  @db.Decimal(10, 2)
  quantity       Int      @default(0)
  status         Boolean  @default(false)
  createdBy      Int?
  createdByRole  String?
  updatedBy      Int?
  updatedByRole  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([createdBy])
  @@index([updatedBy])
}