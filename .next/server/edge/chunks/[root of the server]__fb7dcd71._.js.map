{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middlewares/adminAuth.ts"],"sourcesContent":["// src/adminAuthMiddleware.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { jwtVerify } from 'jose';\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\r\n\r\nexport async function adminAuthMiddleware(req: NextRequest) {\r\n    try {\r\n        // Extract token from Authorization header\r\n        const token = req.headers.get(\"authorization\")?.split(\" \")[1];\r\n        if (!token) {\r\n            return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n        }\r\n\r\n        // Verify token and extract admin details\r\n        const { payload } = await jwtVerify(token, new TextEncoder().encode(SECRET_KEY));\r\n        if (!payload || typeof payload !== 'object' || typeof payload.adminId !== 'number') {\r\n            return NextResponse.json({ error: \"Forbidden\" }, { status: 403 });\r\n        }\r\n\r\n        // Clone the request and set custom headers\r\n        const response = NextResponse.next();\r\n        response.headers.set(\"x-admin-id\", payload.adminId.toString());\r\n\r\n        return response;\r\n    } catch (error) {\r\n        console.error(`error - `, error);\r\n        return NextResponse.json({ error: \"Internal Server Error\" }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;AAAA;AACA;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,eAAe,oBAAoB,GAAgB;IACtD,IAAI;QACA,0CAA0C;QAC1C,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;QAC7D,IAAI,CAAC,OAAO;YACR,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,yCAAyC;QACzC,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACpE,IAAI,CAAC,WAAW,OAAO,YAAY,YAAY,OAAO,QAAQ,OAAO,KAAK,UAAU;YAChF,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAY,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,2CAA2C;QAC3C,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;QAClC,SAAS,OAAO,CAAC,GAAG,CAAC,cAAc,QAAQ,OAAO,CAAC,QAAQ;QAE3D,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;QAC1B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACJ"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { adminAuthMiddleware } from \"./middlewares/adminAuth\";  // Import admin middleware\r\n\r\nexport function middleware(req: NextRequest) {\r\n    // Apply adminAuthMiddleware to /api/admin/list route\r\n    if (req.url.includes(\"/api/admin/list\")) {\r\n        return adminAuthMiddleware(req);\r\n    }\r\n\r\n    return NextResponse.next();  // Continue processing for other routes\r\n}\r\n\r\n// Define the matcher for specific routes\r\nexport const config = {\r\n    matcher: [\r\n        \"/api/admin/list\",\r\n    ],\r\n};\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AAAA;AACA,gPAAgE,0BAA0B;;;AAEnF,SAAS,WAAW,GAAgB;IACvC,qDAAqD;IACrD,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,oBAAoB;QACrC,OAAO,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE;IAC/B;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,IAAK,uCAAuC;AACxE;AAGO,MAAM,SAAS;IAClB,SAAS;QACL;KACH;AACL"}}]
}