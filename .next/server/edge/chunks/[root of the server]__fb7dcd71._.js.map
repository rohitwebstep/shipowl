{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middlewares/adminAuth.ts"],"sourcesContent":["// src/adminAuthMiddleware.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { jwtVerify } from 'jose';\n\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\n\nexport async function adminAuthMiddleware(req: NextRequest, adminRole: string, applicableRoles: string[]) {\n    try {\n        // Extract token from Authorization header\n        const token = req.headers.get(\"authorization\")?.split(\" \")[1];\n        if (!token) {\n            return NextResponse.json({ error: \"Access denied. Please log in to continue.\" }, { status: 401 });\n        }\n\n        // Verify token and extract admin details\n        const { payload } = await jwtVerify(token, new TextEncoder().encode(SECRET_KEY));\n        if (!payload || typeof payload !== 'object' || typeof payload.adminId !== 'number' || typeof payload.adminRole !== 'string') {\n            return NextResponse.json({ error: \"Access forbidden. Invalid token payload.\" }, { status: 403 });\n        } else if (!applicableRoles.includes(payload.adminRole)) {\n            return NextResponse.json({ error: \"Access denied. Admin privileges required.\" }, { status: 403 });\n        }\n\n        // Clone the request and set custom headers\n        const response = NextResponse.next();\n        response.headers.set(`x-${adminRole}-id`, payload.adminId.toString());\n        response.headers.set(`x-${adminRole}-role`, payload.adminRole.toString());\n\n        return response;\n    } catch (error) {\n        console.error(`error - `, error);\n        let message = \"Authentication failed. Please try again.\";\n\n        if (typeof error === \"object\" && error !== null && \"code\" in error) {\n            const err = error as { code: string };\n            if (err.code === 'ERR_JWT_EXPIRED') {\n                message = \"Session expired. Please log in again.\";\n            }\n        }\n        return NextResponse.json({ error: message }, { status: 401 });\n    }\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;AAAA;AACA;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,eAAe,oBAAoB,GAAgB,EAAE,SAAiB,EAAE,eAAyB;IACpG,IAAI;QACA,0CAA0C;QAC1C,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;QAC7D,IAAI,CAAC,OAAO;YACR,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4C,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,yCAAyC;QACzC,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACpE,IAAI,CAAC,WAAW,OAAO,YAAY,YAAY,OAAO,QAAQ,OAAO,KAAK,YAAY,OAAO,QAAQ,SAAS,KAAK,UAAU;YACzH,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2C,GAAG;gBAAE,QAAQ;YAAI;QAClG,OAAO,IAAI,CAAC,gBAAgB,QAAQ,CAAC,QAAQ,SAAS,GAAG;YACrD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4C,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,2CAA2C;QAC3C,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;QAClC,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,OAAO,CAAC,QAAQ;QAClE,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,KAAK,CAAC,EAAE,QAAQ,SAAS,CAAC,QAAQ;QAEtE,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;QAC1B,IAAI,UAAU;QAEd,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,UAAU,OAAO;YAChE,MAAM,MAAM;YACZ,IAAI,IAAI,IAAI,KAAK,mBAAmB;gBAChC,UAAU;YACd;QACJ;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC/D;AACJ"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { adminAuthMiddleware } from \"./middlewares/adminAuth\";  // Import admin middleware\n\nexport function middleware(req: NextRequest) {\n    const res = NextResponse.next();\n    // Apply CORS headers globally\n    res.headers.set(\"Access-Control-Allow-Origin\", \"*\");  // Change '*' to your frontend URL in production\n    // res.headers.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n    res.headers.set(\"Access-Control-Allow-Methods\", \"*\");\n    res.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n\n    console.log(`req.method: ${req.method}`);\n    console.log(`req.url: ${req.url}`);\n\n    // Handle preflight requests\n    if (req.method === \"OPTIONS\") {\n        return new Response(null, { status: 200, headers: res.headers });\n    }\n\n    // Apply adminAuthMiddleware to /api/admin/list route\n    const adminProtectedRoutes = [\"/api/admin/list\", \"/api/admin/auth/verify\"];\n    const dropshipperProtectedRoutes = [\"/api/dropshipper/list\", \"/api/dropshipper/auth/verify\"];\n    const supplierProtectedRoutes = [\"/api/supplier/list\", \"/api/supplier/auth/verify\"];\n    const restProtectedRoutes = [\"/api/product/create\", \"/api/category\", \"/api/category/:path*\", \"/api/brand\", \"/api/brand/:path*\", \"/api/warehouse\", \"/api/warehouse/:path*\"];\n\n    if (adminProtectedRoutes.some(route => req.url.includes(route))) {\n        const applicableRoles = [\"admin\", \"admin_staff\"];\n        const adminRole = \"admin\";\n        return adminAuthMiddleware(req, adminRole, applicableRoles);\n    }\n\n    if (dropshipperProtectedRoutes.some(route => req.url.includes(route))) {\n        const applicableRoles = [\"dropshipper\", \"dropshipper_staff\"];\n        const adminRole = \"dropshipper\";\n        return adminAuthMiddleware(req, adminRole, applicableRoles);\n    }\n\n    if (supplierProtectedRoutes.some(route => req.url.includes(route))) {\n        const applicableRoles = [\"supplier\", \"supplier_staff\"];\n        const adminRole = \"supplier\";\n        return adminAuthMiddleware(req, adminRole, applicableRoles);\n    }\n\n    if (restProtectedRoutes.some(route => req.url.includes(route))) {\n        const applicableRoles = [\"admin\", \"admin_staff\", \"dropshipper\", \"dropshipper_staff\", \"supplier\", \"supplier_staff\"];\n        const adminRole = \"admin\";\n        return adminAuthMiddleware(req, adminRole, applicableRoles);\n    }\n\n    return req;  // Continue processing for other routes\n}\n\n// Define the matcher for specific routes\nexport const config = {\n    matcher: [\"/api/admin/list\", \"/api/admin/auth/verify\", \"/api/dropshipper/list\", \"/api/dropshipper/auth/verify\", \"/api/supplier/list\", \"/api/supplier/auth/verify\", \"/api/product/create\", \"/api/category\", \"/api/category/:path*\", \"/api/brand\", \"/api/brand/:path*\", \"/api/warehouse\", \"/api/warehouse/:path*\"],\n};\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AAAA;AACA,gPAAgE,0BAA0B;;;AAEnF,SAAS,WAAW,GAAgB;IACvC,MAAM,MAAM,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC7B,8BAA8B;IAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,+BAA+B,MAAO,gDAAgD;IACtG,sFAAsF;IACtF,IAAI,OAAO,CAAC,GAAG,CAAC,gCAAgC;IAChD,IAAI,OAAO,CAAC,GAAG,CAAC,gCAAgC;IAEhD,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,MAAM,EAAE;IACvC,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,GAAG,EAAE;IAEjC,4BAA4B;IAC5B,IAAI,IAAI,MAAM,KAAK,WAAW;QAC1B,OAAO,IAAI,SAAS,MAAM;YAAE,QAAQ;YAAK,SAAS,IAAI,OAAO;QAAC;IAClE;IAEA,qDAAqD;IACrD,MAAM,uBAAuB;QAAC;QAAmB;KAAyB;IAC1E,MAAM,6BAA6B;QAAC;QAAyB;KAA+B;IAC5F,MAAM,0BAA0B;QAAC;QAAsB;KAA4B;IACnF,MAAM,sBAAsB;QAAC;QAAuB;QAAiB;QAAwB;QAAc;QAAqB;QAAkB;KAAwB;IAE1K,IAAI,qBAAqB,IAAI,CAAC,CAAA,QAAS,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS;QAC7D,MAAM,kBAAkB;YAAC;YAAS;SAAc;QAChD,MAAM,YAAY;QAClB,OAAO,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,WAAW;IAC/C;IAEA,IAAI,2BAA2B,IAAI,CAAC,CAAA,QAAS,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS;QACnE,MAAM,kBAAkB;YAAC;YAAe;SAAoB;QAC5D,MAAM,YAAY;QAClB,OAAO,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,WAAW;IAC/C;IAEA,IAAI,wBAAwB,IAAI,CAAC,CAAA,QAAS,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS;QAChE,MAAM,kBAAkB;YAAC;YAAY;SAAiB;QACtD,MAAM,YAAY;QAClB,OAAO,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,WAAW;IAC/C;IAEA,IAAI,oBAAoB,IAAI,CAAC,CAAA,QAAS,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS;QAC5D,MAAM,kBAAkB;YAAC;YAAS;YAAe;YAAe;YAAqB;YAAY;SAAiB;QAClH,MAAM,YAAY;QAClB,OAAO,CAAA,GAAA,uIAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,WAAW;IAC/C;IAEA,OAAO,KAAM,uCAAuC;AACxD;AAGO,MAAM,SAAS;IAClB,SAAS;QAAC;QAAmB;QAA0B;QAAyB;QAAgC;QAAsB;QAA6B;QAAuB;QAAiB;QAAwB;QAAc;QAAqB;QAAkB;KAAwB;AACpT"}}]
}