{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middlewares/adminAuth.ts"],"sourcesContent":["// src/adminAuthMiddleware.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { jwtVerify } from 'jose';\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\r\n\r\nexport async function adminAuthMiddleware(req: NextRequest, adminRole: string, applicableRoles: string[]) {\r\n    try {\r\n        // Extract token from Authorization header\r\n        const token = req.headers.get(\"authorization\")?.split(\" \")[1];\r\n        if (!token) {\r\n            return NextResponse.json({ error: \"Access denied. Please log in to continue.\" }, { status: 401 });\r\n        }\r\n\r\n        console.log(`Role: ${adminRole}`);\r\n\r\n        // Verify token and extract admin details\r\n        const { payload } = await jwtVerify(token, new TextEncoder().encode(SECRET_KEY));\r\n        console.log(`payload:`, payload);\r\n        if (!payload || typeof payload !== 'object' || typeof payload.adminId !== 'number' || typeof payload.adminRole !== 'string') {\r\n            return NextResponse.json({ error: \"Access forbidden. Invalid token payload.\" }, { status: 403 });\r\n        } else if (!applicableRoles.includes(payload.adminRole)) {\r\n            return NextResponse.json({ error: \"Access denied. Admin privileges required.\" }, { status: 403 });\r\n        }\r\n\r\n        console.log(`payload - Admin ID: ${payload.adminId}, Role: ${payload.adminRole}`);\r\n        // Clone the request and set custom headers\r\n        const response = NextResponse.next();\r\n        response.headers.set(`x-${adminRole}-id`, payload.adminId.toString());\r\n        response.headers.set(`x-${adminRole}-role`, payload.adminRole.toString());\r\n\r\n        return response;\r\n    } catch (error) {\r\n        console.error(`error - `, error);\r\n        let message = \"Authentication failed. Please try again.\";\r\n\r\n        if (typeof error === \"object\" && error !== null && \"code\" in error) {\r\n            const err = error as { code: string };\r\n            if (err.code === 'ERR_JWT_EXPIRED') {\r\n                message = \"Session expired. Please log in again.\";\r\n            }\r\n        }\r\n        return NextResponse.json({ error: message }, { status: 401 });\r\n    }\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;AAAA;AACA;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,eAAe,oBAAoB,GAAgB,EAAE,SAAiB,EAAE,eAAyB;IACpG,IAAI;QACA,0CAA0C;QAC1C,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;QAC7D,IAAI,CAAC,OAAO;YACR,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4C,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,QAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,WAAW;QAEhC,yCAAyC;QACzC,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACpE,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;QACxB,IAAI,CAAC,WAAW,OAAO,YAAY,YAAY,OAAO,QAAQ,OAAO,KAAK,YAAY,OAAO,QAAQ,SAAS,KAAK,UAAU;YACzH,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2C,GAAG;gBAAE,QAAQ;YAAI;QAClG,OAAO,IAAI,CAAC,gBAAgB,QAAQ,CAAC,QAAQ,SAAS,GAAG;YACrD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4C,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,QAAQ,OAAO,CAAC,QAAQ,EAAE,QAAQ,SAAS,EAAE;QAChF,2CAA2C;QAC3C,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;QAClC,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,OAAO,CAAC,QAAQ;QAClE,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,UAAU,KAAK,CAAC,EAAE,QAAQ,SAAS,CAAC,QAAQ;QAEtE,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;QAC1B,IAAI,UAAU;QAEd,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,UAAU,OAAO;YAChE,MAAM,MAAM;YACZ,IAAI,IAAI,IAAI,KAAK,mBAAmB;gBAChC,UAAU;YACd;QACJ;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC/D;AACJ"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { adminAuthMiddleware } from \"./middlewares/adminAuth\";\r\n\r\ntype SkippableRoute = string | { route: string; methods?: string[] };\r\n\r\ntype RouteProtection = {\r\n    skip?: boolean;\r\n    routes: SkippableRoute[];\r\n    role?: string;\r\n    applicableRoles?: string[];\r\n};\r\n\r\n// Helper function to check if a pathname matches a route string or pattern\r\nfunction routeMatches(pathname: string, routes: string[]): boolean {\r\n    return routes.some((route) => pathname === route || pathname.startsWith(route));\r\n}\r\n\r\n// Helper function to check if pathname + method match any skippable route entry\r\nfunction routeMatchesWithMethod(\r\n    pathname: string,\r\n    method: string,\r\n    routes: SkippableRoute[]\r\n): boolean {\r\n    return routes.some((routeObj) => {\r\n        if (typeof routeObj === \"string\") {\r\n            // String route means skip for all methods\r\n            return pathname === routeObj || pathname.startsWith(routeObj);\r\n        } else {\r\n            // Object with route + optional methods array\r\n            const matchesRoute =\r\n                pathname === routeObj.route || pathname.startsWith(routeObj.route);\r\n            if (!matchesRoute) return false;\r\n            if (!routeObj.methods) return true; // no method specified means skip all methods\r\n            return routeObj.methods.includes(method);\r\n        }\r\n    });\r\n}\r\n\r\nexport function middleware(req: NextRequest) {\r\n    const res = NextResponse.next();\r\n\r\n    // Apply CORS headers globally\r\n    res.headers.set(\"Access-Control-Allow-Origin\", \"*\"); // TODO: Replace '*' with actual domain in production\r\n    res.headers.set(\"Access-Control-Allow-Methods\", \"*\");\r\n    res.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n\r\n    // Log request method and URL (for debugging)\r\n    console.log(`req.method: ${req.method}`);\r\n    console.log(`req.url: ${req.url}`);\r\n\r\n    // Handle preflight OPTIONS requests quickly\r\n    if (req.method === \"OPTIONS\") {\r\n        return new Response(null, { status: 200, headers: res.headers });\r\n    }\r\n\r\n    const pathname = req.nextUrl.pathname;\r\n    const method = req.method;\r\n\r\n    const routeProtections: RouteProtection[] = [\r\n        {\r\n            skip: true,\r\n            routes: [\r\n                \"/api/admin/auth/login\",\r\n                \"/api/dropshipper/auth/login\",\r\n                \"/api/dropshipper/auth/registration\",\r\n                \"/api/supplier/auth/login\",\r\n                \"/api/supplier/auth/registration\",\r\n                { route: \"/api/location/country\", methods: [\"GET\"] },\r\n                { route: \"/api/location/country/[countryId]/states\", methods: [\"GET\"] },\r\n                { route: \"/api/location/state\", methods: [\"GET\"] },\r\n                { route: \"/api/location/state/[stateId]/cities\", methods: [\"GET\"] },\r\n                { route: \"/api/location/city\", methods: [\"GET\"] },\r\n            ],\r\n        },\r\n        {\r\n            routes: [\r\n                \"/api/admin\",\r\n                \"/api/admin/:path*\",\r\n                \"/api/product\",\r\n                \"/api/category\",\r\n                \"/api/brand\"\r\n            ],\r\n            role: \"admin\",\r\n            applicableRoles: [\"admin\", \"admin_staff\"],\r\n        },\r\n        {\r\n            routes: [\r\n                \"/api/dropshipper/list\",\r\n                \"/api/dropshipper/auth/verify\",\r\n                \"/api/dropshipper/profile\",\r\n                \"/api/dropshipper/profile/update\",\r\n            ],\r\n            role: \"dropshipper\",\r\n            applicableRoles: [\"dropshipper\", \"dropshipper_staff\"],\r\n        },\r\n        {\r\n            routes: [\r\n                \"/api/supplier/list\",\r\n                \"/api/supplier/auth/verify\",\r\n                \"/api/supplier/profile\",\r\n                \"/api/supplier/profile/update\",\r\n                \"/api/supplier/product\",\r\n            ],\r\n            role: \"supplier\",\r\n            applicableRoles: [\"supplier\", \"supplier_staff\"],\r\n        },\r\n        {\r\n            routes: [\r\n\r\n                \"/api/warehouse\",\r\n                \"/api/warehouse/\",\r\n                \"/api/location/country\",\r\n                \"/api/location/country/\",\r\n                \"/api/location/state\",\r\n                \"/api/location/state/\",\r\n                \"/api/location/city\",\r\n                \"/api/location/city/\",\r\n                \"/api/supplier\",\r\n                \"/api/dropshipper\",\r\n                \"/api/dropshipper/\",\r\n                \"/api/courier-company\",\r\n                \"/api/courier-company/:path*\",\r\n                \"/api/high-rto\",\r\n                \"/api/high-rto/:path*\",\r\n                \"/api/good-pincode\",\r\n                \"/api/good-pincode/:path*\",\r\n                \"/api/bad-pincode\",\r\n                \"/api/bad-pincode/:path*\",\r\n                \"/api/payment\",\r\n                \"/api/payment/:path*\",\r\n                \"/api/order\",\r\n            ],\r\n            role: \"admin\",\r\n            applicableRoles: [\r\n                \"admin\",\r\n                \"admin_staff\",\r\n                \"dropshipper\",\r\n                \"dropshipper_staff\",\r\n                \"supplier\",\r\n                \"supplier_staff\",\r\n            ],\r\n        },\r\n    ];\r\n\r\n    for (const protection of routeProtections) {\r\n        if (protection.skip) {\r\n            // If skip is true, check with method-aware matcher\r\n            if (routeMatchesWithMethod(pathname, method, protection.routes)) {\r\n                // Skip auth for this route and method\r\n                return res;\r\n            }\r\n            continue; // check next protection if no match\r\n        }\r\n\r\n        // For non-skipped routes, just check route matches ignoring method here\r\n        if (routeMatches(pathname, protection.routes as string[])) {\r\n            if (protection.role && protection.applicableRoles) {\r\n                console.log(`req.url: matched protected route for role ${protection.role}`);\r\n                return adminAuthMiddleware(req, protection.role, protection.applicableRoles);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    return res; // Proceed normally if no protection or skipped\r\n}\r\n\r\nexport const config = {\r\n    matcher: [\r\n        \"/api/admin\",\r\n        \"/api/admin/:path*\",\r\n        \"/api/dropshipper\",\r\n        \"/api/dropshipper/:path*\",\r\n        \"/api/supplier\",\r\n        \"/api/supplier/:path*\",\r\n        \"/api/category\",\r\n        \"/api/category/:path*\",\r\n        \"/api/brand\",\r\n        \"/api/brand/:path*\",\r\n        \"/api/warehouse\",\r\n        \"/api/warehouse/:path*\",\r\n        \"/api/location/country\",\r\n        \"/api/location/country/:path*\",\r\n        \"/api/location/state\",\r\n        \"/api/location/state/:path*\",\r\n        \"/api/location/city\",\r\n        \"/api/location/city/:path*\",\r\n        \"/api/product\",\r\n        \"/api/product/:path*\",\r\n        \"/api/courier-company\",\r\n        \"/api/courier-company/:path*\",\r\n        \"/api/high-rto\",\r\n        \"/api/high-rto/:path*\",\r\n        \"/api/good-pincode\",\r\n        \"/api/good-pincode/:path*\",\r\n        \"/api/bad-pincode\",\r\n        \"/api/bad-pincode/:path*\",\r\n        \"/api/payment\",\r\n        \"/api/payment/:path*\",\r\n        \"/api/order\",\r\n        \"/api/order/:path*\",\r\n    ],\r\n};\r\n"],"names":[],"mappings":"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"}}]
}