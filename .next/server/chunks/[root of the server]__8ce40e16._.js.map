{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nasync function connectToDatabase() {\r\n    try {\r\n        // Attempt to connect to the database\r\n        await prisma.$connect();\r\n        console.log(\"Database connection established successfully.\");\r\n    } catch (error) {\r\n        // If connection fails, log the error\r\n        console.error(\"Database connection failed:\", error);\r\n        // Avoid using process.exit in Edge Runtime\r\n        // Instead, you can throw an error to be handled by the calling code\r\n        throw new Error(\"Database connection failed\");\r\n    }\r\n}\r\n\r\nconnectToDatabase().catch((error) => {\r\n    // Handle any unhandled promise rejections here, if necessary\r\n    console.error(error);\r\n    // You can choose to return a response or perform other actions instead of exiting\r\n});\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAE/B,eAAe;IACX,IAAI;QACA,qCAAqC;QACrC,MAAM,OAAO,QAAQ;QACrB,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,OAAO;QACZ,qCAAqC;QACrC,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,2CAA2C;QAC3C,oEAAoE;QACpE,MAAM,IAAI,MAAM;IACpB;AACJ;AAEA,oBAAoB,KAAK,CAAC,CAAC;IACvB,6DAA6D;IAC7D,QAAQ,KAAK,CAAC;AACd,kFAAkF;AACtF;uCAEe","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/utils/authUtils.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport { jwtVerify } from 'jose';\r\nimport prisma from \"@/lib/prisma\";\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\r\n\r\nexport function generateToken(adminId: number, adminRole: string) {\r\n    return jwt.sign({ adminId, adminRole }, SECRET_KEY, { expiresIn: '1h' });\r\n}\r\n\r\nexport async function verifyToken(token: string) {\r\n    try {\r\n        const { payload } = await jwtVerify(token, new TextEncoder().encode(SECRET_KEY));\r\n        return { payload, status: true, message: \"Token is valid\" };\r\n    } catch (error) {\r\n        let message = \"Authentication failed. Please try again.\";\r\n\r\n        if (typeof error === \"object\" && error !== null && \"code\" in error) {\r\n            const err = error as { code: string };\r\n            if (err.code === 'ERR_JWT_EXPIRED') {\r\n                message = \"Session expired. Please log in again.\";\r\n            }\r\n        }\r\n        return { payload: null, status: false, message };\r\n    }\r\n}\r\n\r\n// Check if admin exists in the database\r\nexport async function isUserExist(adminId: number, adminRole: string) {\r\n    try {\r\n        const adminRoleStr = String(adminRole); // Ensure it's a string\r\n        const adminModel = [\"admin\", \"dropshipper\", \"supplier\"].includes(adminRoleStr) ? \"admin\" : \"adminStaff\";\r\n\r\n        // Fetch admin details from database\r\n        let admin\r\n        if (adminModel === \"admin\") {\r\n            admin = await prisma.admin.findUnique({\r\n                where: { id: adminId, role: adminRoleStr },\r\n                select: {\r\n                    id: true,\r\n                    name: true,\r\n                    email: true,\r\n                    password: true, // Hashed password stored in DB\r\n                    role: true,\r\n                },\r\n            });\r\n        } else {\r\n            admin = await prisma.adminStaff.findUnique({\r\n                where: { id: adminId, role: adminRoleStr },\r\n                select: {\r\n                    id: true,\r\n                    name: true,\r\n                    email: true,\r\n                    password: true, // Hashed password stored in DB\r\n                    role: true,\r\n                },\r\n            });\r\n        }\r\n\r\n        // If admin doesn't exist, return false with a message\r\n        if (!admin) {\r\n            return { status: false, message: \"User with the provided ID does not exist\" };\r\n        }\r\n\r\n        // Return admin details if found\r\n        return { status: true, admin };\r\n    } catch (error) {\r\n        console.error(\"Error fetching admin by ID:\", error);\r\n        return { status: false, message: \"Internal Server Error\" };\r\n    }\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,SAAS,cAAc,OAAe,EAAE,SAAiB;IAC5D,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;QAAS;IAAU,GAAG,YAAY;QAAE,WAAW;IAAK;AAC1E;AAEO,eAAe,YAAY,KAAa;IAC3C,IAAI;QACA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACpE,OAAO;YAAE;YAAS,QAAQ;YAAM,SAAS;QAAiB;IAC9D,EAAE,OAAO,OAAO;QACZ,IAAI,UAAU;QAEd,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,UAAU,OAAO;YAChE,MAAM,MAAM;YACZ,IAAI,IAAI,IAAI,KAAK,mBAAmB;gBAChC,UAAU;YACd;QACJ;QACA,OAAO;YAAE,SAAS;YAAM,QAAQ;YAAO;QAAQ;IACnD;AACJ;AAGO,eAAe,YAAY,OAAe,EAAE,SAAiB;IAChE,IAAI;QACA,MAAM,eAAe,OAAO,YAAY,uBAAuB;QAC/D,MAAM,aAAa;YAAC;YAAS;YAAe;SAAW,CAAC,QAAQ,CAAC,gBAAgB,UAAU;QAE3F,oCAAoC;QACpC,IAAI;QACJ,IAAI,eAAe,SAAS;YACxB,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;gBAClC,OAAO;oBAAE,IAAI;oBAAS,MAAM;gBAAa;gBACzC,QAAQ;oBACJ,IAAI;oBACJ,MAAM;oBACN,OAAO;oBACP,UAAU;oBACV,MAAM;gBACV;YACJ;QACJ,OAAO;YACH,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;gBACvC,OAAO;oBAAE,IAAI;oBAAS,MAAM;gBAAa;gBACzC,QAAQ;oBACJ,IAAI;oBACJ,MAAM;oBACN,OAAO;oBACP,UAAU;oBACV,MAAM;gBACV;YACJ;QACJ;QAEA,sDAAsD;QACtD,IAAI,CAAC,OAAO;YACR,OAAO;gBAAE,QAAQ;gBAAO,SAAS;YAA2C;QAChF;QAEA,gCAAgC;QAChC,OAAO;YAAE,QAAQ;YAAM;QAAM;IACjC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;YAAE,QAAQ;YAAO,SAAS;QAAwB;IAC7D;AACJ","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/utils/saveFiles.ts"],"sourcesContent":["import { writeFile, mkdir, unlink, stat } from 'fs/promises';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nexport interface UploadedFileInfo {\r\n    originalName: string;\r\n    savedAs: string;\r\n    size: number;\r\n    type: string;\r\n    url: string;\r\n}\r\n\r\n// Helper: ensure directory exists\r\nasync function ensureDir(dirPath: string) {\r\n    if (!fs.existsSync(dirPath)) {\r\n        // console.log(`üìÅ Directory not found. Creating: ${dirPath}`);\r\n        await mkdir(dirPath, { recursive: true });\r\n    } else {\r\n        // console.log(`‚úÖ Directory already exists: ${dirPath}`);\r\n    }\r\n}\r\n\r\n// Helper: generate file name\r\nfunction generateFileName(\r\n    originalName: string,\r\n    pattern: 'original' | 'slug' | 'slug-unique' | 'custom',\r\n    customName?: string\r\n) {\r\n    const ext = path.extname(originalName);\r\n    const base = path.basename(originalName, ext);\r\n\r\n    switch (pattern) {\r\n        case 'original':\r\n            // console.log(`üìù Using original filename: ${originalName}`);\r\n            return originalName;\r\n        case 'custom':\r\n            const name = `${customName}${ext}`;\r\n            // console.log(`üìù Using custom filename: ${name}`);\r\n            return name;\r\n        case 'slug':\r\n            const slug = base.toLowerCase().replace(/[^a-z0-9]/g, '-');\r\n            const slugName = `${slug}${ext}`;\r\n            // console.log(`üìù Using slug filename: ${slugName}`);\r\n            return slugName;\r\n        case 'slug-unique':\r\n            const unique = `${base.toLowerCase().replace(/[^a-z0-9]/g, '-')}-${Date.now()}`;\r\n            const slugUniqueName = `${unique}${ext}`;\r\n            // console.log(`üìù Using slug-unique filename: ${slugUniqueName}`);\r\n            return slugUniqueName;\r\n        default:\r\n            return originalName;\r\n    }\r\n}\r\n\r\ninterface SaveFileOptions {\r\n    dir: string;\r\n    pattern: 'original' | 'slug' | 'slug-unique' | 'custom';\r\n    customName?: string;\r\n    multiple?: boolean;\r\n}\r\n\r\nexport async function saveFilesFromFormData(\r\n    formData: FormData,\r\n    fieldName: string,\r\n    options: SaveFileOptions\r\n): Promise<UploadedFileInfo | UploadedFileInfo[]> {\r\n    const { dir, pattern, customName, multiple = false } = options;\r\n\r\n    // console.log(`üöÄ Starting file save from field: \"${fieldName}\"`);\r\n    await ensureDir(dir);\r\n    let result: UploadedFileInfo[] | UploadedFileInfo | null = multiple ? [] : null;\r\n\r\n    const files = formData.getAll(fieldName).filter(\r\n        (item): item is File => item instanceof File && item.name.length > 0\r\n    );\r\n\r\n    // console.log(`üì¶ Total files to process: ${files.length}`);\r\n\r\n    for (let index = 0; index < files.length; index++) {\r\n        const file = files[index];\r\n\r\n        const nameToUse =\r\n            pattern === 'custom' && multiple\r\n                ? `${customName}-${index + 1}`\r\n                : pattern === 'custom'\r\n                    ? customName!\r\n                    : file.name;\r\n\r\n        const finalFileName = generateFileName(nameToUse, pattern, nameToUse);\r\n\r\n        const bytes = await file.arrayBuffer();\r\n        const buffer = Buffer.from(bytes);\r\n        const fullPath = path.join(dir, finalFileName);\r\n\r\n        await writeFile(fullPath, buffer);\r\n\r\n        const fileUrl = fullPath.split('public')[1].replace(/\\\\/g, '/');\r\n\r\n        const info: UploadedFileInfo = {\r\n            originalName: file.name,\r\n            savedAs: finalFileName,\r\n            size: file.size,\r\n            type: file.type,\r\n            url: `/uploads${fileUrl}`,\r\n        };\r\n\r\n        if (multiple && Array.isArray(result)) {\r\n            result.push(info);\r\n        } else {\r\n            result = info;\r\n        }\r\n    }\r\n\r\n    return result!;\r\n\r\n}\r\n\r\n/**\r\n * Deletes a file from the file system\r\n * @param filePath Absolute path to the file\r\n * @returns A boolean indicating if the file was deleted successfully\r\n */\r\nexport async function deleteFile(filePath: string): Promise<boolean> {\r\n    try {\r\n        await stat(filePath); // Throws if file doesn't exist\r\n        await unlink(filePath);\r\n        return true;\r\n    } catch (error) {\r\n        console.log(`error - File not found or couldn't be deleted: ${filePath}`, error);\r\n        return false;\r\n    }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAUA,kCAAkC;AAClC,eAAe,UAAU,OAAe;IACpC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,UAAU;QACzB,+DAA+D;QAC/D,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EAAE,SAAS;YAAE,WAAW;QAAK;IAC3C,OAAO;IACH,yDAAyD;IAC7D;AACJ;AAEA,6BAA6B;AAC7B,SAAS,iBACL,YAAoB,EACpB,OAAuD,EACvD,UAAmB;IAEnB,MAAM,MAAM,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;IACzB,MAAM,OAAO,iGAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,cAAc;IAEzC,OAAQ;QACJ,KAAK;YACD,8DAA8D;YAC9D,OAAO;QACX,KAAK;YACD,MAAM,OAAO,GAAG,aAAa,KAAK;YAClC,oDAAoD;YACpD,OAAO;QACX,KAAK;YACD,MAAM,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc;YACtD,MAAM,WAAW,GAAG,OAAO,KAAK;YAChC,sDAAsD;YACtD,OAAO;QACX,KAAK;YACD,MAAM,SAAS,GAAG,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI;YAC/E,MAAM,iBAAiB,GAAG,SAAS,KAAK;YACxC,mEAAmE;YACnE,OAAO;QACX;YACI,OAAO;IACf;AACJ;AASO,eAAe,sBAClB,QAAkB,EAClB,SAAiB,EACjB,OAAwB;IAExB,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,KAAK,EAAE,GAAG;IAEvD,mEAAmE;IACnE,MAAM,UAAU;IAChB,IAAI,SAAuD,WAAW,EAAE,GAAG;IAE3E,MAAM,QAAQ,SAAS,MAAM,CAAC,WAAW,MAAM,CAC3C,CAAC,OAAuB,gBAAgB,QAAQ,KAAK,IAAI,CAAC,MAAM,GAAG;IAGvE,6DAA6D;IAE7D,IAAK,IAAI,QAAQ,GAAG,QAAQ,MAAM,MAAM,EAAE,QAAS;QAC/C,MAAM,OAAO,KAAK,CAAC,MAAM;QAEzB,MAAM,YACF,YAAY,YAAY,WAClB,GAAG,WAAW,CAAC,EAAE,QAAQ,GAAG,GAC5B,YAAY,WACR,aACA,KAAK,IAAI;QAEvB,MAAM,gBAAgB,iBAAiB,WAAW,SAAS;QAE3D,MAAM,QAAQ,MAAM,KAAK,WAAW;QACpC,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,KAAK;QAEhC,MAAM,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QAE1B,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;QAE3D,MAAM,OAAyB;YAC3B,cAAc,KAAK,IAAI;YACvB,SAAS;YACT,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf,KAAK,CAAC,QAAQ,EAAE,SAAS;QAC7B;QAEA,IAAI,YAAY,MAAM,OAAO,CAAC,SAAS;YACnC,OAAO,IAAI,CAAC;QAChB,OAAO;YACH,SAAS;QACb;IACJ;IAEA,OAAO;AAEX;AAOO,eAAe,WAAW,QAAgB;IAC7C,IAAI;QACA,MAAM,CAAA,GAAA,qHAAA,CAAA,OAAI,AAAD,EAAE,WAAW,+BAA+B;QACrD,MAAM,CAAA,GAAA,qHAAA,CAAA,SAAM,AAAD,EAAE;QACb,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,CAAC,+CAA+C,EAAE,UAAU,EAAE;QAC1E,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/utils/validateFormData.ts"],"sourcesContent":["interface ValidationOptions {\r\n    requiredFields?: string[];\r\n    patternValidations?: Record<string, 'string' | 'number' | 'boolean'>;\r\n}\r\n\r\ninterface ValidationResult {\r\n    isValid: boolean;\r\n    errors: string[];\r\n}\r\n\r\nexport function validateFormData(\r\n    formData: FormData,\r\n    { requiredFields = [], patternValidations = {} }: ValidationOptions\r\n): ValidationResult {\r\n    const errors: string[] = [];\r\n\r\n    // ‚úÖ Required fields check\r\n    for (const field of requiredFields) {\r\n        const value = formData.get(field);\r\n        if (value === null || value === '' || (typeof value === 'string' && value.trim() === '')) {\r\n            errors.push(`Field \"${field}\" is required`);\r\n        }\r\n    }\r\n\r\n    // ‚úÖ Type pattern check (only if field exists)\r\n    for (const [field, expectedType] of Object.entries(patternValidations)) {\r\n        const value = formData.get(field);\r\n        if (value !== null) {\r\n            const val = typeof value === 'string' ? value.trim() : value;\r\n\r\n            if (\r\n                (expectedType === 'number' && isNaN(Number(val))) ||\r\n                (expectedType === 'boolean' &&\r\n                    !['true', 'false', '1', '0', true, false, 1, 0].includes(val.toString().toLowerCase()))\r\n            ) {\r\n                errors.push(`Field \"${field}\" must be of type ${expectedType}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors,\r\n    };\r\n}\r\n"],"names":[],"mappings":";;;AAUO,SAAS,iBACZ,QAAkB,EAClB,EAAE,iBAAiB,EAAE,EAAE,qBAAqB,CAAC,CAAC,EAAqB;IAEnE,MAAM,SAAmB,EAAE;IAE3B,0BAA0B;IAC1B,KAAK,MAAM,SAAS,eAAgB;QAChC,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,IAAI,UAAU,QAAQ,UAAU,MAAO,OAAO,UAAU,YAAY,MAAM,IAAI,OAAO,IAAK;YACtF,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,aAAa,CAAC;QAC9C;IACJ;IAEA,8CAA8C;IAC9C,KAAK,MAAM,CAAC,OAAO,aAAa,IAAI,OAAO,OAAO,CAAC,oBAAqB;QACpE,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,IAAI,UAAU,MAAM;YAChB,MAAM,MAAM,OAAO,UAAU,WAAW,MAAM,IAAI,KAAK;YAEvD,IACI,AAAC,iBAAiB,YAAY,MAAM,OAAO,SAC1C,iBAAiB,aACd,CAAC;gBAAC;gBAAQ;gBAAS;gBAAK;gBAAK;gBAAM;gBAAO;gBAAG;aAAE,CAAC,QAAQ,CAAC,IAAI,QAAQ,GAAG,WAAW,KACzF;gBACE,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,kBAAkB,EAAE,cAAc;YAClE;QACJ;IACJ;IAEA,OAAO;QACH,SAAS,OAAO,MAAM,KAAK;QAC3B;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/app/models/product.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\r\n\r\ninterface Product {\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    quantity: number;\r\n    status: boolean;\r\n    image?: string;\r\n}\r\n\r\nexport async function generateProductSlug(name: string) {\r\n    let slug = name.toLowerCase().replace(/[^a-z0-9]/g, '-');\r\n    let isSlugTaken = true;\r\n    let suffix = 0;\r\n\r\n    // Keep checking until an unused slug is found\r\n    while (isSlugTaken) {\r\n        const existingProduct = await prisma.product.findUnique({\r\n            where: { slug },\r\n        });\r\n\r\n        if (existingProduct) {\r\n            // If the slug already exists, add a suffix (-1, -2, etc.)\r\n            suffix++;\r\n            slug = `${name.toLowerCase().replace(/[^a-z0-9]/g, '-')}-${suffix}`;\r\n        } else {\r\n            // If the slug is not taken, set isSlugTaken to false to exit the loop\r\n            isSlugTaken = false;\r\n        }\r\n    }\r\n\r\n    return slug;\r\n}\r\n\r\nexport async function createProduct(adminId: number, adminRole: string, product: Product) {\r\n\r\n    try {\r\n        const { name, description, price, quantity, status, image } = product;\r\n\r\n        // Generate a unique slug for the product\r\n        const slug = await generateProductSlug(name);\r\n\r\n        const newProduct = await prisma.product.create({\r\n            data: {\r\n                name,\r\n                description,\r\n                price,\r\n                quantity,\r\n                status,\r\n                slug,\r\n                image,\r\n                createdAt: new Date(),\r\n                createdBy: adminId,\r\n                createdByRole: adminRole,\r\n            },\r\n        });\r\n\r\n        return { status: true, product: newProduct };\r\n    } catch (error) {\r\n        console.error(`Error creating product:`, error);\r\n        return { status: false, message: \"Internal Server Error\" };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAWO,eAAe,oBAAoB,IAAY;IAClD,IAAI,OAAO,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc;IACpD,IAAI,cAAc;IAClB,IAAI,SAAS;IAEb,8CAA8C;IAC9C,MAAO,YAAa;QAChB,MAAM,kBAAkB,MAAM,sHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACpD,OAAO;gBAAE;YAAK;QAClB;QAEA,IAAI,iBAAiB;YACjB,0DAA0D;YAC1D;YACA,OAAO,GAAG,KAAK,WAAW,GAAG,OAAO,CAAC,cAAc,KAAK,CAAC,EAAE,QAAQ;QACvE,OAAO;YACH,sEAAsE;YACtE,cAAc;QAClB;IACJ;IAEA,OAAO;AACX;AAEO,eAAe,cAAc,OAAe,EAAE,SAAiB,EAAE,OAAgB;IAEpF,IAAI;QACA,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG;QAE9D,yCAAyC;QACzC,MAAM,OAAO,MAAM,oBAAoB;QAEvC,MAAM,aAAa,MAAM,sHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC3C,MAAM;gBACF;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,WAAW,IAAI;gBACf,WAAW;gBACX,eAAe;YACnB;QACJ;QAEA,OAAO;YAAE,QAAQ;YAAM,SAAS;QAAW;IAC/C,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,uBAAuB,CAAC,EAAE;QACzC,OAAO;YAAE,QAAQ;YAAO,SAAS;QAAwB;IAC7D;AACJ","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/app/api/product/create/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport path from 'path';\r\n\r\nimport { isUserExist } from \"@/utils/authUtils\";\r\nimport { saveFilesFromFormData, deleteFile } from '@/utils/saveFiles';\r\nimport { validateFormData } from '@/utils/validateFormData';\r\nimport { createProduct } from '@/app/models/product';\r\n\r\ntype UploadedFileInfo = {\r\n  originalName: string;\r\n  savedAs: string;\r\n  size: number;\r\n  type: string;\r\n  url: string;\r\n};\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    // Get headers\r\n    const adminIdHeader = req.headers.get(\"x-admin-id\");\r\n    const adminRole = req.headers.get(\"x-admin-role\");\r\n\r\n    const adminId = Number(adminIdHeader);\r\n    if (!adminIdHeader || isNaN(adminId)) {\r\n      return NextResponse.json(\r\n        { error: \"User ID is missing or invalid in request\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if admin exists\r\n    const userCheck: UserCheckResult = await isUserExist(adminId, String(adminRole));\r\n    if (!userCheck.status) {\r\n      return NextResponse.json({ error: `User Not Found: ${userCheck.message}` }, { status: 404 });\r\n    }\r\n\r\n    const isMultipleImages = false; // Set true to allow multiple image uploads\r\n\r\n    const formData = await req.formData();\r\n\r\n    // Validate input\r\n    const validation = validateFormData(formData, {\r\n      requiredFields: ['name', 'price', 'quantity'],\r\n      patternValidations: {\r\n        price: 'number',\r\n        quantity: 'number',\r\n        status: 'boolean',\r\n      },\r\n    });\r\n\r\n    if (!validation.isValid) {\r\n      return NextResponse.json({ status: false, error: validation.errors }, { status: 400 });\r\n    }\r\n\r\n    // Extract fields\r\n    const name = formData.get('name') as string;\r\n    const description = (formData.get('description') as string) || '';\r\n    const price = parseFloat(formData.get('price') as string);\r\n    const quantity = parseInt(formData.get('quantity') as string, 10);\r\n    const statusRaw = formData.get('status')?.toString().toLowerCase();\r\n    const status = statusRaw === 'true' || statusRaw === '1';\r\n\r\n    // File upload\r\n    const uploadDir = path.join(process.cwd(), 'public', 'uploads', 'products');\r\n    const fileData = await saveFilesFromFormData(formData, 'image', {\r\n      dir: uploadDir,\r\n      pattern: 'slug-unique',\r\n      multiple: isMultipleImages,\r\n    });\r\n\r\n    const image = isMultipleImages\r\n      ? (fileData as UploadedFileInfo[]).map(file => file.url).join(', ')\r\n      : (fileData as UploadedFileInfo).url;\r\n\r\n    const productPayload = {\r\n      name,\r\n      description,\r\n      price,\r\n      quantity,\r\n      status,\r\n      image,\r\n    };\r\n\r\n    console.log(\"üì¶ productPayload:\", productPayload);\r\n\r\n    const productCreateResult = await createProduct(adminId, String(adminRole), productPayload);\r\n\r\n    if (productCreateResult?.status) {\r\n      return NextResponse.json({ status: true, product: productCreateResult.product }, { status: 200 });\r\n    }\r\n\r\n    // ‚ùå Product creation failed ‚Äî delete uploaded file(s)\r\n    const deletePath = (file: UploadedFileInfo) => path.join(uploadDir, path.basename(file.url));\r\n\r\n    if (isMultipleImages && Array.isArray(fileData)) {\r\n      await Promise.all(fileData.map(file => deleteFile(deletePath(file))));\r\n    } else {\r\n      await deleteFile(deletePath(fileData as UploadedFileInfo));\r\n    }\r\n\r\n    return NextResponse.json(\r\n      { status: false, error: productCreateResult?.message || 'Product creation failed' },\r\n      { status: 500 }\r\n    );\r\n  } catch (err: unknown) {\r\n    const error = err instanceof Error ? err.message : 'Internal Server Error';\r\n    console.error('‚ùå Product Creation Error:', err);\r\n    return NextResponse.json({ status: false, error }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}