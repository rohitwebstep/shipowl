{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep2/shipping-owl/src/app/api/images/%5B...path%5D/route.ts"],"sourcesContent":["// app/api/images/[...path]/route.ts\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport async function GET(req: NextRequest, { params }: { params: { path: string[] } }) {\r\n\r\n    console.log(`params - `, params);\r\n    console.log(`params.path - `, params.path);\r\n\r\n    const filePath = path.join(...params.path);\r\n\r\n    console.log(`filePath - `, filePath);\r\n\r\n\r\n    try {\r\n        const fileBuffer = await fs.readFile(filePath);\r\n        const ext = path.extname(filePath).substring(1);\r\n        return new NextResponse(fileBuffer, {\r\n            status: 200,\r\n            headers: { 'Content-Type': `image/${ext}` },\r\n        });\r\n    } catch (err) {\r\n        return NextResponse.json({ error: 'File not found' }, { status: 404 });\r\n    }\r\n}\r\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;AACpC;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAgB,EAAE,EAAE,MAAM,EAAkC;IAElF,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE;IACzB,QAAQ,GAAG,CAAC,CAAC,cAAc,CAAC,EAAE,OAAO,IAAI;IAEzC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,IAAI,OAAO,IAAI;IAEzC,QAAQ,GAAG,CAAC,CAAC,WAAW,CAAC,EAAE;IAG3B,IAAI;QACA,MAAM,aAAa,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC;QACrC,MAAM,MAAM,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,UAAU,SAAS,CAAC;QAC7C,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,YAAY;YAChC,QAAQ;YACR,SAAS;gBAAE,gBAAgB,CAAC,MAAM,EAAE,KAAK;YAAC;QAC9C;IACJ,EAAE,OAAO,KAAK;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACxE;AACJ","debugId":null}}]
}