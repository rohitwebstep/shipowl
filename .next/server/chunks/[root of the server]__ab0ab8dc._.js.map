{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/sleeping-owl/src/utils/authUtils.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\r\n\r\nexport function generateToken(adminId: string) {\r\n    return jwt.sign({ adminId }, SECRET_KEY, { expiresIn: '1h' });\r\n}\r\n\r\nexport function verifyToken(token: string) {\r\n    try {\r\n        return jwt.verify(token, SECRET_KEY);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,SAAS,cAAc,OAAe;IACzC,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;IAAQ,GAAG,YAAY;QAAE,WAAW;IAAK;AAC/D;AAEO,SAAS,YAAY,KAAa;IACrC,IAAI;QACA,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/sleeping-owl/src/app/api/admin/auth/verify/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { verifyToken } from '@/utils/authUtils';\r\n\r\nexport async function GET(req: NextRequest) {\r\n    const token = req.headers.get('authorization')?.split(' ')[1];\r\n    if (!token) {\r\n        return NextResponse.json({ error: 'No token provided' }, { status: 401 });\r\n    }\r\n\r\n    const admin = verifyToken(token);\r\n    console.log(`admin - `, admin);\r\n    if (!admin) {\r\n        return NextResponse.json({ error: 'Invalid token' }, { status: 403 });\r\n    }\r\n\r\n\r\n    return NextResponse.json({ message: 'Token is valid', adminId: admin.adminId, admin: admin });\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAgB;IACtC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;IAC7D,IAAI,CAAC,OAAO;QACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAoB,GAAG;YAAE,QAAQ;QAAI;IAC3E;IAEA,MAAM,QAAQ,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE;IACxB,IAAI,CAAC,OAAO;QACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACvE;IAGA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAkB,SAAS,MAAM,OAAO;QAAE,OAAO;IAAM;AAC/F","debugId":null}}]
}