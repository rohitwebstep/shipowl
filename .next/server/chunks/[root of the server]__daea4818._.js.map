{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/NextJS/sleeping-owl/src/utils/authUtils.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || '3792e68ef011e0f236a60627ddf304e1bb64d76d5e4dbebca4579490d3c4e6d8c618456f29aa6f92f8dc3cbd4414362b47d4545ffdc0b9549e43b629c39282bb36b9cff7295fc4269d765d59e4d8a811113b911080878f7647e0329a072afdc06d2ecd658c8e79f2ad04e74dbffc45ed10c850b02afdf10b209989910fadaf7ddbef0bb7d0cff27ed8f4a10d3415420107ddba2d9ac8bcf4f7b3b942b5bbe600d9007f9e88b2451cbfaeaab239677b3ed28eaa860eb40fd5d0e36969b6943a3215d2a9f1125ca06be806f8d73d8ae642c4a29b3a728cf42305e1150e4c1f3ed6e14bd3662531cd14357c6b3f3a57095609811f5e9459307cbe70f9b7a159c8d3';\r\n\r\nexport function generateToken(userId: string) {\r\n    return jwt.sign({ userId }, SECRET_KEY, { expiresIn: '1h' });\r\n}\r\n\r\nexport function verifyToken(token: string) {\r\n    try {\r\n        return jwt.verify(token, SECRET_KEY);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,SAAS,cAAc,MAAc;IACxC,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;IAAO,GAAG,YAAY;QAAE,WAAW;IAAK;AAC9D;AAEO,SAAS,YAAY,KAAa;IACrC,IAAI;QACA,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/NextJS/sleeping-owl/src/utils/hashUtils.ts"],"sourcesContent":["import bcrypt from 'bcryptjs';\r\n\r\nexport async function hashPassword(password: string) {\r\n    const salt = await bcrypt.genSalt(10);\r\n    return bcrypt.hash(password, salt);\r\n}\r\n\r\nexport async function comparePassword(password: string, hashedPassword: string) {\r\n    return bcrypt.compare(password, hashedPassword);\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,aAAa,QAAgB;IAC/C,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC;IAClC,OAAO,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;AACjC;AAEO,eAAe,gBAAgB,QAAgB,EAAE,cAAsB;IAC1E,OAAO,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;AACpC","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/NextJS/sleeping-owl/src/app/api/controllers/admin/authController.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { generateToken } from '@/utils/authUtils';\r\nimport { comparePassword } from '@/utils/hashUtils';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n// Dummy User Database (Replace with actual DB)\r\nconst users = [\r\n    { id: '1', email: 'admin@example.com', password: '$2b$10$PZmGqk9pWg/yH6Z1zuhef.6OOkHLKVNKIFLJCO/AcarRtt0OC4o8O' }, // bcrypt-hashed password\r\n];\r\n\r\nexport async function handleLogin(req: NextRequest) {\r\n    const { email, password } = await req.json();\r\n\r\n    const user = users.find((u) => u.email === email);\r\n    if (!user) {\r\n        return NextResponse.json({ error: 'Invalid email or password' }, { status: 401 });\r\n    }\r\n\r\n    // Hash the password using bcrypt\r\n    const salt = await bcrypt.genSalt(10); // Generates a salt with 10 rounds\r\n    const hashedPassword = await bcrypt.hash(password, salt);\r\n\r\n    console.log(`Hashed Password: ${hashedPassword}`); // Log the hashed password\r\n\r\n    const isPasswordValid = await comparePassword(password, user.password);\r\n    if (!isPasswordValid) {\r\n        return NextResponse.json({ error: 'Invalid email or password' }, { status: 401 });\r\n    }\r\n\r\n    const token = generateToken(user.id);\r\n    return NextResponse.json({ message: 'Login successful', token });\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,+CAA+C;AAC/C,MAAM,QAAQ;IACV;QAAE,IAAI;QAAK,OAAO;QAAqB,UAAU;IAA+D;CACnH;AAEM,eAAe,YAAY,GAAgB;IAC9C,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,IAAM,EAAE,KAAK,KAAK;IAC3C,IAAI,CAAC,MAAM;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,iCAAiC;IACjC,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,KAAK,kCAAkC;IACzE,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;IAEnD,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE,gBAAgB,GAAG,0BAA0B;IAE7E,MAAM,kBAAkB,MAAM,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE,UAAU,KAAK,QAAQ;IACrE,IAAI,CAAC,iBAAiB;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,MAAM,QAAQ,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,EAAE;IACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAoB;IAAM;AAClE","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/NextJS/sleeping-owl/src/app/api/admin/auth/login/route.ts"],"sourcesContent":["import { handleLogin } from '../../../controllers/admin/authController';\r\nimport { NextRequest } from 'next/server';\r\n\r\nexport async function POST(req: NextRequest) {\r\n    return handleLogin(req);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,KAAK,GAAgB;IACvC,OAAO,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD,EAAE;AACvB","debugId":null}}]
}