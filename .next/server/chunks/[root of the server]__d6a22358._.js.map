{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/utils/saveFiles.ts"],"sourcesContent":["import { writeFile, mkdir } from 'fs/promises';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\n// Helper: ensure directory exists\r\nasync function ensureDir(dirPath: string) {\r\n  if (!fs.existsSync(dirPath)) {\r\n    await mkdir(dirPath, { recursive: true });\r\n  }\r\n}\r\n\r\n// Helper: generate file name\r\nfunction generateFileName(originalName: string, pattern: 'original' | 'slug' | 'slug-unique' | 'custom', customName?: string) {\r\n  const ext = path.extname(originalName);\r\n  const base = path.basename(originalName, ext);\r\n\r\n  switch (pattern) {\r\n    case 'original':\r\n      return originalName;\r\n    case 'custom':\r\n      return `${customName}${ext}`;\r\n    default:\r\n      return originalName;\r\n  }\r\n}\r\n\r\ninterface SaveFileOptions {\r\n  dir: string;\r\n  pattern: 'original' | 'slug' | 'slug-unique' | 'custom';\r\n  customName?: string;\r\n  multiple?: boolean;\r\n}\r\n\r\nexport async function saveFilesFromFormData(\r\n  formData: FormData,\r\n  fieldName: string,\r\n  options: SaveFileOptions\r\n): Promise<any> {\r\n  const { dir, pattern, customName, multiple = false } = options;\r\n\r\n  await ensureDir(dir);\r\n  const result: any = multiple ? [] : null;\r\n\r\n  const files = formData.getAll(fieldName).filter((item): item is File => item instanceof File && item.name);\r\n\r\n  for (let index = 0; index < files.length; index++) {\r\n    const file = files[index];\r\n    const nameToUse =\r\n      pattern === 'custom' && multiple\r\n        ? `${customName}-${index + 1}`\r\n        : pattern === 'custom'\r\n        ? customName!\r\n        : file.name;\r\n\r\n    const finalFileName = generateFileName(nameToUse, pattern, nameToUse);\r\n    const bytes = await file.arrayBuffer();\r\n    const buffer = Buffer.from(bytes);\r\n    const fullPath = path.join(dir, finalFileName);\r\n\r\n    await writeFile(fullPath, buffer);\r\n    const fileUrl = fullPath.split('public')[1].replace(/\\\\/g, '/'); // for URL use\r\n\r\n    const info = {\r\n      originalName: file.name,\r\n      savedAs: finalFileName,\r\n      size: file.size,\r\n      type: file.type,\r\n      url: `/uploads${fileUrl}`,\r\n    };\r\n\r\n    if (multiple) {\r\n      result.push(info);\r\n    } else {\r\n      return info;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,kCAAkC;AAClC,eAAe,UAAU,OAAe;IACtC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,UAAU;QAC3B,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EAAE,SAAS;YAAE,WAAW;QAAK;IACzC;AACF;AAEA,6BAA6B;AAC7B,SAAS,iBAAiB,YAAoB,EAAE,OAAuD,EAAE,UAAmB;IAC1H,MAAM,MAAM,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;IACzB,MAAM,OAAO,iGAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,cAAc;IAEzC,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO,GAAG,aAAa,KAAK;QAC9B;YACE,OAAO;IACX;AACF;AASO,eAAe,sBACpB,QAAkB,EAClB,SAAiB,EACjB,OAAwB;IAExB,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,KAAK,EAAE,GAAG;IAEvD,MAAM,UAAU;IAChB,MAAM,SAAc,WAAW,EAAE,GAAG;IAEpC,MAAM,QAAQ,SAAS,MAAM,CAAC,WAAW,MAAM,CAAC,CAAC,OAAuB,gBAAgB,QAAQ,KAAK,IAAI;IAEzG,IAAK,IAAI,QAAQ,GAAG,QAAQ,MAAM,MAAM,EAAE,QAAS;QACjD,MAAM,OAAO,KAAK,CAAC,MAAM;QACzB,MAAM,YACJ,YAAY,YAAY,WACpB,GAAG,WAAW,CAAC,EAAE,QAAQ,GAAG,GAC5B,YAAY,WACZ,aACA,KAAK,IAAI;QAEf,MAAM,gBAAgB,iBAAiB,WAAW,SAAS;QAC3D,MAAM,QAAQ,MAAM,KAAK,WAAW;QACpC,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,KAAK;QAEhC,MAAM,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD,EAAE,UAAU;QAC1B,MAAM,UAAU,SAAS,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,MAAM,cAAc;QAE/E,MAAM,OAAO;YACX,cAAc,KAAK,IAAI;YACvB,SAAS;YACT,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf,KAAK,CAAC,QAAQ,EAAE,SAAS;QAC3B;QAEA,IAAI,UAAU;YACZ,OAAO,IAAI,CAAC;QACd,OAAO;YACL,OAAO;QACT;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/app/api/product/create/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { saveFilesFromFormData } from '@/utils/saveFiles';\r\nimport path from 'path';\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const formData = await req.formData();\r\n\r\n    const uploadPath = path.join(process.cwd(), 'public', 'uploads', 'products');\r\n\r\n    const fileData = await saveFilesFromFormData(formData, 'productImages', {\r\n      dir: uploadPath,\r\n      pattern: 'original',\r\n      multiple: true,\r\n    });\r\n\r\n    return NextResponse.json({ success: true, files: fileData });\r\n  } catch (err) {\r\n    console.error('❌ File Save Error:', err);\r\n    return NextResponse.json({ success: false, error: 'File upload failed' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,WAAW,MAAM,IAAI,QAAQ;QAEnC,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,WAAW;QAEjE,MAAM,WAAW,MAAM,CAAA,GAAA,2HAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU,iBAAiB;YACtE,KAAK;YACL,SAAS;YACT,UAAU;QACZ;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,OAAO;QAAS;IAC5D,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1F;AACF","debugId":null}}]
}