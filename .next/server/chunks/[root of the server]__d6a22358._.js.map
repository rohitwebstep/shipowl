{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/utils/saveFiles.ts"],"sourcesContent":["import { writeFile, mkdir } from 'fs/promises';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\n// Helper: ensure directory exists\r\nasync function ensureDir(dirPath: string) {\r\n    if (!fs.existsSync(dirPath)) {\r\n        console.log(`üìÅ Directory not found. Creating: ${dirPath}`);\r\n        await mkdir(dirPath, { recursive: true });\r\n    } else {\r\n        console.log(`‚úÖ Directory already exists: ${dirPath}`);\r\n    }\r\n}\r\n\r\n// Helper: generate file name\r\nfunction generateFileName(\r\n    originalName: string,\r\n    pattern: 'original' | 'slug' | 'slug-unique' | 'custom',\r\n    customName?: string\r\n) {\r\n    const ext = path.extname(originalName);\r\n    const base = path.basename(originalName, ext);\r\n\r\n    switch (pattern) {\r\n        case 'original':\r\n            console.log(`üìù Using original filename: ${originalName}`);\r\n            return originalName;\r\n        case 'custom':\r\n            const name = `${customName}${ext}`;\r\n            console.log(`üìù Using custom filename: ${name}`);\r\n            return name;\r\n        case 'slug':\r\n            const slug = base.toLowerCase().replace(/[^a-z0-9]/g, '-');\r\n            const slugName = `${slug}${ext}`;\r\n            console.log(`üìù Using slug filename: ${slugName}`);\r\n            return slugName;\r\n        case 'slug-unique':\r\n            const unique = `${base.toLowerCase().replace(/[^a-z0-9]/g, '-')}-${Date.now()}`;\r\n            const slugUniqueName = `${unique}${ext}`;\r\n            console.log(`üìù Using slug-unique filename: ${slugUniqueName}`);\r\n            return slugUniqueName;\r\n        default:\r\n            return originalName;\r\n    }\r\n}\r\n\r\ninterface SaveFileOptions {\r\n    dir: string;\r\n    pattern: 'original' | 'slug' | 'slug-unique' | 'custom';\r\n    customName?: string;\r\n    multiple?: boolean;\r\n}\r\n\r\nexport async function saveFilesFromFormData(\r\n    formData: FormData,\r\n    fieldName: string,\r\n    options: SaveFileOptions\r\n): Promise<any> {\r\n    const { dir, pattern, customName, multiple = false } = options;\r\n\r\n    console.log(`üöÄ Starting file save from field: \"${fieldName}\"`);\r\n    await ensureDir(dir);\r\n    const result: any = multiple ? [] : null;\r\n\r\n    const files = formData.getAll(fieldName).filter(\r\n        (item): item is File => item instanceof File && item.name\r\n    );\r\n\r\n    console.log(`üì¶ Total files to process: ${files.length}`);\r\n\r\n    for (let index = 0; index < files.length; index++) {\r\n        const file = files[index];\r\n        console.log(`üìÑ Processing file ${index + 1}: ${file.name}`);\r\n\r\n        const nameToUse =\r\n            pattern === 'custom' && multiple\r\n                ? `${customName}-${index + 1}`\r\n                : pattern === 'custom'\r\n                    ? customName!\r\n                    : file.name;\r\n\r\n        const finalFileName = generateFileName(nameToUse, pattern, nameToUse);\r\n\r\n        const bytes = await file.arrayBuffer();\r\n        const buffer = Buffer.from(bytes);\r\n        const fullPath = path.join(dir, finalFileName);\r\n\r\n        console.log(`üíæ Saving file to: ${fullPath}`);\r\n        await writeFile(fullPath, buffer);\r\n        console.log(`‚úÖ Saved file ${file.name} as ${finalFileName}`);\r\n\r\n        const fileUrl = fullPath.split('public')[1].replace(/\\\\/g, '/');\r\n\r\n        const info = {\r\n            originalName: file.name,\r\n            savedAs: finalFileName,\r\n            size: file.size,\r\n            type: file.type,\r\n            url: `/uploads${fileUrl}`,\r\n        };\r\n\r\n        console.log(`üìÅ File saved info:`, info);\r\n\r\n        if (multiple) {\r\n            result.push(info);\r\n        } else {\r\n            return info;\r\n        }\r\n    }\r\n\r\n    console.log(`üéâ All files processed.`);\r\n    return result;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Webstep/Shipping%20OWL/2025/April/09/WORKING/sleeping-owl/src/app/api/product/create/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { saveFilesFromFormData } from '@/utils/saveFiles';\r\nimport path from 'path';\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const formData = await req.formData();\r\n\r\n    const uploadPath = path.join(process.cwd(), 'tmp', 'uploads', 'products');\r\n\r\n    const fileData = await saveFilesFromFormData(formData, 'image', {\r\n      dir: uploadPath,\r\n      pattern: 'slug-unique',\r\n      multiple: true,\r\n    });\r\n\r\n    return NextResponse.json({ success: true, files: fileData });\r\n  } catch (err) {\r\n    console.error('‚ùå File Save Error:', err);\r\n    return NextResponse.json({ success: false, error: 'File upload failed' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,WAAW,MAAM,IAAI,QAAQ;QAEnC,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,WAAW;QAEjE,MAAM,WAAW,MAAM,CAAA,GAAA,2HAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU,SAAS;YAC9D,KAAK;YACL,SAAS;YACT,UAAU;QACZ;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,OAAO;QAAS;IAC5D,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1F;AACF","debugId":null}}]
}